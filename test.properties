##
## DO NOT EDIT THIS FILE.
##
## To update the properties of this file, create a separate properties file
## named "test.${user.name}.properties" with the properties to overwrite.
##

##
## Analytics Cloud
##

    analytics.cloud.asah.build=true
    analytics.cloud.asah.backend.url=http://osbasahbackend:8080
    analytics.cloud.asah.dir=../com-liferay-osb-asah-private
    analytics.cloud.asah.prometheus.port=9091
    analytics.cloud.asah.publisher.url=http://osbasahpublisher:8080

    analytics.cloud.cucumber.options=\
        --tags @priority_1 \
        \
        --tags ~@blocked \
        --tags ~@prototype \
        --tags ~@skip \
        \
        src/testIntegration/resources/features

    analytics.cloud.faro.build=true
    analytics.cloud.faro.container.name=com-liferay-osb-faro-private
    analytics.cloud.faro.data.creator.api=1.0.4
    analytics.cloud.faro.data.creator.impl=1.0.7
    analytics.cloud.faro.data.csv=${analytics.cloud.faro.dir}/osb-faro-functional-test/src/testIntegration/resources/csv/ac-data-generator.csv
    analytics.cloud.faro.dir=../com-liferay-osb-faro-private
    analytics.cloud.faro.dxp.port=8081
    analytics.cloud.faro.frontend.url=http://osbfarofrontend:8080
    analytics.cloud.faro.image.name=liferay/com-liferay-osb-faro:asah-local-latest
    analytics.cloud.faro.osgi.console.port=11312
    analytics.cloud.project.name=com-liferay-osb-asah-private

##
## Apache Directory
##

    apacheds.version=2.0.0-M23
    apacheds.dir=${app.server.parent.dir}/apacheds-${apacheds.version}
    apacheds.instance.custom.base.url=http://files.liferay.com/private/apps/apache/apacheds
    apacheds.instance.custom.zip.name=apacheds-${apacheds.version}-instance.zip
    apacheds.instance.blank.user.password.custom.zip.name=apacheds-${apacheds.version}-instance-blank-user-password.zip
    apacheds.zip.name=apacheds-${apacheds.version}.zip
    apacheds.zip.url=http://mirrors.sonic.net/apache//directory/apacheds/dist/${apacheds.version}/${apacheds.zip.name}

##
## Apache HTTP
##

    #apache.http.win32.dir=
    #apache.http.win32.install=apache_2.2.11-win32-x86-openssl-0.9.8i.msi
    #apache.http.win32.modjk=

##
## Appium
##

    #appium.unix.dir=
    appium.unix.cmd=su - appium -c "ANDROID_HOME=/opt/android/sdk;PATH=${ANDROID_HOME}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${PATH};/home/appium/node/bin/appium"

    #appium.win32.dir=
    appium.win32.cmd=start node appium

##
## App Server
##

    app.server.jboss.start.executable=standalone${file.suffix.bat}
    app.server.jboss.start.executable.arg.line=
    app.server.jboss.stop.executable=jboss-cli${file.suffix.bat}
    app.server.jboss.stop.executable.arg.line=--connect command=:shutdown

    app.server.max.log.size.in.mb=5

    app.server.tcserver.start.executable=startup${file.suffix.bat}
    app.server.tcserver.start.executable.arg.line=
    app.server.tcserver.stop.executable=shutdown${file.suffix.bat}
    app.server.tcserver.stop.executable.arg.line=

    app.server.tomcat.manager.user=tomcat
    app.server.tomcat.manager.password=tomcat
    app.server.tomcat.start.executable=catalina${file.suffix.bat}
    app.server.tomcat.start.executable.arg.line=run
    app.server.tomcat.stop.executable=shutdown${file.suffix.bat}
    app.server.tomcat.stop.executable.arg.line=

    app.server.weblogic.start.executable=../startWebLogic${file.suffix.cmd}
    app.server.weblogic.start.executable.arg.line=
    app.server.weblogic.stop.executable=../stopWebLogic${file.suffix.cmd}
    app.server.weblogic.stop.executable.arg.line=

    app.server.websphere.start.executable=startServer${file.suffix.bat}
    app.server.websphere.start.executable.arg.line=server1
    app.server.websphere.stop.executable=stopServer${file.suffix.bat}
    app.server.websphere.stop.executable.arg.line=server1

    app.server.wildfly.start.executable=standalone${file.suffix.bat}
    app.server.wildfly.start.executable.arg.line=
    app.server.wildfly.stop.executable=jboss-cli${file.suffix.bat}
    app.server.wildfly.stop.executable.arg.line=--connect command=:shutdown

##
## Blade Sample
##

    #blade.samples.dir=

##
## Browser
##

    #browser.type=android
    #browser.type=androidchrome
    browser.type=chrome
    #browser.type=edge
    #browser.type=firefox
    #browser.type=internetexplorer
    #browser.type=safari

    browser.type[tck]=chrome

    browser.android.version=4.4

    browser.androidchrome.version=42.0

    #browser.chrome.bin.args=
    #browser.chrome.bin.file=

    #browser.chrome.version=44.0
    browser.chrome.version=65.0

    #browser.edge.version=20.1
    browser.edge.version=40.1

    #browser.firefox.version=22.0
    #browser.firefox.version=38.0
    #browser.firefox.version=45.0
    browser.firefox.version=52.0

    #browser.firefox.bin.file[22.0]=
    #browser.firefox.bin.file[38.0]=
    #browser.firefox.bin.file[45.0]=
    #browser.firefox.bin.file[52.0]=

    #browser.internetexplorer.version=7.0
    #browser.internetexplorer.version=8.0
    #browser.internetexplorer.version=9.0
    #browser.internetexplorer.version=10.0
    browser.internetexplorer.version=11.0

    browser.iossafari.version=8.4

    browser.safari.version=8.0

##
## Build
##

    build.app.server=false

##
## Central
##

    central.requirements.tests=\
        com/liferay/portal/modules/ModulesStructureTest.class

##
## Component Names
##

    component.names=\
        extra-apps-content-targeting,\
        extra-apps-known-issues,\
        \
        liferay-connected-services-fix-packs,\
        liferay-connected-services-known-issues,\
        liferay-connected-services-notifications,\
        liferay-connected-services-project-administration,\
        liferay-connected-services-subscriptions,\
        liferay-connected-services-user-management,\
        \
        marketplace,\
        marketplace-known-issues,\
        marketplace-plugins-1-2-1-columns-layouttpl,\
        marketplace-plugins-1-3-1-columns-layouttpl,\
        marketplace-plugins-1-3-2-columns-layouttpl,\
        marketplace-plugins-2-1-2-columns-layouttpl,\
        marketplace-plugins-3-2-3-columns-layouttpl,\
        marketplace-plugins-akismet-portlet,\
        marketplace-plugins-antisamy-hook,\
        marketplace-plugins-audit-hook,\
        marketplace-plugins-audit-portlet,\
        marketplace-plugins-calendar-portlet,\
        marketplace-plugins-cas-web,\
        marketplace-plugins-chat-portlet,\
        marketplace-plugins-ddl-form-portlet,\
        marketplace-plugins-documentum-hook,\
        marketplace-plugins-drools-web,\
        marketplace-plugins-ehcache-cluster-web,\
        marketplace-plugins-email-to-mb-filter-hook,\
        marketplace-plugins-google-maps-portlet,\
        marketplace-plugins-ip-geocoder-portlet,\
        marketplace-plugins-jasperreports-web,\
        marketplace-plugins-kaleo-designer-portlet,\
        marketplace-plugins-kaleo-forms-portlet,\
        marketplace-plugins-kaleo-web,\
        marketplace-plugins-knowledge-base-portlet,\
        marketplace-plugins-localization-ja-hook,\
        marketplace-plugins-localization-zh-hook,\
        marketplace-plugins-logos-reftagger-portlet,\
        marketplace-plugins-mail-portlet,\
        marketplace-plugins-marketplace-portlet,\
        marketplace-plugins-mb-subscription-manager-portlet,\
        marketplace-plugins-my-subscriptions-portlet,\
        marketplace-plugins-notifications-portlet,\
        marketplace-plugins-opensocial-portlet,\
        marketplace-plugins-reports-portlet,\
        marketplace-plugins-resources-importer-web,\
        marketplace-plugins-saml-portlet,\
        marketplace-plugins-scripting-executor-web,\
        marketplace-plugins-server-manager-web,\
        marketplace-plugins-sharepoint-hook,\
        marketplace-plugins-social-bookmarks-hook,\
        marketplace-plugins-social-networking-portlet,\
        marketplace-plugins-stocks-portlet,\
        marketplace-plugins-sync-web,\
        marketplace-plugins-theme-loader-web,\
        marketplace-plugins-twitter-portlet,\
        marketplace-plugins-vimeo-portlet,\
        marketplace-plugins-vldap-web,\
        marketplace-plugins-weather-portlet,\
        marketplace-plugins-web-form-portlet,\
        marketplace-plugins-welcome-theme,\
        marketplace-plugins-wiki-navigation-portlet,\
        marketplace-plugins-wurfl-web,\
        marketplace-plugins-wysiwyg-portlet,\
        marketplace-plugins-youtube-portlet,\
        marketplace-plugins-zoe-brochure-theme,\
        marketplace-plugins-zoe-healthcare-theme,\
        marketplace-plugins-zoe-political-theme,\
        marketplace-plugins-zoe-resort-theme,\
        marketplace-plugins-zoe-tech-theme,\
        \
        portal-acceptance,\
        portal-apis,\
        portal-application-standards,\
        portal-application-standards-ee,\
        portal-authentication,\
        portal-authentication-ee,\
        portal-blade-template,\
        portal-breadcrumb,\
        portal-bundle-blacklist,\
        portal-calendar,\
        portal-categories,\
        portal-clusterting,\
        portal-collaboration,\
        portal-commerce,\
        portal-configuration,\
        portal-database-partitioning,\
        portal-core-infrastructure-portal-services,\
        portal-core-infrastructure-portal-services-ee,\
        portal-deployment-hypersonic,\
        portal-deployment-hypersonic-ee,\
        portal-deployment-mysql,\
        portal-document-library-store,\
        portal-document-management,\
        portal-document-management-ee,\
        portal-file-install,\
        portal-forms-and-workflow-ee,\
        portal-frameworks,\
        portal-friendly-url,\
        portal-frontend-infrastructure,\
        portal-gogo-shell,\
        portal-infrastructure,\
        portal-integrations,\
        portal-ip-address,\
        portal-knowledge-base,\
        portal-known-issues,\
        portal-language,\
        portal-legacy,\
        portal-locale,\
        portal-mobile-device-rules,\
        portal-opensocial,\
        portal-operations,\
        portal-permissions,\
        portal-personalization-and-customization,\
        portal-plugins-deployment,\
        portal-plugins-osgi,\
        portal-polls,\
        portal-portal-services,\
        portal-publications,\
        portal-rss,\
        portal-sample-portlet-plugins,\
        portal-search,\
        portal-search-ee,\
        portal-security,\
        portal-server-administration,\
        portal-smoke,\
        portal-social-networking,\
        portal-staging,\
        portal-staging-ee,\
        portal-tags,\
        portal-test-plugins,\
        portal-testing-infrastructure,\
        portal-theme-development,\
        portal-tools,\
        portal-upgrades,\
        portal-user-management-and-portal-configuration,\
        portal-util-misc,\
        portal-wcd,\
        portal-wcm,\
        portal-web-forms-and-data-lists,\
        portal-workflow,\
        portal-xsl,\
        \
        social-office-activities,\
        social-office-administration,\
        social-office-calendar,\
        social-office-collaboration,\
        social-office-communication,\
        social-office-document-management,\
        social-office-environment,\
        social-office-known-issues,\
        social-office-legacy,\
        social-office-microblogs,\
        social-office-notifications,\
        social-office-search,\
        social-office-upgrades,\
        social-office-user-information,\
        social-office-wcm,\
        \
        support-qa

##
## Database
##

    #database.type=auroramysql
    #database.type=aurorapostgresql
    #database.type=db2
    #database.type=hypersonic
    #database.type=mariadb
    database.type=mysql
    #database.type=postgresql
    #database.type=oracle
    #database.type=sqlserver
    #database.type=sybase

    #
    # Aurora MySQL
    #

    database.auroramysql.device.name=
    database.auroramysql.driver=com.mysql.cj.jdbc.Driver
    database.auroramysql.host=localhost
    database.auroramysql.password=
    database.auroramysql.schema=lportal
    database.auroramysql.service.cmd.start=
    database.auroramysql.service.cmd.stop=
    database.auroramysql.service.executable=
    database.auroramysql.username=root
    database.auroramysql.url=jdbc:mysql://${database.auroramysql.host}/${database.auroramysql.schema}?characterEncoding=UTF-8&dontTrackOpenResources=true&holdResultsOpenOverStatementClose=true&useFastDateParsing=false&useUnicode=true
    database.auroramysql.version=5.6
    database.auroramysql.version.cmd=

    #
    # Aurora PostgreSQL
    #

    database.aurorapostgresql.device.name=
    database.aurorapostgresql.driver=org.postgresql.Driver
    database.aurorapostgresql.host=localhost
    database.aurorapostgresql.password=
    database.aurorapostgresql.schema=lportal
    database.aurorapostgresql.service.cmd.stop=
    database.aurorapostgresql.service.cmd.start=
    database.aurorapostgresql.service.executable=
    database.aurorapostgresql.username=root
    database.aurorapostgresql.url=jdbc:aurorapostgresql://${database.aurorapostgresql.host}:5432/${database.aurorapostgresql.schema}
    database.aurorapostgresql.version=9.6
    database.aurorapostgresql.version.cmd=

    #
    # DB2
    #

    database.db2.device.name=
    #database.db2.docker.image=
    #database.db2.docker.run.options=
    database.db2.driver=com.ibm.db2.jcc.DB2Driver
    database.db2.host=localhost
    database.db2.password=password
    database.db2.port=50000
    database.db2.schema=lportal
    database.db2.service.cmd.start=db2start
    database.db2.service.cmd.stop=db2stop force
    database.db2.service.executable=db2
    database.db2.username=root
    database.db2.url=jdbc:db2://${database.db2.host}:50000/${database.db2.schema}:deferPrepares=false;fullyMaterializeInputStreams=true;fullyMaterializeLobData=true;progresssiveLocators=2;progressiveStreaming=2;
    database.db2.version=11.1.3
    database.db2.version.cmd=db2level

    #
    # Hypersonic
    #

    database.hypersonic.device.name=
    database.hypersonic.driver=org.hsqldb.jdbc.JDBCDriver
    database.hypersonic.host=localhost
    database.hypersonic.password=
    database.hypersonic.schema=lportal
    database.hypersonic.service.cmd.start=fake hypersonic service start
    database.hypersonic.service.cmd.stop=fake hypersonic service stop
    database.hypersonic.service.executable=echo
    database.hypersonic.username=sa
    database.hypersonic.url=jdbc:hsqldb:${liferay.home}/data/hypersonic/${database.hypersonic.schema}
    database.hypersonic.version=2.0
    database.hypersonic.version.cmd=Hypersonic Version: ${database.hypersonic.version}

    #
    # MariaDB
    #

    database.mariadb.device.name=
    #database.mariadb.docker.image=
    #database.mariadb.docker.run.options=
    database.mariadb.driver=org.mariadb.jdbc.Driver
    database.mariadb.host=localhost:3307
    database.mariadb.password=
    database.mariadb.port=3307
    database.mariadb.schema=lportal
    database.mariadb.service.cmd.start=mariadb start
    database.mariadb.service.cmd.stop=mariadb stop
    database.mariadb.service.executable=service
    database.mariadb.username=root
    database.mariadb.url=jdbc:mariadb://${database.mariadb.host}/${database.mariadb.schema}?useUnicode=true&characterEncoding=UTF-8&useFastDateParsing=false
    database.mariadb.version=10.2.20
    database.mariadb.version.cmd=--version

    #
    # MySQL
    #

    database.mysql.device.name=
    #database.mysql.docker.image=
    #database.mysql.docker.run.options=
    database.mysql.driver=com.mysql.cj.jdbc.Driver
    database.mysql.host=localhost
    database.mysql.password=
    database.mysql.port=3306
    database.mysql.schema=lportal
    database.mysql.service.cmd.start=mysqld start
    database.mysql.service.cmd.stop=mysqld stop
    database.mysql.service.executable=service
    database.mysql.username=root
    database.mysql.url=jdbc:mysql://${database.mysql.host}/${database.mysql.schema}?characterEncoding=UTF-8&dontTrackOpenResources=true&holdResultsOpenOverStatementClose=true&serverTimezone=GMT&useFastDateParsing=false&useUnicode=true
    database.mysql.version=5.7
    database.mysql.version.cmd=--version

    #
    # Uncommment the following lines to use MySQL 5.5 instead of MySQL 5.7.
    #
    #database.mysql.service.cmd.start=mysql55 start
    #database.mysql.service.cmd.stop=mysql55 stop
    #database.mysql.version=5.5

    #
    # Uncommment the following lines to use MySQL 5.6 instead of MySQL 5.7.
    #
    #database.mysql.service.cmd.start=mysql57 start
    #database.mysql.service.cmd.stop=mysql57 stop
    #database.mysql.version=5.6

    #
    # Oracle
    #

    database.oracle.device.name=
    #database.oracle.docker.image=
    #database.oracle.docker.run.options=
    database.oracle.driver=oracle.jdbc.OracleDriver
    database.oracle.host=localhost
    database.oracle.password=${database.oracle.schema}
    database.oracle.port=1521
    database.oracle.schema=lportal
    database.oracle.service.cmd.start=-f build-test-batch.xml oracle-service-start
    database.oracle.service.cmd.stop=-f build-test-batch.xml oracle-service-stop
    database.oracle.service.executable=ant
    database.oracle.username=${database.oracle.schema}
    database.oracle.url=jdbc:oracle:thin:@${database.oracle.host}:1521:oracl
    database.oracle.version=12.2.0.1
    database.oracle.version.cmd=-version

    #
    # PostgreSQL
    #

    database.postgresql.device.name=
    #database.postgresql.docker.image=
    #database.postgresql.docker.run.options=
    database.postgresql.driver=org.postgresql.Driver
    database.postgresql.host=localhost
    database.postgresql.password=
    database.postgresql.port=5432
    database.postgresql.schema=lportal
    database.postgresql.service.cmd.stop=-f build-test-batch.xml postgresql-service-stop
    database.postgresql.service.cmd.start=-f build-test-batch.xml postgresql-service-start
    database.postgresql.service.executable=ant
    database.postgresql.username=root
    database.postgresql.url=jdbc:postgresql://${database.postgresql.host}:5432/${database.postgresql.schema}
    database.postgresql.version=10
    database.postgresql.version.cmd=--version

    #
    # SQL Server
    #

    database.sqlserver.device.name=
    database.sqlserver.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
    database.sqlserver.host=localhost
    database.sqlserver.password=password
    database.sqlserver.schema=lportal
    database.sqlserver.username=sa
    database.sqlserver.url=jdbc:sqlserver://${database.sqlserver.host};databaseName=${database.sqlserver.schema}
    database.sqlserver.version=2012
    database.sqlserver.version.cmd=-version

    #
    # Sybase
    #

    database.sybase.device.name=master
    #database.sybase.docker.image=
    #database.sybase.docker.run.options=
    database.sybase.driver=com.sybase.jdbc4.jdbc.SybDriver
    database.sybase.host=localhost
    database.sybase.password=password
    database.sybase.port=5000
    database.sybase.schema=lportal
    database.sybase.service.cmd.start=-f build-test-batch.xml sybase-service-start
    database.sybase.service.cmd.stop=-f build-test-batch.xml sybase-service-stop
    database.sybase.service.executable=ant
    database.sybase.username=sa
    database.sybase.url=jdbc:sybase:Tds:${database.sybase.host}:5000/${database.sybase.schema}
    database.sybase.version=16.0
    database.sybase.version.cmd=-v

##
## Database Upgrade
##

    db-upgrade.5.2.3.build=523
    db-upgrade.5.2.3.bundled.tomcat.dir.name=liferay-portal-5.2.3/tomcat-6.0.18
    db-upgrade.5.2.3.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-5.2.3.zip

    db-upgrade.5.2.5.build=525
    db-upgrade.5.2.5.bundled.tomcat.dir.name=liferay-portal-5.2-ee-sp1/tomcat-6.0.18
    db-upgrade.5.2.5.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-5.2-ee-sp1.zip

    db-upgrade.5.2.7.build=527
    db-upgrade.5.2.7.bundled.tomcat.dir.name=liferay-portal-5.2-ee-sp3/tomcat-6.0.18
    db-upgrade.5.2.7.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-5.2-ee-sp3.zip

    db-upgrade.5.2.8.build=528
    db-upgrade.5.2.8.bundled.tomcat.dir.name=liferay-portal-5.2-ee-sp4/tomcat-6.0.18
    db-upgrade.5.2.8.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-5.2-ee-sp4.zip

    db-upgrade.5.2.9.build=529
    db-upgrade.5.2.9.bundled.tomcat.dir.name=liferay-portal-5.2-ee-sp5/tomcat-6.0.29
    db-upgrade.5.2.9.bundled.tomcat.file.name=liferay-portal-tomcat-6.0.29-5.2-ee-sp5.zip

    db-upgrade.6.0.6.build=606
    db-upgrade.6.0.6.bundled.tomcat.dir.name=liferay-portal-6.0.6/tomcat-6.0.29
    db-upgrade.6.0.6.bundled.tomcat.file.name=liferay-portal-tomcat-6.0.6-20110225.zip

    db-upgrade.6.0.10.build=6010
    db-upgrade.6.0.10.bundled.tomcat.dir.name=liferay-portal-6.0-ee/tomcat-6.0.29
    db-upgrade.6.0.10.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-ee.zip

    db-upgrade.6.0.11.build=6011
    db-upgrade.6.0.11.bundled.tomcat.dir.name=liferay-portal-6.0-ee-sp1/tomcat-6.0.29
    db-upgrade.6.0.11.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-ee-sp1.zip

    db-upgrade.6.0.12.build=6012
    db-upgrade.6.0.12.bundled.tomcat.dir.name=liferay-portal-6.0-ee-sp2/tomcat-6.0.32
    db-upgrade.6.0.12.bundled.tomcat.file.name=liferay-portal-tomcat-6.0-ee-sp2-20110727.zip

    db-upgrade.6.1.1.build=611
    db-upgrade.6.1.1.bundled.jboss.dir.name=liferay-portal-6.1.1-ce-ga2/jboss-7.1.1
    db-upgrade.6.1.1.bundled.jboss.file.name=liferay-portal-jboss-6.1.1-ce-ga2-20120731132656558.zip
    db-upgrade.6.1.1.bundled.tomcat.dir.name=liferay-portal-6.1.1-ce-ga2/tomcat-7.0.27
    db-upgrade.6.1.1.bundled.tomcat.file.name=liferay-portal-tomcat-6.1.1-ce-ga2-20120731132656558.zip

    db-upgrade.6.1.10.build=6110
    db-upgrade.6.1.10.bundled.tomcat.dir.name=liferay-portal-6.1.10-ee-ga1/tomcat-7.0.25
    db-upgrade.6.1.10.bundled.tomcat.file.name=liferay-portal-tomcat-6.1.10-ee-ga1-20120217120951450.zip

    db-upgrade.6.1.20.build=6120
    db-upgrade.6.1.20.bundled.jboss.dir.name=liferay-portal-6.1.20-ee-ga2/jboss-7.1.1
    db-upgrade.6.1.20.bundled.jboss.file.name=liferay-portal-jboss-6.1.20-ee-ga2-20120731110418084.zip
    db-upgrade.6.1.20.bundled.tomcat.dir.name=liferay-portal-6.1.20-ee-ga2/tomcat-7.0.27
    db-upgrade.6.1.20.bundled.tomcat.file.name=liferay-portal-tomcat-6.1.20-ee-ga2-20120731110418084.zip
    db-upgrade.6.1.20.plugins.dir=${project.dir}/../../plugins/ee-6.1.20

##
## Commerce
##

    #commerce.license.owner=
    #osb.api.token=

##
## Elastic
##

    elastic.kibana.dir=${app.server.parent.dir}/kibana-${elasticsearch.version}
    elastic.kibana.tar.name.linux=kibana-${elasticsearch.version}-linux-x86_64.tar.gz
    elastic.kibana.tar.name.mac=kibana-${elasticsearch.version}-darwin-x86_64.tar.gz
    elastic.kibana.tar.url.linux=https://artifacts.elastic.co/downloads/kibana/${elastic.kibana.tar.name.linux}
    elastic.kibana.tar.url.mac=https://artifacts.elastic.co/downloads/kibana/${elastic.kibana.tar.name.mac}
    elastic.kibana.zip.name.windows=kibana-${elasticsearch.version}-windows-x86_64.zip
    elastic.kibana.zip.url.windows=https://artifacts.elastic.co/downloads/kibana/${elastic.kibana.zip.name.windows}

    elasticsearch.version=7.9.0
    elasticsearch.dir=${app.server.parent.dir}/elasticsearch-${elasticsearch.version}
    elasticsearch.analysis-icu.zip.name=analysis-icu-${elasticsearch.version}.zip
    elasticsearch.analysis-icu.zip.url=https://artifacts.elastic.co/downloads/elasticsearch-plugins/analysis-icu/${elasticsearch.analysis-icu.zip.name}
    elasticsearch.analysis-kuromoji.zip.name=analysis-kuromoji-${elasticsearch.version}.zip
    elasticsearch.analysis-kuromoji.zip.url=https://artifacts.elastic.co/downloads/elasticsearch-plugins/analysis-kuromoji/${elasticsearch.analysis-kuromoji.zip.name}
    elasticsearch.analysis-smartcn.zip.name=analysis-smartcn-${elasticsearch.version}.zip
    elasticsearch.analysis-smartcn.zip.url=https://artifacts.elastic.co/downloads/elasticsearch-plugins/analysis-smartcn/${elasticsearch.analysis-smartcn.zip.name}
    elasticsearch.analysis-stempel.zip.name=analysis-stempel-${elasticsearch.version}.zip
    elasticsearch.analysis-stempel.zip.url=https://artifacts.elastic.co/downloads/elasticsearch-plugins/analysis-stempel/${elasticsearch.analysis-stempel.zip.name}
    elasticsearch.boston-dataset-index.zip.name=boston-dataset-index.zip
    elasticsearch.boston-dataset-index.zip.url=http://files.liferay.com/private/apps/elastic/elasticsearch/${elasticsearch.boston-dataset-index.zip.name}
    elasticsearch.tar.name.linux=elasticsearch-${elasticsearch.version}-linux-x86_64.tar.gz
    elasticsearch.tar.name.mac=elasticsearch-${elasticsearch.version}-darwin-x86_64.tar.gz
    elasticsearch.zip.name.windows=elasticsearch-${elasticsearch.version}-windows-x86_64.zip
    elasticsearch.tar.url.linux=https://artifacts.elastic.co/downloads/elasticsearch/${elasticsearch.tar.name.linux}
    elasticsearch.tar.url.mac=https://artifacts.elastic.co/downloads/elasticsearch/${elasticsearch.tar.name.mac}
    elasticsearch.zip.url.windows=https://artifacts.elastic.co/downloads/elasticsearch/${elasticsearch.zip.name.windows}

    elasticsearch.sidecar.version=7.9.0
    elasticsearch.sidecar.analysis-icu.zip.url=https://artifacts.elastic.co/downloads/elasticsearch-plugins/analysis-icu/analysis-icu-${elasticsearch.sidecar.version}.zip
    elasticsearch.sidecar.analysis-kuromoji.zip.url=https://artifacts.elastic.co/downloads/elasticsearch-plugins/analysis-kuromoji/analysis-kuromoji-${elasticsearch.sidecar.version}.zip
    elasticsearch.sidecar.analysis-smartcn.zip.url=https://artifacts.elastic.co/downloads/elasticsearch-plugins/analysis-smartcn/analysis-smartcn-${elasticsearch.sidecar.version}.zip
    elasticsearch.sidecar.analysis-stempel.zip.url=https://artifacts.elastic.co/downloads/elasticsearch-plugins/analysis-stempel/analysis-stempel-${elasticsearch.sidecar.version}.zip
    elasticsearch.sidecar.no.jdk.tar.url=https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-${elasticsearch.sidecar.version}-no-jdk-linux-x86_64.tar.gz

##
## Email Addresses and Passwords
##

    #email.address.1=
    #email.address.2=
    #email.address.3=
    #email.address.4=
    #email.address.5=
    #email.password.1=
    #email.password.2=
    #email.password.3=
    #email.password.4=
    #email.password.5=

##
## Facebook
##

    #facebook.application.id=
    #facebook.application.secret=
    #facebook.email=
    #facebook.password=

##
## Google
##

    #google.api.key.1=
    #google.api.key.2=
    #google.api.key.3=
    #google.client.id.1=
    #google.client.id.2=
    #google.client.id.3=
    #google.client.secret.1=
    #google.client.secret.2=
    #google.client.secret.3=

##
## Gradle Plugins
##

    gradle.plugins.test.excludes=

##
## Java JDK
##

    #java.jdk.7.x32.home=
    #java.jdk.7.x64.home=
    #java.jdk.8.x32.home=
    #java.jdk.8.x64.home=

    #java.jdk.architecture=x32
    java.jdk.architecture=x64

    #java.jdk.type=ibm
    #java.jdk.type=open
    java.jdk.type=oracle

    #java.jdk.x32.version=5
    #java.jdk.x32.version=6
    java.jdk.x32.version=7
    #java.jdk.x32.version=8

    #java.jdk.x64.version=5
    #java.jdk.x64.version=6
    java.jdk.x64.version=7
    #java.jdk.x64.version=8

##
## Jenkins
##

    jenkins.private.property.names=\
        email.address.1,\
        email.address.2,\
        email.address.3,\
        email.address.4,\
        email.address.5,\
        email.password.1,\
        email.password.2,\
        email.password.3,\
        email.password.4,\
        email.password.5

    #jenkins.testray.results.dir=

##
## JMX
##

    jmx.remote.authenticate=false
    jmx.remote.port=8099
    jmx.remote.ssl=false

##
## LCS
##

    #
    # Email Addresses and Passwords
    #

    #lcs.email.address.1=
    #lcs.email.address.2=
    #lcs.email.address.3=
    #lcs.email.id.1=
    #lcs.email.id.2=
    #lcs.email.id.3=
    #lcs.email.password.1=
    #lcs.email.password.2=
    #lcs.email.password.3=

    #
    # Portlet Properties
    #

    #osb.lcs.gateway.web.host.name=
    #osb.lcs.gateway.web.host.port=

    #osb.lcs.portlet.host.name=
    #osb.lcs.portlet.host.port=

    #osb.lcs.portlet.oauth.consumer.key=
    #osb.lcs.portlet.oauth.consumer.secret=

##
## Liferay Faces
##

    liferay.faces.alloy.dir=../liferay-faces-alloy
    liferay.faces.bridge.impl.dir=../liferay-faces-bridge-impl
    liferay.faces.portal.dir=../liferay-faces-portal
    liferay.faces.showcase.dir=../liferay-faces-showcase
    liferay.faces.test.browser.version=52.0
    liferay.faces.test.timeout=30

##
## Liferay Plugins
##

    liferay.plugins.branch=master

##
## Liferay Portal
##

    liferay.portal.branch=master
    liferay.portal.bundle=latest

##
## Marketplace
##

    #
    # Apps
    #

    marketplace.app[content-targeting]=Liferay Audience Targeting.lpkg

    #
    # Email Addresses and Passwords
    #

    #marketplace.email.address.1=
    #marketplace.email.address.2=
    #marketplace.email.address.3=
    #marketplace.email.address.4=
    #marketplace.email.address.5=
    #marketplace.email.password.1=
    #marketplace.email.password.2=
    #marketplace.email.password.3=
    #marketplace.email.password.4=
    #marketplace.email.password.5=

    #
    # Portlet Properties
    #

    #marketplace.portlet.properties=

##
## Mobile
##

    #mobile.android.home=

##
## Modules
##

    #modules.excludes.dxp=

    modules.excludes.portal=\
        dxp/apps/**

    modules.excludes[modules-compile-jdk8]=\
        third-party/**

    modules.excludes.private[modules-compile-jdk8]=\
        ${modules.excludes[modules-compile-jdk8]}

    modules.excludes.public[modules-compile-jdk8]=${modules.excludes[modules-compile-jdk8]}

    #modules.includes[modules-compile-jdk8]=
    #modules.excludes[modules-semantic-versioning-jdk8]=
    #modules.excludes[rest-builder-jdk8]=
    #modules.excludes[service-builder-jdk8]=

    modules.includes[modules-semantic-versioning-jdk8]=\
        apps/**,\
        core/**,\
        dxp/apps/**

    modules.includes[rest-builder-jdk8]=\
        apps/**,\
        core/**,\
        dxp/apps/**,\
        test/**,\
        util/**

    modules.includes[service-builder-jdk8]=\
        apps/**,\
        core/**,\
        dxp/apps/**,\
        test/**,\
        util/**

    modules.includes.private[modules-semantic-versioning-jdk8]=\
        ${modules.includes[modules-semantic-versioning-jdk8]},\
        dxp/apps/**

    modules.includes.private[rest-builder-jdk8]=\
        ${modules.includes[rest-builder-jdk8]},\
        dxp/apps/**

    modules.includes.private[service-builder-jdk8]=\
        ${modules.includes[service-builder-jdk8]},\
        dxp/apps/**

    modules.includes.public[modules-semantic-versioning-jdk8]=${modules.includes[modules-semantic-versioning-jdk8]}

    modules.includes.public[rest-builder-jdk8]=${modules.includes[rest-builder-jdk8]}

    modules.includes.public[service-builder-jdk8]=${modules.includes[service-builder-jdk8]}

##
## OneDrive
##

    #onedrive.client.id=
    #onedrive.client.secret=
    #onedrive.tenant=

##
## OpenAM
##

    openam.version=13.0.0
    openam.admin.tools.dir=${app.server.parent.dir}/SSOAdminTools-${openam.version}
    openam.admin.tools.zip.name=SSOAdminTools-${openam.version}.zip
    openam.config.dir=/root/openam
    openam.configurator.tools.dir=${app.server.parent.dir}/SSOConfiguratorTools-${openam.version}
    openam.configurator.tools.zip.name=SSOConfiguratorTools-${openam.version}.zip
    openam.war.name=openam-${openam.version}.war

##
## Operating System
##

    operating.system.type=centos
    #operating.system.type=debian
    #operating.system.type=orcllinux
    #operating.system.type=osx
    #operating.system.type=solaris
    #operating.system.type=suse
    #operating.system.type=ubuntu
    #operating.system.type=windows
    #operating.system.type=windowsserver

    #operating.system.centos.version=6
    operating.system.centos.version=7

    #operating.system.debian.version=7
    operating.system.debian.version=8

    #operating.system.orcllinux.version=6
    operating.system.orcllinux.version=7

    operating.system.osx.version=10.10

    #operating.system.solaris.version=10
    operating.system.solaris.version=11

    #operating.system.suse.version=11
    operating.system.suse.version=12

    operating.system.ubuntu.version=14
    #operating.system.ubuntu.version=16
    #operating.system.ubuntu.version=18

    operating.system.windows.version=10

    #operating.system.windowsserver.version=2008r2
    #operating.system.windowsserver.version=2012
    operating.system.windowsserver.version=2012r2
    #operating.system.windowsserver.version=2016

##
## Performance
##

    #performance.branch.main=
    #performance.branch.temp=

##
## Portal Legacy
##

    #portal.legacy.dir=

##
## reCAPTCHA
##

    recaptcha.private.key=6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
    recaptcha.public.key=6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI

##
## Selenium
##

    selenium.chrome.driver.executable=chromedriver${file.suffix.exe}
    selenium.chrome.driver.version=2.37
    #selenium.desired.capabilities.platform=
    selenium.edge.driver.executable=MicrosoftWebDriver.exe
    selenium.executable.dir.name=../tools/selenium/
    selenium.gecko.driver.executable=geckodriver${file.suffix.exe}
    selenium.gecko.driver.version=0.19.1
    selenium.ie.driver.executable=IEDriverServer.exe
    selenium.ie.driver.version=2.44
    selenium.remote.driver.enabled=false
    selenium.remote.driver.hub=localhost

##
## Solr
##

    solr.version=7.5.0
    solr.dir=${app.server.parent.dir}/solr-${solr.version}
    solr.zip.name=solr-${solr.version}.zip
    solr.zip.url=http://archive.apache.org/dist/lucene/solr/${solr.version}/${solr.zip.name}

##
## SQL
##

    sql.legacy.base.url[ce]=http://releases.liferay.com/portal
    sql.legacy.base.url[ee]=http://files.liferay.com/private/ee/portal

    sql.legacy.zip[6.0.11]=liferay-portal-sql-6.0-ee-sp1.zip
    sql.legacy.zip[6.0.12]=liferay-portal-sql-6.0-ee-sp2-20110727.zip
    sql.legacy.zip[6.0.6]=liferay-portal-sql-6.0.6-20110225.zip
    sql.legacy.zip[6.1.10]=liferay-portal-sql-6.1.10-ee-ga1-20120223174854827.zip
    sql.legacy.zip[6.1.2]=liferay-portal-sql-6.1.2-ce-ga3-20130816114619181.zip
    sql.legacy.zip[6.1.20]=liferay-portal-sql-6.1.20-ee-ga2-20120731110418084.zip
    sql.legacy.zip[6.1.30]=liferay-portal-sql-6.1.30-ee-ga3-20130812170130063.zip
    sql.legacy.zip[6.2.3]=liferay-portal-sql-6.2-ce-ga4-20150416163831865.zip
    sql.legacy.zip[6.2.5]=liferay-portal-sql-6.2-ce-ga6-20160112152609836.zip
    sql.legacy.zip[6.2.10.1]=liferay-portal-sql-6.2.10.1-ee-ga1-20131126141110470.zip
    sql.legacy.zip[6.2.10.2]=liferay-portal-sql-6.2-ee-sp1-20140204095606875.zip
    sql.legacy.zip[6.2.10.3]=liferay-portal-sql-6.2-ee-sp2-20140311095330499.zip
    sql.legacy.zip[6.2.10.4]=liferay-portal-sql-6.2-ee-sp3-20140407093552703.zip
    sql.legacy.zip[6.2.10.5]=liferay-portal-sql-6.2-ee-sp4-20140509104816263.zip
    sql.legacy.zip[6.2.10.6]=liferay-portal-sql-6.2-ee-sp5-20140606104845789.zip
    sql.legacy.zip[6.2.10.7]=liferay-portal-sql-6.2-ee-sp6-20140703103932543.zip
    sql.legacy.zip[6.2.10.8]=liferay-portal-sql-6.2-ee-sp7-20140807114015311.zip
    sql.legacy.zip[6.2.10.9]=liferay-portal-sql-6.2-ee-sp8-20140904111637931.zip
    sql.legacy.zip[6.2.10.15]=liferay-portal-sql-6.2-ee-sp14-20151105114451508.zip
    sql.legacy.zip[6.2.10.21]=liferay-portal-sql-6.2-ee-sp20-20170717160924965.zip
    sql.legacy.zip[7.0.4]=liferay-ce-portal-sql-7.0-ga5-20171018150113838.zip
    sql.legacy.zip[7.0.10.6]=liferay-dxp-digital-enterprise-sql-7.0-sp6-20171010144253003.zip
    sql.legacy.zip[7.1.3]=liferay-ce-portal-sql-7.1.3-ga4-20190508171117552.zip
    sql.legacy.zip[7.1.10]=liferay-dxp-sql-7.1.10-ga1-20180703090613030.zip
    sql.legacy.zip[7.1.10.2]=liferay-dxp-sql-7.1.10.2-sp2-20190422172027516.zip
    sql.legacy.zip[7.1.10.3]=liferay-dxp-sql-7.1.10.3-sp3-202001061544.zip
    sql.legacy.zip[7.2.0]=liferay-ce-portal-sql-7.2.0-ga1-20190531153709761.zip
    sql.legacy.zip[7.2.1]=liferay-ce-portal-sql-7.2.1-ga2-20191111141448326.zip
    sql.legacy.zip[7.2.10]=liferay-dxp-sql-7.2.10-ga1-20190531140450482.zip
    sql.legacy.zip[7.2.10.1]=liferay-dxp-sql-7.2.10.1-sp1-20191007154602574.zip
    sql.legacy.zip[7.3.0]=liferay-ce-portal-sql-7.3.0-ga1-20200127150653953.zip

##
## SSH
##

    #ssh.host=
    #ssh.password=
    #ssh.username=

##
## Test Batch
##

    #
    # Default
    #

    test.batch.app.server.tomcat.setenv.gc.new=-verbose:gc -Xloggc:/tmp/tomcat-gc.log -Xms1024m -Xmx4096m -XX:MaxNewSize=32m -XX:MaxMetaspaceSize=1024m -XX:MaxTenuringThreshold=0 -XX:NewSize=32m -XX:ParallelGCThreads=2 -XX:MetaspaceSize=256m -XX:+PrintGCCause -XX:+PrintGCDetails -XX:SurvivorRatio=65536 -XX:TargetSurvivorRatio=0 -XX:+UseParNewGC
    test.batch.app.server.tomcat.setenv.gc.new[11]=-Xlog:gc:/tmp/tomcat-gc.log -Xms1024m -Xmx4096m -XX:MaxNewSize=32m -XX:MaxMetaspaceSize=1024m -XX:MaxTenuringThreshold=0 -XX:NewSize=32m -XX:ParallelGCThreads=2 -XX:MetaspaceSize=256m -XX:SurvivorRatio=2048 -XX:TargetSurvivorRatio=0
    test.batch.app.server.tomcat.setenv.gc.old=-Xms2560m -Xmx2560m -XX:MaxNewSize=1536m -XX:MaxMetaspaceSize=768m -XX:MetaspaceSize=768m -XX:NewSize=1536m -XX:SurvivorRatio=7
    test.batch.app.server.tomcat.setenv.heap.dump.path=/tmp/tomcat-oom-heap-dump.bin

    test.batch.aspectj.enabled=false

    test.batch.axis.count[tck-jdk8]=1

    test.batch.axis.max.size[modules-compile-jdk8]=500
    test.batch.axis.max.size[modules-integration-*-jdk8]=35
    test.batch.axis.max.size[modules-integration-*-jdk11_open]=35
    test.batch.axis.max.size[modules-integration-project-templates-jdk8]=25
    test.batch.axis.max.size[modules-semantic-versioning-jdk8]=30
    test.batch.axis.max.size[modules-unit-jdk8]=250
    test.batch.axis.max.size[modules-unit-project-templates-jdk8]=25
    test.batch.axis.max.size[semantic-versioning-jdk8]=50
    test.batch.axis.max.size[tck-jdk8]=50
    test.batch.axis.max.size[unit-jdk8]=5000

    test.batch.class.names.excludes.permanent=\
        modules/apps/static/portal-bundle-blacklist/portal-bundle-blacklist-test/src/test/java/com/liferay/portal/bundle/blacklist/BundleBlacklistSetUpBatchTest.java,\
        modules/apps/static/portal-bundle-blacklist/portal-bundle-blacklist-test/src/testIntegration/java/com/liferay/portal/bundle/blacklist/test/BundleBlacklistVerifyReinstalledTest.java,\
        modules/apps/static/portal-bundle-blacklist/portal-bundle-blacklist-test/src/testIntegration/java/com/liferay/portal/bundle/blacklist/test/BundleBlacklistVerifyUninstalledTest.java,\
        modules/apps/static/portal-lpkg-deployer/**,\
        modules/test/external-data-source-test/**,\
        portal-kernel/test/unit/com/liferay/portal/log/assertor/PortalLogAssertorTest.java,\
        portal-kernel/test/unit/com/liferay/portal/modules/ModulesStructureTest.java

    test.batch.class.names.excludes.temporary=\
        modules/apps/archived/**

    test.batch.class.names.excludes=\
        ${test.batch.class.names.excludes.permanent},\
        ${test.batch.class.names.excludes.temporary}

    test.batch.class.names.excludes[junit-test-csv-report-jdk8]=${test.batch.class.names.excludes}

    test.batch.class.names.excludes[modules-unit-jdk8]=\
        ${test.batch.class.names.excludes},\
        **/project-templates/**/src/test/**/*Test.java

    test.batch.class.names.excludes[tck-jdk8]=**/com/sun/ts/tests/**/PortletSessionSecondapp/*.war

    test.batch.class.names.includes=\
        **/src/test/**/*Test.java,\
        **/src/testIntegration/**/*Test.java,\
        **/test/unit/**/*Test.java

    test.batch.class.names.includes[junit-test-csv-report-jdk8]=${test.batch.class.names.includes}
    test.batch.class.names.includes[modules-integration-project-templates-jdk8]=**/project-templates/**/src/test/**/*Test.java
    test.batch.class.names.includes[modules-integration-*-jdk8]=**/src/testIntegration/**/*Test.java

    test.batch.class.names.includes[modules-integration-*-jdk8_stable]=\
        **/change-tracking/**/*Test.java,\
        **/portal-dao-test/**/*Test.java,\
        **/portlet-title-localization-test/**/*Test.java

    test.batch.class.names.includes[modules-integration-*-jdk11_open]=**/src/testIntegration/**/*Test.java
    test.batch.class.names.includes[modules-unit-jdk8]=**/src/test/**/*Test.java

    test.batch.class.names.includes[modules-unit-jdk8_stable]=\
        **/change-tracking/**/*Test.java,\
        **/portal-upgrade-impl/**/*Test.java

    test.batch.class.names.includes[modules-unit-project-templates-jdk8]=**/project-templates/**/src/test/**/*Test.java

    test.batch.class.names.includes[tck-jdk8]=deploy/target/deploy-files/tck-*.war
    test.batch.class.names.includes[unit-jdk8]=**/test/unit/**/*Test.java

    test.batch.class.names.includes[unit-jdk8_stable]=\
        **/test/**/DBInspectorUnitTest.java,\
        **/test/**/LibraryReferenceTest.java,\
        **/test/**/UpgradeProcessTest.java

    test.batch.class.names.includes.required[modules-integration-*-jdk11_open]=\
        **/src/testIntegration/**/DeclarativeServiceDependencyManagerTest.java,\
        **/src/testIntegration/**/SpringExtenderDependencyManagerTest.java

    test.batch.code.coverage=false

    #
    # Remove 'test.batch.deprecated.module.groups' when possible. See LPS-82317
    # for more details.
    #

    test.batch.deprecated.module.groups=\
        modules/apps/bookmarks,\
        modules/apps/meris/meris-asset-category-demo,\
        modules/apps/sync

    test.batch.dist.app.servers=\
        jboss,\
        tomcat,\
        weblogic,\
        websphere,\
        wildfly

    test.batch.dist.source.excludes=\
        modules/**/tmp/**/*.class

    test.batch.dist.source.includes=\
        **/*.class,\
        **/*.profile-dxp.properties,\
        modules/core/portal-bootstrap/build/system.packages.extra.mf,\
        modules/core/portal-bootstrap/lib/biz.aQute.bnd.annotation.jar,\
        modules/dxp/apps/lcs/**/*,\
        plugins/marketplace/*,\
        sql/**/*.sql,\
        sql/lportal.properties,\
        sql/lportal.script,\
        tmp/**/*.jar,\
        tools/sdk/.ivy/ivy-*.jar,\
        tools/sdk/dist/com.liferay.blogs.api-*.jar,\
        tools/sdk/dist/com.liferay.blogs.service-*.jar,\
        tools/sdk/dist/com.liferay.friendly.url.api-*.jar,\
        tools/sdk/dist/com.liferay.friendly.url.service-*.jar,\
        tools/sdk/dist/com.liferay.journal.api-*.jar,\
        tools/sdk/dist/com.liferay.journal.service-*.jar,\
        tools/sdk/dist/com.liferay.portal.dao.db-*.jar,\
        tools/sdk/dist/com.liferay.subscription.api-*.jar,\
        tools/sdk/dist/com.liferay.subscription.service-*.jar,\
        tools/sdk/dist/com.liferay.wiki.api-*.jar,\
        tools/sdk/dist/com.liferay.wiki.service-*.jar

    #test.batch.max.group.size=

    test.batch.max.subgroup.size=5

    test.batch.minimum.slave.ram[analytics-cloud-cucumber-tomcat90-mysql57-jdk8]=32

    test.batch.names=${test.batch.names[acceptance-dxp]}

    test.batch.names[subrepository-validation]=\
        central-requirements-jdk8,\
        subrepository-compile-jdk8,\
        subrepository-semantic-versioning-jdk8,\
        \\\
        subrepository-pmd-jdk8,\
        subrepository-source-format-jdk8,\
        subrepository-unit-jdk8

    test.batch.run.property.query[functional-alpine3-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-centos6-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-centos8-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-debian7-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-debian8-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-debian9-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-orcllinux6-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-orcllinux7-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true)

    #test.batch.run.property.query[functional-bundle-tomcat-mysql57-jdk8]=(portal.smoke == true) AND (app.server.types == null OR app.server.types ~ tomcat) AND (database.types == null OR database.types ~ mysql)
    test.batch.run.property.query[functional-smoke-jboss72-mysql57-jdk8]=\
        (app.server.types ~ jboss) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-jboss72-mysql57-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ jboss) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tcserver40-mysql57-jdk8]=\
        (app.server.types ~ tcserver) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tcserver40-mysql57-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tcserver) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat80-db2111-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ db2) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat80-mariadb102-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mariadb104-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat80-mysql56-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat80-oracle121-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ oracle) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat80-postgresql10-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat80-sybase160-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sybase) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-db2111-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ db2) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-db2111-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ db2111) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mariadb102-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mariadb102-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57-jdk8_redhat]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57-jdk8_stable]=\
        ${test.batch.run.property.query[functional-smoke-tomcat90-mysql57-jdk8]}

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57-jdk8_zulu]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57-jdk11_oracle]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57-jdk11_zulu]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql80-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-mysql80-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-oracle122-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ oracle) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-oracle122-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ oracle) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-oracle193-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ oracle) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-oracle193-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ oracle) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql10-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql10-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ postgresql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql11-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql11-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ postgresql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql121-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-postgresql121-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ postgresql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-sqlserver2017-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-sqlserver2017-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-sqlserver2019-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-sqlserver2019-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-sybase160-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sybase) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-tomcat90-sybase160-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ sybase) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-weblogic122-mysql57-jdk8]=\
        (app.server.types ~ weblogic) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-websphere90-mysql57-jdk8]=\
        (app.server.types ~ websphere) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly100-mariadb100-jdk8]=\
        (app.server.types ~ wildfly) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly140-mariadb102-jdk8]=\
        (app.server.types ~ wildfly) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly140-mariadb102-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ wildfly) AND \
        (database.types == null OR database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly140-mariadb104-jdk8]=\
        (app.server.types ~ wildfly) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly140-mariadb104-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ wildfly) AND \
        (database.types == null OR database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly170-mariadb102-jdk8]=\
        (app.server.types ~ wildfly) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly170-mariadb102-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ wildfly) AND \
        (database.types == null OR database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly170-mariadb104-jdk8]=\
        (app.server.types ~ wildfly) AND \
        (database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-wildfly170-mariadb104-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ wildfly) AND \
        (database.types == null OR database.types ~ mariadb) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-suse15-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-tomcat80-db2111-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ db2) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat80-hypersonic20-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ hypersonic) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat80-mariadb102-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat80-mysql56-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat80-oracle121-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ oracle) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat80-postgresql10-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat80-sybase160-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sybase) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-db2111-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ db2) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-db2111-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ db2) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-hypersonic20-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ hypersonic) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-hypersonic20-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ hypersonic) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mariadb102-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mariadb102-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mariadb104-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mariadb104-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8_redhat]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8_zulu]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_oracle]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_zulu]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql80-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-mysql80-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-oracle122-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ oracle) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-oracle122-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ oracle) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-oracle193-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ oracle) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-oracle193-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ oracle) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql10-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql10-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql11-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql11-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql121-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-postgresql121-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sqlserver2017-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sqlserver) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sqlserver2017-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sqlserver) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sqlserver2019-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sqlserver) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sqlserver2019-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sqlserver) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sybase160-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sybase) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-tomcat90-sybase160-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sybase) AND \
        (portal.acceptance == true)

    test.batch.run.property.query[functional-ubuntu14-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-ubuntu16-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-ubuntu18-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mysql) AND \
        (environment.acceptance == true)

    test.batch.run.property.query[functional-upgrade-jboss72-mysql57-jdk8]=\
        (app.server.types ~ jboss) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-jboss72-mysql57-jdk11_open]=\
        (app.server.types ~ jboss) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tcserver40-mysql57-jdk8]=\
        (app.server.types ~ tcserver) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tcserver40-mysql57-jdk11_open]=\
        (app.server.types ~ tcserver) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat80-mariadb102-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat80-mariadb104-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat80-mysql56-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat80-oracle121-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ oracle) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat80-postgresql10-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.upgrades == true)
    #test.batch.run.property.query[functional-upgrade-tomcat80-sybase160-jdk8]=(portal.upgrades == true) AND (app.server.types == null OR app.server.types ~ tomcat) AND (database.types ~ sybase)
    test.batch.run.property.query[functional-upgrade-tomcat90-db2111-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ db2) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ db2) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mariadb) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb104-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb104-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mariadb) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk8_stable]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (custom.properties != "upgrade.database.auto.run=true") AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle122-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ oracle) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle122-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ oracle) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ oracle) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle193-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ oracle) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql10-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql10-jdk11_open]=\
        (app.server.types ~ jboss) AND \
        (database.types == null OR database.types ~ postgresql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql11-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql11-jdk11_open]=\
        (app.server.types ~ jboss) AND \
        (database.types == null OR database.types ~ postgresql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql121-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql121-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sqlserver) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sqlserver) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2019-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sqlserver) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2019-jdk11_open]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sqlserver) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sybase160-jdk8]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sybase) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-tomcat90-sybase160-jdk11_open]=\
        (app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ sybase) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-weblogic122-mysql57-jdk8]=\
        (app.server.types ~ weblogic) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-websphere90-mysql57-jdk8]=\
        (app.server.types ~ websphere) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-wildfly100-mariadb100-jdk8]=\
        (app.server.types ~ wildfly) AND \
        (database.types ~ mariadb) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-wildfly140-mariadb102-jdk8]=\
        (app.server.types ~ wildfly) AND \
        (database.types ~ mariadb) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-wildfly140-mariadb102-jdk11_open]=\
        (app.server.types ~ wildfly) AND \
        (database.types == null OR database.types ~ mariadb) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-wildfly140-mariadb104-jdk8]=\
        (app.server.types ~ wildfly) AND \
        (database.types ~ mariadb) AND \
        (portal.upgrades == true)

    test.batch.run.property.query[functional-upgrade-wildfly140-mariadb104-jdk11_open]=\
        (app.server.types ~ wildfly) AND \
        (database.types == null OR database.types ~ mariadb) AND \
        (portal.upgrades == true)

    #test.batch.run.type=sequential
    test.batch.run.type=single

    test.batch.size[analytics-cloud-cucumber-tomcat90-mysql57-jdk8]=1
    test.batch.size[archived-modules-test-jdk8]=1
    test.batch.size[archived-module-smoke-jdk8]=1
    test.batch.size[blade-samples-jdk8]=1
    test.batch.size[bundle-blacklist-restart-jdk8]=1
    test.batch.size[central-requirements-jdk8]=1
    test.batch.size[compile-jsp-jdk8]=1
    test.batch.size[database-upgrade-client-jdk8]=1
    test.batch.size[empty-temp-dir-jdk8]=1
    test.batch.size[gogo-shell-client-jdk8]=1
    test.batch.size[gradle-plugins-test-jdk8]=1
    test.batch.size[javadoc-jdk8]=1
    test.batch.size[js-unit-jdk8]=1
    test.batch.size[jsf-jdk8]=1
    test.batch.size[jsp-runtime-compile-jdk8]=1
    test.batch.size[lpkg-base-jdk8]=1
    test.batch.size[lpkg-container-jdk8]=1
    test.batch.size[lpkg-controller-jdk8]=1
    test.batch.size[lpkg-hot-deployment-jdk8]=1
    test.batch.size[lpkg-independence-jdk8]=1
    test.batch.size[lpkg-override-jdk8]=1
    test.batch.size[lpkg-persistence-jdk8]=1
    test.batch.size[lpkg-release-jdk8]=1
    test.batch.size[lpkg-startup-jdk8]=1
    test.batch.size[modules-compile-jdk8]=2
    test.batch.size[modules-integration-db2111-jdk8]=20
    test.batch.size[modules-integration-hypersonic20-jdk8]=20
    test.batch.size[modules-integration-mariadb102-jdk8]=20
    test.batch.size[modules-integration-mariadb104-jdk8]=20
    test.batch.size[modules-integration-mysql57-jdk8]=20
    test.batch.size[modules-integration-mysql80-jdk8]=20
    test.batch.size[modules-integration-oracle122-jdk8]=20
    test.batch.size[modules-integration-oracle193-jdk8]=20
    test.batch.size[modules-integration-postgresql10-jdk8]=20
    test.batch.size[modules-integration-postgresql11-jdk8]=20
    test.batch.size[modules-integration-sybase160-jdk8]=20
    test.batch.size[modules-unit-jdk8]=3
    test.batch.size[patching-tool-custom-scripts-jdk8]=1
    test.batch.size[pmd-jdk8]=1
    test.batch.size[portal-frontend-js-lint-jdk8]=1
    test.batch.size[portal-license-jdk8]=1
    test.batch.size[portal-second-startup-space-in-path-jdk8]=1
    test.batch.size[portal-startup-space-in-path-jdk8]=1
    test.batch.size[poshi-validation-jdk8]=1
    test.batch.size[release-osgi-state-exploded-test-jdk8]=1
    test.batch.size[release-osgi-state-lpkg-change-directory-test-jdk8]=1
    test.batch.size[release-osgi-state-lpkg-test-jdk8]=1
    test.batch.size[rest-builder-jdk8]=1
    test.batch.size[ruby-sass-compiler-jdk8]=1
    test.batch.size[semantic-versioning-jdk8]=1
    test.batch.size[service-builder-jdk8]=1
    test.batch.size[source-format-current-branch-jdk8]=1
    test.batch.size[source-format-jdk8]=1
    test.batch.size[tck-jdk8]=1
    test.batch.size[unit-jdk8]=1
    test.batch.size[wsdd-builder-jdk8]=1

    test.batch.spira.build.description=$(jenkins.report.url)
    test.batch.spira.build.name=$(jenkins.master.hostname)/$(jenkins.job.name)/$(jenkins.build.number) - $(jenkins.build.start)
    test.batch.spira.build.name[test-plugins-marketplaceapp]=$(package.file.name) - $(jenkins.master.hostname)/$(jenkins.job.name)/$(jenkins.build.number) - $(jenkins.build.start)
    test.batch.spira.build.name[test-portal-acceptance-pullrequest(*]=$(portal.branch.name) - $(pull.request.sender.username) > $(pull.request.receiver.username) - PR#$(pull.request.number) - $(jenkins.build.start)
    test.batch.spira.build.name[test-portal-source-format]=${test.batch.spira.build.name[test-portal-acceptance-pullrequest(*]}
    test.batch.spira.enabled[test-plugins-acceptance-pullrequest(*]=true
    test.batch.spira.enabled[test-plugins-extraapps]=true
    test.batch.spira.enabled[test-plugins-marketplaceapp]=true
    test.batch.spira.enabled[test-plugins-release]=true
    test.batch.spira.enabled[test-plugins-upstream]=true
    test.batch.spira.enabled[test-portal-acceptance-pullrequest(*]=true
    test.batch.spira.enabled[test-portal-acceptance-upstream(*]=true
    test.batch.spira.enabled[test-portal-acceptance-upstream-dxp(*]=true
    test.batch.spira.enabled[test-portal-app-release]=true
    test.batch.spira.enabled[test-portal-aws*]=true
    test.batch.spira.enabled[test-portal-environment(*]=true
    test.batch.spira.enabled[test-portal-fixpack-environment(*]=true
    test.batch.spira.enabled[test-portal-fixpack-release]=true
    test.batch.spira.enabled[test-portal-hotfix-release]=true
    test.batch.spira.enabled[test-portal-release]=true
    test.batch.spira.enabled[test-portal-source-format]=true
    test.batch.spira.enabled[test-portal-testsuite-upstream(*]=true
    test.batch.spira.enabled[test-portal-training]=true
    test.batch.spira.enabled[test-portal-upstream(*]=true
    test.batch.spira.enabled[test-qa-websites-*]=true
    test.batch.spira.project.id=16
    test.batch.spira.project.id[test-plugins-acceptance-pullrequest(*]=12
    test.batch.spira.project.id[test-plugins-extraapps]=12
    test.batch.spira.project.id[test-plugins-marketplaceapp]=12
    test.batch.spira.project.id[test-plugins-release]=12
    test.batch.spira.project.id[test-plugins-upstream]=12
    test.batch.spira.project.id[test-qa-websites-*]=12

    test.batch.spira.property.name[app.server]=Application Server
    test.batch.spira.property.name[browser]=Browser
    test.batch.spira.property.name[database]=Database
    test.batch.spira.property.name[java.jdk]=Java JDK
    test.batch.spira.property.name[operating.system]=Operating System
    test.batch.spira.property.name[product.team.names]=Product Teams
    test.batch.spira.property.name[testray.component.names]=Components
    test.batch.spira.property.name[testray.main.component.name]=Main Component

    test.batch.spira.property.types[testrun]=\
        app.server,\
        browser,\
        database,\
        java.jdk,\
        operating.system,\
        product.team.names,\
        testray.component.names,\
        testray.main.component.name

    test.batch.spira.property.value[app.server][glassfish]=Glassfish
    test.batch.spira.property.value[app.server][glassfish31]=Glassfish 3.1
    test.batch.spira.property.value[app.server][jboss]=JBoss
    test.batch.spira.property.value[app.server][jboss60]=JBoss 6.0
    test.batch.spira.property.value[app.server][jboss61]=JBoss 6.1
    test.batch.spira.property.value[app.server][jboss64]=JBoss 6.4
    test.batch.spira.property.value[app.server][jboss70]=JBoss 7.0
    test.batch.spira.property.value[app.server][jboss71]=JBoss 7.1
    test.batch.spira.property.value[app.server][jboss72]=JBoss 7.2
    test.batch.spira.property.value[app.server][jetty]=Jetty
    test.batch.spira.property.value[app.server][jetty81]=Jetty 8.1
    test.batch.spira.property.value[app.server][jonas]=JOnAS
    test.batch.spira.property.value[app.server][jonas52]=JOnAS 5.2
    test.batch.spira.property.value[app.server][resin]=Resin
    test.batch.spira.property.value[app.server][resin40]=Resin 4.0
    test.batch.spira.property.value[app.server][tcat]=TCat
    test.batch.spira.property.value[app.server][tcat60]=TCat 6.0
    test.batch.spira.property.value[app.server][tcat70]=TCat 7.0
    test.batch.spira.property.value[app.server][tcserver]=tc Server
    test.batch.spira.property.value[app.server][tcserver26]=tc Server 2.6
    test.batch.spira.property.value[app.server][tcserver31]=tc Server 3.1
    test.batch.spira.property.value[app.server][tcserver32]=tc Server 3.2
    test.batch.spira.property.value[app.server][tcserver40]=tc Server 4.0
    test.batch.spira.property.value[app.server][tomcat]=Tomcat
    test.batch.spira.property.value[app.server][tomcat60]=Tomcat 6.0
    test.batch.spira.property.value[app.server][tomcat70]=Tomcat 7.0
    test.batch.spira.property.value[app.server][tomcat80]=Tomcat 8.0
    test.batch.spira.property.value[app.server][tomcat85]=Tomcat 8.5
    test.batch.spira.property.value[app.server][tomcat90]=Tomcat 9.0
    test.batch.spira.property.value[app.server][weblogic]=Weblogic
    test.batch.spira.property.value[app.server][weblogic103]=Weblogic 11g
    test.batch.spira.property.value[app.server][weblogic121]=Weblogic 12c
    test.batch.spira.property.value[app.server][weblogic122]=Weblogic 12c
    test.batch.spira.property.value[app.server][websphere]=WebSphere
    test.batch.spira.property.value[app.server][websphere61]=WebSphere 6.1
    test.batch.spira.property.value[app.server][websphere70]=WebSphere 7.0
    test.batch.spira.property.value[app.server][websphere80]=WebSphere 8.0
    test.batch.spira.property.value[app.server][websphere85]=WebSphere 8.5
    test.batch.spira.property.value[app.server][websphere90]=WebSphere 9.0
    test.batch.spira.property.value[app.server][wildfly]=WildFly
    test.batch.spira.property.value[app.server][wildfly10]=WildFly 10.0
    test.batch.spira.property.value[app.server][wildfly11]=WildFly 11.0
    test.batch.spira.property.value[app.server][wildfly14]=WildFly 14.0
    test.batch.spira.property.value[app.server][wildfly16]=WildFly 16.0

    test.batch.spira.property.value[browser][firefox]=${test.batch.spira.property.value[browser][firefox52]}
    test.batch.spira.property.value[browser][firefox22]=Firefox 22.0
    test.batch.spira.property.value[browser][firefox38]=Firefox 38.0
    test.batch.spira.property.value[browser][firefox45]=Firefox 45.0
    test.batch.spira.property.value[browser][firefox52]=Firefox 52.0
    test.batch.spira.property.value[browser][chrome]=${test.batch.spira.property.value[browser][chrome65]}
    test.batch.spira.property.value[browser][chrome44]=Chrome 44.0
    test.batch.spira.property.value[browser][chrome65]=Chrome 65.0
    test.batch.spira.property.value[browser][edge]=${test.batch.spira.property.value[browser][edge401]}
    test.batch.spira.property.value[browser][edge201]=Edge 20.1
    test.batch.spira.property.value[browser][edge401]=Edge 40.1
    test.batch.spira.property.value[browser][functional]=${test.batch.spira.property.value[browser][chrome65]}
    test.batch.spira.property.value[browser][ie7]=Internet Explorer 7
    test.batch.spira.property.value[browser][ie8]=Internet Explorer 8
    test.batch.spira.property.value[browser][ie9]=Internet Explorer 9
    test.batch.spira.property.value[browser][ie10]=Internet Explorer 10
    test.batch.spira.property.value[browser][ie11]=Internet Explorer 11
    test.batch.spira.property.value[browser][safari]=${test.batch.spira.property.value[browser][safari11]}
    test.batch.spira.property.value[browser][safari8]=Safari 8
    test.batch.spira.property.value[browser][safari11]=Safari 11

    test.batch.spira.property.value[database][auroramysql56]=Aurora MySQL 5.6
    test.batch.spira.property.value[database][auroramysql57]=Aurora MySQL 5.7
    test.batch.spira.property.value[database][aurorapostgresql96]=Aurora PostgreSQL 9.6
    test.batch.spira.property.value[database][db297]=IBM DB2 9.7
    test.batch.spira.property.value[database][db2101]=IBM DB2 10.1
    test.batch.spira.property.value[database][db2105]=IBM DB2 10.5
    test.batch.spira.property.value[database][db2111]=IBM DB2 11.1
    test.batch.spira.property.value[database][hypersonic20]=Hypersonic
    test.batch.spira.property.value[database][mariadb100]=MariaDB 10.0
    test.batch.spira.property.value[database][mariadb102]=MariaDB 10.2
    test.batch.spira.property.value[database][mariadb104]=MariaDB 10.4
    test.batch.spira.property.value[database][mysql50]=MySQL 5.0
    test.batch.spira.property.value[database][mysql51]=MySQL 5.1
    test.batch.spira.property.value[database][mysql55]=MySQL 5.5
    test.batch.spira.property.value[database][mysql56]=MySQL 5.6
    test.batch.spira.property.value[database][mysql57]=MySQL 5.7
    test.batch.spira.property.value[database][mysql80]=MySQL 8.0
    test.batch.spira.property.value[database][oracle102]=Oracle Database 10.2
    test.batch.spira.property.value[database][oracle112]=Oracle Database 11.2
    test.batch.spira.property.value[database][oracle121]=Oracle Database 12.1
    test.batch.spira.property.value[database][oracle122]=Oracle Database 12.2
    test.batch.spira.property.value[database][postgresql84]=PostgreSQL 8.4
    test.batch.spira.property.value[database][postgresql90]=PostgreSQL 9.0
    test.batch.spira.property.value[database][postgresql92]=PostgreSQL 9.2
    test.batch.spira.property.value[database][postgresql93]=PostgreSQL 9.3
    test.batch.spira.property.value[database][postgresql94]=PostgreSQL 9.4
    test.batch.spira.property.value[database][postgresql96]=PostgreSQL 9.6
    test.batch.spira.property.value[database][postgresql10]=PostgreSQL 10
    test.batch.spira.property.value[database][postgresql11]=PostgreSQL 11
    test.batch.spira.property.value[database][postgresql121]=PostgreSQL 12.1
    test.batch.spira.property.value[database][sqlserver2005]=Microsoft SQL Server 2005
    test.batch.spira.property.value[database][sqlserver2008]=Microsoft SQL Server 2008
    test.batch.spira.property.value[database][sqlserver2008r2]=Microsoft SQL Server 2008r2
    test.batch.spira.property.value[database][sqlserver2012]=Microsoft SQL Server 2012
    test.batch.spira.property.value[database][sqlserver2014]=Microsoft SQL Server 2014
    test.batch.spira.property.value[database][sqlserver2016]=Microsoft SQL Server 2016
    test.batch.spira.property.value[database][sqlserver2017]=Microsoft SQL Server 2017
    test.batch.spira.property.value[database][sqlserver2019]=Microsoft SQL Server 2019
    test.batch.spira.property.value[database][sybase150]=Sybase 15.0
    test.batch.spira.property.value[database][sybase155]=Sybase 15.5
    test.batch.spira.property.value[database][sybase157]=Sybase 15.7
    test.batch.spira.property.value[database][sybase160]=Sybase 16.0

    test.batch.spira.property.value[java.jdk][jdk8]=${test.batch.spira.property.value[java.jdk][oracle8]}
    test.batch.spira.property.value[java.jdk][jdk8_redhat]=${test.batch.spira.property.value[java.jdk][redhat8]}
    test.batch.spira.property.value[java.jdk][jdk8_zulu]=${test.batch.spira.property.value[java.jdk][zulu8]}
    test.batch.spira.property.value[java.jdk][jdk11_open]=${test.batch.spira.property.value[java.jdk][open11]}
    test.batch.spira.property.value[java.jdk][jdk11_oracle]=${test.batch.spira.property.value[java.jdk][oracle11]}
    test.batch.spira.property.value[java.jdk][jdk11_zulu]=${test.batch.spira.property.value[java.jdk][zulu11]}

    test.batch.spira.property.value[java.jdk][ibm8]=IBM J9 JDK 8 64-Bit
    test.batch.spira.property.value[java.jdk][ibm11]=IBM J9 JDK 11 64-Bit
    test.batch.spira.property.value[java.jdk][jdk7]=Oracle JDK 7 64-Bit
    test.batch.spira.property.value[java.jdk][jdk8]=Oracle JDK 8 64-Bit
    test.batch.spira.property.value[java.jdk][open8]=Open JDK 8 64-Bit
    test.batch.spira.property.value[java.jdk][open11]=Open JDK 11 64-Bit
    test.batch.spira.property.value[java.jdk][oracle5]=Oracle JDK 5 64-Bit
    test.batch.spira.property.value[java.jdk][oracle6]=Oracle JDK 6 64-Bit
    test.batch.spira.property.value[java.jdk][oracle7]=Oracle JDK 7 64-Bit
    test.batch.spira.property.value[java.jdk][oracle8]=Oracle JDK 8 64-Bit
    test.batch.spira.property.value[java.jdk][oracle11]=Oracle JDK 11 64-Bit
    test.batch.spira.property.value[java.jdk][redhat8]=Red Hat OpenJDK 8 64-Bit
    test.batch.spira.property.value[java.jdk][redhat11]=Red Hat OpenJDK 11 64-Bit
    test.batch.spira.property.value[java.jdk][zulu8]=Azul Zulu JDK 8 64-Bit
    test.batch.spira.property.value[java.jdk][zulu11]=Azul Zulu JDK 11 64-Bit

    test.batch.spira.property.value[operating.system]=${test.batch.spira.property.value[operating.system][centos7]}
    test.batch.spira.property.value[operating.system][alpine38]=Alpine Linux 3.8 64-Bit
    test.batch.spira.property.value[operating.system][alpine3]=Alpine Linux 3.8 64-Bit
    test.batch.spira.property.value[operating.system][amazonlinux2]=Amazon Linux 2 64-Bit
    test.batch.spira.property.value[operating.system][centos6]=CentOS 6 64-Bit
    test.batch.spira.property.value[operating.system][centos7]=CentOS 7 64-Bit
    test.batch.spira.property.value[operating.system][debian7]=Debian 7 64-Bit
    test.batch.spira.property.value[operating.system][debian8]=Debian 8 64-Bit
    test.batch.spira.property.value[operating.system][debian9]=Debian 9 64-Bit
    test.batch.spira.property.value[operating.system][orcllinux6]=Oracle Linux 6 64-Bit
    test.batch.spira.property.value[operating.system][orcllinux7]=Oracle Linux 7 64-Bit
    test.batch.spira.property.value[operating.system][osx1010]=OSX 10.10 64-Bit
    test.batch.spira.property.value[operating.system][osx1012]=OSX 10.12 64-Bit
    test.batch.spira.property.value[operating.system][solaris10]=Solaris 10 64-Bit
    test.batch.spira.property.value[operating.system][solaris11]=Solaris 11 64-Bit
    test.batch.spira.property.value[operating.system][suse11]=SUSE 11 64-Bit
    test.batch.spira.property.value[operating.system][suse12]=SUSE 12 64-Bit
    test.batch.spira.property.value[operating.system][suse15]=SUSE 15 64-Bit
    test.batch.spira.property.value[operating.system][ubuntu14]=Ubuntu 14 64-Bit
    test.batch.spira.property.value[operating.system][ubuntu16]=Ubuntu 16 64-Bit
    test.batch.spira.property.value[operating.system][ubuntu18]=Ubuntu 18 64-Bit
    test.batch.spira.property.value[operating.system][win10]=Windows 10 64-Bit
    test.batch.spira.property.value[operating.system][win2008r2]=Windows Server 2008r2 64-Bit
    test.batch.spira.property.value[operating.system][win2012]=Windows Server 2012 64-Bit
    test.batch.spira.property.value[operating.system][win2012r2]=Windows Server 2012r2 64-Bit
    test.batch.spira.property.value[operating.system][win2016]=Windows Server 2016 64-Bit
    test.batch.spira.property.value[operating.system][win2019]=Windows Server 2019 64-Bit

    test.batch.spira.release.path[test-plugins-acceptance-pullrequest(*]=/Liferay $(portal.profile) $(portal.version)/Plugins Pull Request/$(plugin.name)
    test.batch.spira.release.path[test-plugins-extraapps]=/Liferay $(portal.profile) $(portal.version)/Content Targeting
    test.batch.spira.release.path[test-plugins-marketplaceapp]=/Liferay $(portal.profile) $(portal.version)/Marketplace Release
    test.batch.spira.release.path[test-plugins-release]=/Liferay $(portal.profile) $(portal.version)/Plugins Release/$(plugin.name)
    test.batch.spira.release.path[test-plugins-upstream]=/Liferay $(portal.profile) $(portal.version)/Plugins Upstream/$(plugin.name)
    test.batch.spira.release.path[test-portal-acceptance-pullrequest(*]=/Liferay $(portal.profile) $(portal.version)/Pull Request/ci:test:$(ci.test.suite)
    test.batch.spira.release.path[test-portal-acceptance-upstream(*]=/Liferay $(portal.profile) $(portal.version)/Upstream/ci:test:acceptance-ce
    test.batch.spira.release.path[test-portal-acceptance-upstream-dxp(*]=/Liferay $(portal.profile) $(portal.version)/Upstream/ci:test:acceptance-dxp
    test.batch.spira.release.path[test-portal-app-release]=/Liferay $(portal.profile) $(portal.version)/App Release/$(portal.app.name)
    test.batch.spira.release.path[test-portal-aws*]=/Liferay $(portal.profile) $(portal.version)/Amazon Web Services
    test.batch.spira.release.path[test-portal-environment(*]=/Liferay $(portal.profile) $(portal.version)/$(portal.profile) Environment
    test.batch.spira.release.path[test-portal-fixpack-environment(*]=/Liferay $(portal.profile) $(portal.version)/Fix Pack Release
    test.batch.spira.release.path[test-portal-fixpack-release]=/Liferay $(portal.profile) $(portal.version)/Fix Pack Release
    test.batch.spira.release.path[test-portal-hotfix-release]=/Liferay $(portal.profile) $(portal.version)/Hotfix Release
    test.batch.spira.release.path[test-portal-release]=/Liferay $(portal.profile) $(portal.version)/$(portal.profile) Release
    test.batch.spira.release.path[test-portal-source-format]=/Liferay $(portal.profile) $(portal.version)/Pull Request/ci:test:sf
    test.batch.spira.release.path[test-portal-testsuite-upstream(*]=/Liferay $(portal.profile) $(portal.version)/Upstream/ci:test:$(ci.test.suite)
    test.batch.spira.release.path[test-portal-training]=/Liferay $(portal.profile) $(portal.version)/Training
    test.batch.spira.release.path[test-portal-upstream(*]=/Liferay $(portal.profile) $(portal.version)/Upstream/ci:test:$(ci.test.suite)
    test.batch.spira.release.path[test-qa-websites-*]=/Liferay $(portal.profile) $(portal.version)/QA Websites/$(qa.websites.project.name)

    test.batch.spira.test.case.type=Batch
    test.batch.spira.test.case.type[*-cucumber-*]=Cucumber
    test.batch.spira.test.case.type[functional-*]=Poshi
    test.batch.spira.test.case.type[integration-*]=Integration
    test.batch.spira.test.case.type[modules-integration-*]=Modules Integration
    test.batch.spira.test.case.type[modules-unit-*]=Modules Unit

    test.batch.spira.test.case.type[plugins-functional-*]=Poshi
    test.batch.spira.test.case.type[test-portal-environment-*]=Poshi

    test.batch.spira.test.case.type[unit-*]=Unit

    #
    # Acceptance
    #

    test.batch.dist.app.servers[acceptance]=${test.batch.dist.app.servers}
    test.batch.names[acceptance]=${test.batch.names}

    #
    # Acceptance (CE)
    #

    test.batch.dist.app.servers[acceptance-ce]=${test.batch.dist.app.servers}

    test.batch.names[acceptance-ce]=\
        archived-module-smoke-jdk8,\
        archived-modules-test-jdk8,\
        bundle-blacklist-restart-jdk8,\
        central-requirements-jdk8,\
        compile-jsp-jdk8,\
        empty-temp-dir-jdk8,\
        #functional-bundle-tomcat-mysql57-jdk8,\
        functional-smoke-jboss72-mysql57-jdk8,\
        functional-smoke-tomcat90-mariadb102-jdk8,\
        functional-smoke-tomcat90-mysql57-jdk8,\
        functional-smoke-tomcat90-mysql57-jdk11_open,\
        functional-smoke-tomcat90-mysql80-jdk8,\
        functional-smoke-tomcat90-postgresql10-jdk8,\
        functional-smoke-tomcat90-postgresql121-jdk8,\
        functional-smoke-weblogic122-mysql57-jdk8,\
        functional-smoke-websphere90-mysql57-jdk8,\
        functional-smoke-wildfly140-mariadb102-jdk8,\
        functional-smoke-wildfly170-mariadb104-jdk8,\
        functional-tomcat90-hypersonic20-jdk8,\
        functional-tomcat90-mariadb102-jdk8,\
        functional-tomcat90-mariadb104-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        functional-tomcat90-postgresql10-jdk8,\
        functional-tomcat90-postgresql121-jdk8,\
        functional-upgrade-tomcat90-mysql57-jdk8,\
        gogo-shell-client-jdk8,\
        javadoc-jdk8,\
        js-unit-jdk8,\
        jsp-runtime-compile-jdk8,\
        lpkg-base-jdk8,\
        lpkg-container-jdk8,\
        lpkg-controller-jdk8,\
        lpkg-hot-deployment-jdk8,\
        lpkg-independence-jdk8,\
        lpkg-override-jdk8,\
        lpkg-persistence-jdk8,\
        lpkg-release-jdk8,\
        lpkg-startup-jdk8,\
        modules-compile-jdk8,\
        modules-functional-jdk8,\
        modules-functional-tomcat90-mysql57-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-integration-project-templates-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        modules-unit-project-templates-jdk8,\
        pmd-jdk8,\
        #portal-frontend-js-lint-jdk8,\
        portal-license-jdk8,\
        portal-second-startup-space-in-path-jdk8,\
        portal-startup-space-in-path-jdk8,\
        poshi-validation-jdk8,\
        release-osgi-state-exploded-test-jdk8,\
        release-osgi-state-lpkg-change-directory-test-jdk8,\
        release-osgi-state-lpkg-test-jdk8,\
        rest-builder-jdk8,\
        ruby-sass-compiler-jdk8,\
        semantic-versioning-jdk8,\
        service-builder-jdk8,\
        source-format-jdk8,\
        tck-jdk8,\
        unit-jdk8,\
        wsdd-builder-jdk8

    #
    # Acceptance (DXP)
    #

    test.batch.dist.app.servers[acceptance-dxp]=${test.batch.dist.app.servers}

    test.batch.names[acceptance-dxp]=\
        ${test.batch.names[acceptance-ce]},\
        functional-smoke-tomcat90-db2111-jdk8,\
        functional-smoke-tomcat90-oracle122-jdk8,\
        functional-smoke-tomcat90-sqlserver2017-jdk8,\
        functional-smoke-tomcat90-sqlserver2019-jdk8,\
        functional-smoke-tomcat90-sybase160-jdk8,\
        functional-tomcat90-db2111-jdk8,\
        functional-tomcat90-oracle122-jdk8,\
        functional-tomcat90-sqlserver2017-jdk8,\
        functional-tomcat90-sqlserver2019-jdk8,\
        functional-tomcat90-sybase160-jdk8

    #
    # Accounts
    #

    test.batch.class.names.includes[accounts]=\
        **/account-test/**/*Test.java

    test.batch.dist.app.servers[accounts]=tomcat

    test.batch.names[accounts]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][accounts]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Business Accounts") OR \
            (testray.main.component.name ~ "Business Accounts")\
        )

    #
    # Analytics Cloud
    #

    test.batch.cucumber.options[analytics-cloud]=\
        \
        --tags @portal_Master_Upstream_CI \
        --tags ~@blocked \
        --tags ~@prototype \
        --tags ~@skip \
        \
        src/testIntegration/resources/features

    test.batch.dist.app.servers[analytics-cloud]=tomcat
    test.batch.names[analytics-cloud]=analytics-cloud-cucumber-tomcat90-mysql57-jdk8
    test.batch.osb.asah.github.url[analytics-cloud]=https://github.com/liferay/com-liferay-osb-asah-private/tree/7.0.x
    test.batch.osb.faro.github.url[analytics-cloud]=https://github.com/liferay/com-liferay-osb-faro-private/tree/7.1.x
    test.batch.spira.build.name[analytics-cloud]=$(jenkins.controller.job.name)/$(jenkins.controller.build.number) - $(jenkins.controller.build.start)
    test.batch.spira.project.id[analytics-cloud]=24
    test.batch.spira.release.id[analytics-cloud]=1287

    #
    # App Builder
    #

    test.batch.class.names.includes[app-builder]=\
        **/app-builder-rest-test/**/*Test.java

    test.batch.dist.app.servers[app-builder]=tomcat

    test.batch.names[app-builder]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        functional-upgrade-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][app-builder]=\
        (testray.main.component.name == "App Builder")

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk8][app-builder]=\
        (testray.main.component.name == "App Builder")

    #
    # Auto Tagging
    #

    test.batch.class.names.includes[autotagging]=\
        **/asset-auto-tagger-google-cloud-natural-language-impl/**/*Test.java,\
        **/asset-auto-tagger-google-cloud-natural-language-test/**/*Test.java,\
        **/asset-auto-tagger-opennlp-test/**/*Test.java,\
        **/asset-auto-tagger-test/**/*Test.java,\
        **/document-library-asset-auto-tagger-google-cloud-vision/**/*Test.java,\
        **/document-library-asset-auto-tagger-opennlp-test/**/*Test.java,\
        **/document-library-asset-auto-tagger-tensorflow-test/**/*Test.java,\
        **/journal-asset-auto-tagger-opennlp-test/**/*Test.java

    test.batch.dist.app.servers[autotagging]=tomcat

    test.batch.names[autotagging]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][autotagging]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Auto Tagging") OR \
            (testray.main.component.name ~ "Auto Tagging")\
        )

    #
    # Backend
    #

    test.batch.dist.app.servers[backend]=tomcat

    test.batch.names[backend]=\
        bundle-blacklist-restart-jdk8,\
        central-requirements-jdk8,\
        lpkg-base-jdk8,\
        lpkg-container-jdk8,\
        lpkg-controller-jdk8,\
        lpkg-hot-deployment-jdk8,\
        lpkg-independence-jdk8,\
        lpkg-override-jdk8,\
        lpkg-persistence-jdk8,\
        lpkg-release-jdk8,\
        lpkg-startup-jdk8,\
        modules-compile-jdk8,\
        modules-integration-db2111-jdk8,\
        modules-integration-hypersonic20-jdk8,\
        modules-integration-mariadb102-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-integration-oracle122-jdk8,\
        modules-integration-postgresql10-jdk8,\
        modules-integration-sqlserver2017-jdk8,\
        #modules-integration-sybase160-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        pmd-jdk8,\
        release-osgi-state-exploded-test-jdk8,\
        release-osgi-state-lpkg-change-directory-test-jdk8,\
        release-osgi-state-lpkg-test-jdk8,\
        rest-builder-jdk8,\
        service-builder-jdk8,\
        source-format-jdk8,\
        unit-jdk8

    #
    # Backend Hypersonic
    #

    test.batch.dist.app.servers[backend-hypersonic]=tomcat

    test.batch.names[backend-hypersonic]=\
        bundle-blacklist-restart-jdk8,\
        central-requirements-jdk8,\
        lpkg-base-jdk8,\
        lpkg-container-jdk8,\
        lpkg-controller-jdk8,\
        lpkg-hot-deployment-jdk8,\
        lpkg-independence-jdk8,\
        lpkg-override-jdk8,\
        lpkg-persistence-jdk8,\
        lpkg-release-jdk8,\
        lpkg-startup-jdk8,\
        modules-compile-jdk8,\
        modules-integration-hypersonic20-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        pmd-jdk8,\
        release-osgi-state-exploded-test-jdk8,\
        release-osgi-state-lpkg-change-directory-test-jdk8,\
        release-osgi-state-lpkg-test-jdk8,\
        rest-builder-jdk8,\
        service-builder-jdk8,\
        source-format-jdk8,\
        unit-jdk8

    #
    # Blade
    #

    test.batch.dist.app.servers[blade]=tomcat
    test.batch.names[blade]=blade-samples-jdk8

    #
    # Blogs
    #

    test.batch.class.names.includes[blogs]=\
        **/blogs-recent-bloggers-test/**/*Test.java,\
        **/blogs-test/**/*Test.java,\
        **/blogs-test-util/**/*Test.java,\
        **/blogs-uad-test/**/*Test.java,\
        **/blogs-web/**/*Test.java,\
        **/blogs-web-test/**/*Test.java

    test.batch.dist.app.servers[blogs]=tomcat

    test.batch.names[blogs]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][blogs]=\
        (portal.upstream == "true") AND \
        (\
            (testray.component.names ~ "Blogs") OR \
            (testray.main.component.name ~ "Blogs")\
        )

    #
    # Bulk Editing
    #

    test.batch.class.names.includes[bulkediting]=\
        **/bulk-rest-test/**/*Test.java,\
        **/bulk-selection-test/**/*Test.java

    test.batch.dist.app.servers[bulkediting]=tomcat

    test.batch.names[bulkediting]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][bulkediting]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Bulk Editing") OR \
            (testray.main.component.name ~ "Bulk Editing")\
        )

    #
    # Bundle
    #

    test.batch.dist.app.servers[bundle]=tomcat
    test.batch.names[bundle]=

    #
    # Bundles
    #

    test.batch.dist.app.servers[bundles]=\
        jboss,\
        tomcat,\
        weblogic,\
        websphere,\
        wildfly

    test.batch.names[bundles]=

    #
    # Calendar
    #

    test.batch.class.names.includes[calendar]=\
        **/calendar-test/**/*Test.java,\
        **/calendar-web-test/**/*Test.java

    test.batch.dist.app.servers[calendar]=tomcat

    test.batch.names[calendar]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][calendar]=\
        (portal.upstream != quarantine) AND \
        (\
            (testray.main.component.name ~ "Calendar")\
        )

    #
    # Clustering
    #

    test.batch.class.names.includes[clustering]=\
        **/portal-cache/**/*Test.java,\
        **/portal-cluster-multiple/**/*Test.java,\
        **/portal-scheduler/**/*Test.java

    test.batch.dist.app.servers[clustering]=tomcat

    test.batch.names[clustering]=\
        functional-tomcat90-mysql57-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-unit-jdk8

    test.batch.run.property.query[functional-tomcat*-mysql*-jdk8][clustering]=\
        (testray.main.component.name == "Clustering") OR \
        (testray.main.component.name == "Rolling Restart")

    #
    # Commerce
    #

    test.batch.class.names.includes[commerce]=\
        **/commerce/**/*Test.java

    test.batch.dist.app.servers[commerce]=tomcat

    test.batch.names[commerce]=\
        functional-tomcat90-mysql57-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-unit-jdk8

    test.batch.run.property.query[functional-tomcat*-mysql*-jdk8][commerce]=\
        (portal.upstream == true) AND \
        (testray.main.component.name ~ "Commerce")

    #
    # Content Page Review
    #

    test.batch.class.names.includes[contentpagereview]=\
        **/layout-content-page-editor-web/**/*test.js

    test.batch.dist.app.servers[contentpagereview]=tomcat

    test.batch.names[contentpagereview]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][contentpagereview]=\
        (portal.upstream == "true") AND \
        (\
            (testray.component.names ~ "Content Page Review") OR \
            (testray.main.component.name ~ "Content Page Review")\
        )

    #
    # Depot
    #

    test.batch.class.names.includes[depot]=\
        **/content-repository-test/**/*Test.java

    test.batch.dist.app.servers[depot]=tomcat

    test.batch.names[depot]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][depot]=\
        (testray.main.component.name ~ "Depot")

    #
    # Document Library Store
    #

    test.batch.class.names.includes[dlstore]=\
        **/change-tracking-store-test/**/*Test.java,\
        **/portal-store/**/*Test.java

    test.batch.dist.app.servers[dlstore]=tomcat

    test.batch.names[dlstore]=\
        functional-tomcat90-mysql57-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][dlstore]=\
        (testray.main.component.name ~ "Document Library Stores")

    #
    # Data Engine
    #

    test.batch.class.names.includes[data-engine]=\
        **/app-builder-rest-test/**/*Test.java,\
        **/data-engine/**/*Test.java,\
        **/dynamic-data-lists/**/*Test.java,\
        **/dynamic-data-mapping/**/*Test.java

    test.batch.dist.app.servers[data-engine]=tomcat

    test.batch.names[data-engine]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        functional-upgrade-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][data-engine]=\
        (\
            (testray.component.names ~ "Dynamic Data Lists") OR \
            (testray.main.component.name ~ "Dynamic Data Lists")\
        )

    #
    # Documents
    #

    test.batch.class.names.includes[documents]=\
        **/document-library-content-test/**/*Test.java,\
        **/document-library-document-conversion/**/*Test.java,\
        **/document-library-repository-cmis-api/**/*Test.java,\
        **/document-library-repository-cmis-impl/**/*Test.java,\
        **/document-library-repository-search/**/*Test.java,\
        **/document-library-service/**/*Test.java,\
        **/document-library-test/**/*Test.java,\
        **/document-library-test-util/**/*Test.java,\
        **/document-library-uad-test/**/*Test.java,\
        **/document-library-web-test/**/*Test.java

    test.batch.dist.app.servers[documents]=tomcat

    test.batch.names[documents]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][documents]=\
        (portal.upstream == "true") AND \
        (\
            (testray.component.names ~ "Documents Management") OR \
            (testray.main.component.name ~ "Documents Management")\
        )

    #
    # Dummy
    #

    test.batch.class.names.includes[modules-integration-*-jdk8][dummy]=**/jenkins-results-parser/**/DummyIntegrationTest.java
    test.batch.class.names.includes[modules-unit-jdk8][dummy]=**/jenkins-results-parser/**/DummyUnitTest.java

    test.batch.dist.app.servers[dummy]=tomcat

    test.batch.names[dummy]=\
        functional-tomcat90-mysql57-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][dummy]=\
        portal.smoke == "dummy"

    #
    # Echo
    #

    test.batch.class.names.excludes[echo]=\
        **/archived/**/*Test.java,\
        **/asset-auto-tagger-google-cloud-natural-language-test/**/*Test.java,\
        **/asset-auto-tagger-opennlp-test/**/*Test.java,\
        **/asset-auto-tagger-service/**/*Test.java,\
        **/asset-auto-tagger-test/**/*Test.java,\
        **/document-library/**/*Test.java,\
        **/layout-content-page-editor-web/**/*test.js,\
        **/layout-seo-test/**/*Test.java,\
        **/layout-seo-web-test/**/*Test.java

    test.batch.class.names.includes[echo]=\
        **/asset/**/*Test.java,\
        **/asset-tags-validator/**/*Test.java,\
        **/fragment/**/*Test.java,\
        **/iframe/iframe-web/**/*Test.java,\
        **/info/**/*Test.java,\
        **/journal/**/*Test.java,\
        **/journal-properties-transformer-listener/journal-properties-transformer-listener/**/*Test.java,\
        **/layout/**/*Test.java,\
        **/map/map-google-maps/**/*Test.java,\
        **/nested-portlets/**/*Test.java,\
        **/portlet-display-template/**/*Test.java,\
        **/portlet-configuration/**/*Test.java,\
        **/product-navigation/**/*Test.java,\
        **/rss/**/*Test.java,\
        **/site/**/*Test.java,\
        **/site-navigation/**/*Test.java,\
        **/trash/**/*Test.java

    test.batch.dist.app.servers[echo]=tomcat

    test.batch.names[echo]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][echo]=\
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name ~ "Asset Lists") OR \
            (testray.main.component.name ~ "Asset Publisher") OR \
            (testray.main.component.name ~ "Breadcrumb") OR \
            (testray.main.component.name ~ "Categories") OR \
            (testray.main.component.name ~ "Content Pages") OR \
            (testray.main.component.name ~ "Content and Application Templates") OR \
            (testray.main.component.name ~ "Control Menu") OR \
            (testray.main.component.name ~ "Display Pages") OR \
            (testray.main.component.name ~ "Fragments") OR \
            (testray.main.component.name ~ "Highest Rated Assets") OR \
            (testray.main.component.name ~ "IFrame Portlet") OR \
            (testray.main.component.name ~ "Layout Page Templates") OR \
            (testray.main.component.name ~ "Localization") OR \
            (testray.main.component.name ~ "Look And Feel") OR \
            (testray.main.component.name ~ "Most Viewed Assets") OR \
            (testray.main.component.name ~ "Navigation") OR \
            (testray.main.component.name ~ "Nested Portlets") OR \
            (testray.main.component.name ~ "Page Templates") OR \
            (testray.main.component.name ~ "RSS") OR \
            (testray.main.component.name ~ "Recycle Bin") OR \
            (testray.main.component.name ~ "Related Assets") OR \
            (testray.main.component.name ~ "Site Administration") OR \
            (testray.main.component.name ~ "Site Localization") OR \
            (testray.main.component.name ~ "Site Pages Administration") OR \
            (testray.main.component.name ~ "Sitemap") OR \
            (testray.main.component.name ~ "Style Books") OR \
            (testray.main.component.name ~ "Tags") OR \
            (testray.main.component.name ~ "Upgrades Foundation") OR \
            (testray.main.component.name ~ "Upgrades WEM") OR \
            (testray.main.component.name ~ "Web Content Administration") OR \
            (testray.main.component.name ~ "Web Content Display")\
        )

    #
    # Echo Acceptance
    #

    test.batch.class.names.excludes[echo-acceptance]=\
        **/archived/**/*Test.java,\
        **/asset-auto-tagger-google-cloud-natural-language-test/**/*Test.java,\
        **/asset-auto-tagger-opennlp-test/**/*Test.java,\
        **/asset-auto-tagger-service/**/*Test.java,\
        **/asset-auto-tagger-test/**/*Test.java,\
        **/document-library/**/*Test.java,\
        **/layout-content-page-editor-web/**/*test.js,\
        **/layout-seo-test/**/*Test.java,\
        **/layout-seo-web-test/**/*Test.java

    test.batch.class.names.includes[echo-acceptance]=\
        **/asset/**/*Test.java,\
        **/asset-tags-validator/**/*Test.java,\
        **/fragment/**/*Test.java,\
        **/iframe/iframe-web/**/*Test.java,\
        **/info/**/*Test.java,\
        **/journal/**/*Test.java,\
        **/journal-properties-transformer-listener/journal-properties-transformer-listener/**/*Test.java,\
        **/layout/**/*Test.java,\
        **/map/map-google-maps/**/*Test.java,\
        **/nested-portlets/**/*Test.java,\
        **/portlet-display-template/**/*Test.java,\
        **/portlet-configuration/**/*Test.java,\
        **/product-navigation/**/*Test.java,\
        **/rss/**/*Test.java,\
        **/site/**/*Test.java,\
        **/site-navigation/**/*Test.java,\
        **/trash/**/*Test.java

    test.batch.dist.app.servers[echo-acceptance]=tomcat

    test.batch.names[echo-acceptance]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][echo-acceptance]=\
        (portal.acceptance == true) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name ~ "Asset Lists") OR \
            (testray.main.component.name ~ "Asset Publisher") OR \
            (testray.main.component.name ~ "Breadcrumb") OR \
            (testray.main.component.name ~ "Categories") OR \
            (testray.main.component.name ~ "Content Pages") OR \
            (testray.main.component.name ~ "Content and Application Templates") OR \
            (testray.main.component.name ~ "Display Pages") OR \
            (testray.main.component.name ~ "Fragments") OR \
            (testray.main.component.name ~ "Highest Rated Assets") OR \
            (testray.main.component.name ~ "IFrame Portlet") OR \
            (testray.main.component.name ~ "Layout Page Templates") OR \
            (testray.main.component.name ~ "Localization") OR \
            (testray.main.component.name ~ "Look And Feel") OR \
            (testray.main.component.name ~ "Most Viewed Assets") OR \
            (testray.main.component.name ~ "Navigation") OR \
            (testray.main.component.name ~ "Nested Portlets") OR \
            (testray.main.component.name ~ "Page Templates") OR \
            (testray.main.component.name ~ "RSS") OR \
            (testray.main.component.name ~ "Recycle Bin") OR \
            (testray.main.component.name ~ "Related Assets") OR \
            (testray.main.component.name ~ "Site Administration") OR \
            (testray.main.component.name ~ "Site Localization") OR \
            (testray.main.component.name ~ "Site Pages Administration") OR \
            (testray.main.component.name ~ "Sitemap") OR \
            (testray.main.component.name ~ "Style Books") OR \
            (testray.main.component.name ~ "Tags") OR \
            (testray.main.component.name ~ "Upgrades Foundation") OR \
            (testray.main.component.name ~ "Upgrades WEM") OR \
            (testray.main.component.name ~ "Web Content Administration") OR \
            (testray.main.component.name ~ "Web Content Display")\
        )

    #
    # Environments
    #

    test.batch.dist.app.servers[environments]=${test.batch.dist.app.servers}

    test.batch.names[environments]=\
        functional-smoke-jboss72-mysql57-jdk8,\
        functional-smoke-tomcat90-db2111-jdk8,\
        functional-smoke-tomcat90-mariadb102-jdk8,\
        functional-smoke-tomcat90-mysql57-jdk8_redhat,\
        functional-smoke-tomcat90-mysql57-jdk8_zulu,\
        functional-smoke-tomcat90-mysql57-jdk11_open,\
        functional-smoke-tomcat90-mysql57-jdk11_oracle,\
        functional-smoke-tomcat90-mysql57-jdk11_zulu,\
        functional-smoke-tomcat90-oracle193-jdk8,\
        functional-smoke-tomcat90-postgresql11-jdk8,\
        functional-smoke-tomcat90-sybase160-jdk8,\
        functional-smoke-weblogic122-mysql57-jdk8,\
        functional-smoke-websphere90-mysql57-jdk8,\
        functional-smoke-wildfly140-mariadb102-jdk8,\
        functional-smoke-wildfly170-mariadb104-jdk8

    test.batch.run.property.query[functional-smoke-*][environments]=\
        environment.acceptance == true

    #
    # Environments Alpine 3
    #

    test.batch.dist.app.servers[environments-alpine3]=tomcat

    test.batch.names[environments-alpine3]=functional-alpine3-tomcat90-mysql57-jdk8

    #
    # Environments CentOS 6
    #

    test.batch.dist.app.servers[environments-centos6]=tomcat

    test.batch.names[environments-centos6]=functional-centos6-tomcat90-mysql57-jdk8

    #
    # Environments CentOS 8
    #

    test.batch.dist.app.servers[environments-centos8]=tomcat

    test.batch.names[environments-centos8]=functional-centos8-tomcat90-mysql57-jdk8

    #
    # Environments Debian 7
    #

    test.batch.dist.app.servers[environments-debian7]=tomcat

    test.batch.names[environments-debian7]=functional-debian7-tomcat90-mysql57-jdk8

    #
    # Environments Debian 8
    #

    test.batch.dist.app.servers[environments-debian8]=tomcat

    test.batch.names[environments-debian8]=functional-debian8-tomcat90-mysql57-jdk8

    #
    # Environments Debian 9
    #

    test.batch.dist.app.servers[environments-debian9]=tomcat

    test.batch.names[environments-debian9]=functional-debian9-tomcat90-mysql57-jdk8

    #
    # Environments Oracle 19.3
    #

    test.batch.dist.app.servers[environments-oracle19]=tomcat

    test.batch.names[environments-oracle19]=\
        functional-smoke-tomcat90-oracle193-jdk8,\
        functional-tomcat90-oracle193-jdk8,\
        functional-upgrade-tomcat90-oracle193-jdk8,\
        modules-integration-oracle193-jdk8

    #
    # Environments Oracle Linux 6
    #

    test.batch.dist.app.servers[environments-orcllinux6]=tomcat

    test.batch.names[environments-orcllinux6]=functional-orcllinux6-tomcat90-mysql57-jdk8

    #
    # Environments Oracle Linux 7
    #

    test.batch.dist.app.servers[environments-orcllinux7]=tomcat

    test.batch.names[environments-orcllinux7]=functional-orcllinux7-tomcat90-mysql57-jdk8

    #
    # Environments PostgreSQL 11.2
    #

    test.batch.dist.app.servers[environments-postgresql11]=tomcat

    test.batch.names[environments-postgresql11]=\
        functional-smoke-tomcat90-postgresql11-jdk8,\
        functional-tomcat90-postgresql11-jdk8,\
        functional-upgrade-tomcat90-postgresql11-jdk8,\
        modules-integration-postgresql11-jdk8

    #
    # Environments Release CE
    #

    test.batch.dist.app.servers[environments-release-ce]=${test.batch.dist.app.servers}

    test.batch.names[environments-release-ce]=\
        functional-alpine3-tomcat90-mysql57-jdk8,\
        functional-centos8-tomcat90-mysql57-jdk8,\
        functional-debian9-tomcat90-mysql57-jdk8,\
        functional-smoke-tomcat90-mysql57-jdk8_zulu,\
        functional-smoke-tomcat90-mysql57-jdk11_zulu,\
        functional-smoke-tomcat90-mysql80-jdk8,\
        functional-smoke-tomcat90-postgresql11-jdk8,\
        functional-smoke-wildfly170-mariadb102-jdk8,\
        functional-ubuntu18-tomcat90-mysql57-jdk8

    test.batch.run.property.query[functional-smoke-*][environments-release-ce]=\
        environment.acceptance == true

    #
    # Environments Release DXP
    #

    test.batch.dist.app.servers[environments-release-dxp]=${test.batch.dist.app.servers}

    test.batch.names[environments-release-dxp]=\
        ${test.batch.names[environments-release-ce]},\
        functional-orcllinux7-tomcat90-mysql57-jdk8,\
        functional-smoke-jboss73-mysql57-jdk8,\
        functional-smoke-tomcat90-mysql57-jdk8_redhat,\
        functional-smoke-tomcat90-mysql57-jdk11_oracle,\
        functional-suse15-tomcat90-mysql57-jdk8

    test.batch.run.property.query[functional-smoke-*][environments-release-dxp]=\
        environment.acceptance == true

    #
    # Environments SUSE 15
    #

    test.batch.dist.app.servers[environments-suse15]=tomcat

    test.batch.names[environments-suse15]=functional-suse15-tomcat90-mysql57-jdk8

    #
    # Environments Ubuntu 14
    #

    test.batch.dist.app.servers[environments-ubuntu14]=tomcat

    test.batch.names[environments-ubuntu14]=functional-ubuntu14-tomcat90-mysql57-jdk8

    #
    # Environments Ubuntu 16
    #

    test.batch.dist.app.servers[environments-ubuntu16]=tomcat

    test.batch.names[environments-ubuntu16]=functional-ubuntu16-tomcat90-mysql57-jdk8

    #
    # Environments Ubuntu 18
    #

    test.batch.dist.app.servers[environments-ubuntu18]=tomcat

    test.batch.names[environments-ubuntu18]=functional-ubuntu18-tomcat90-mysql57-jdk8

    #
    # Export Import
    #

    test.batch.class.names.includes[export-import]=\
        **/export-import/**/*Test.java,\
        **/portal-security-ldap-impl/**/LDAPUserImporterImplTest.java

    test.batch.dist.app.servers[export-import]=tomcat

    test.batch.names[export-import]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][export-import]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Export/Import Framework") OR \
            (testray.main.component.name ~ "Export/Import Framework")\
        )

    #
    # Forms
    #

    test.batch.class.names.includes[forms]=\
        **/dynamic-data-mapping-data-provider-impl/**/*Test.java,\
        **/dynamic-data-mapping-data-provider-instance/**/*Test.java,\
        **/dynamic-data-mapping-expression/**/*Test.java,\
        **/dynamic-data-mapping-form-builder/**/*Test.java,\
        **/dynamic-data-mapping-form-evaluator-impl/**/*Test.java,\
        **/dynamic-data-mapping-form-field-type/**/*Test.java,\
        **/dynamic-data-mapping-form-renderer/**/*Test.java,\
        **/dynamic-data-mapping-form-taglib/**/*Test.java,\
        **/dynamic-data-mapping-form-values-factory/**/*Test.java,\
        **/dynamic-data-mapping-form-values-query/**/*Test.java,\
        **/dynamic-data-mapping-form-web/**/*Test.java,\
        **/dynamic-data-mapping-service/**/*Test.java,\
        **/dynamic-data-mapping-test/**/*Test.java,\
        **/dynamic-data-mapping-validator/**/*Test.java

    test.batch.dist.app.servers[forms]=tomcat

    test.batch.names[forms]=\
        functional-tomcat90-mysql57-jdk8,\
        functional-upgrade-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][forms]=\
        (testray.main.component.name == "Forms")

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk8][forms]=\
        (data.archive.type != "data-archive-calendar") AND \
        (portal.release != "false") AND \
        (testray.component.names != "Dynamic Data Lists") AND \
        (testray.main.component.name == "Upgrades Forms")

    #
    # Frontend Infra
    #

    test.batch.class.names.includes[frontend]=\
        **/frontend-compatibility/**/*Test.java,\
        **/frontend-css/**/*Test.java,\
        **/frontend-js/**/*Test.java,\
        **/frontend-token/**/*Test.java,\
        **/portal-portlet-bridge-soy-api/**/*Test.java,\
        **/portal-portlet-bridge-soy-impl/**/*Test.java,\
        **/portal-template-react-renderer-api/**/*Test.java,\
        **/portal-template-react-renderer-impl/**/*Test.java,\
        **/portal-template-soy-api/**/*Test.java,\
        **/portal-template-soy-context-contributor/**/*Test.java,\
        **/portal-template-soy-impl/**/*Test.java,\
        **/portal-template-soy-renderer-api/**/*Test.java,\
        **/portal-template-soy-renderer-impl/**/*Test.java,\
        **/portal-url-builder/**/*Test.java,\
        /portal-web/docroot/html/**/*Test.java,\
        /util-taglib/**/*Test.java

    test.batch.dist.app.servers[frontend]=tomcat

    test.batch.names[frontend]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][frontend]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Theme") OR \
            (testray.component.names ~ "WYSIWYG") OR \
            (testray.main.component.name ~ "AMD Loader") OR \
            (testray.main.component.name ~ "Theme") OR \
            (testray.main.component.name ~ "User Interface")\
        )

    #
    # Gauntlet
    #

    test.batch.names[gauntlet]=\
        ${test.batch.names},\
        blade-samples-jdk8

    test.batch.run.property.query[functional-tomcat*-mysql*-jdk8][gauntlet]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (deploy.lcs.token.file != true) AND \
        (portal.release == true)

    #
    # Gradle Plugins
    #

    test.batch.dist.app.servers[gradle-plugins]=tomcat
    test.batch.names[gradle-plugins]=gradle-plugins-test-jdk8

    #
    # Headless
    #

    test.batch.class.names.excludes[headless]=\
        **/commerce/**/*Test.java

    test.batch.class.names.includes[headless]=\
        **/headless/**/*Test.java,\
        **/portal-tools-rest-builder/**/*Test.java,\
        **/portal-vulcan/**/*Test.java,\
        **/questions/**/*Test.java

    test.batch.dist.app.servers[headless]=tomcat

    test.batch.names[headless]=\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-unit-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][headless]=\
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name ~ "Headless") OR \
            (testray.main.component.name ~ "Questions")\
        )

    #
    # Headless Acceptance
    #

    test.batch.class.names.excludes[headless]=\
        **/commerce/**/*Test.java

    test.batch.class.names.includes[headless-acceptance]=\
        **/headless/**/*Test.java,\
        **/portal-tools-rest-builder/**/*Test.java,\
        **/portal-vulcan/**/*Test.java,\
        **/questions/**/*Test.java

    test.batch.dist.app.servers[headless-acceptance]=tomcat

    test.batch.names[headless-acceptance]=\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-unit-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][headless-acceptance]=\
        (portal.acceptance == true) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name ~ "Headless") OR \
            (testray.main.component.name ~ "Questions")\
        )

    #
    # JDK 11
    #

    test.batch.dist.app.servers[jdk11]=\
        jboss,\
        tomcat,\
        wildfly

    test.batch.names[jdk11]=\
        functional-smoke-jboss72-mysql57-jdk11_open,\
        functional-smoke-tomcat90-db2111-jdk11_open,\
        functional-smoke-tomcat90-mariadb102-jdk11_open,\
        functional-smoke-tomcat90-mysql80-jdk11_open,\
        functional-smoke-tomcat90-mysql57-jdk11_open,\
        functional-smoke-tomcat90-oracle122-jdk11_open,\
        functional-smoke-tomcat90-postgresql10-jdk11_open,\
        functional-smoke-tomcat90-sqlserver2017-jdk11_open,\
        functional-smoke-tomcat90-sybase160-jdk11_open,\
        functional-smoke-wildfly140-mariadb102-jdk11_open,\
        functional-smoke-wildfly170-mariadb104-jdk11_open,\
        functional-tomcat90-mysql57-jdk11_open,\
        functional-upgrade-jboss72-mysql57-jdk11_open,\
        functional-upgrade-tomcat90-db2111-jdk11_open,\
        functional-upgrade-tomcat90-mariadb102-jdk11_open,\
        functional-upgrade-tomcat90-mariadb104-jdk11_open,\
        functional-upgrade-tomcat90-mysql57-jdk11_open,\
        functional-upgrade-tomcat90-oracle122-jdk11_open,\
        functional-upgrade-tomcat90-postgresql10-jdk11_open,\
        functional-upgrade-tomcat90-sqlserver2017-jdk11_open,\
        #functional-upgrade-tomcat90-sybase160-jdk11_open,\
        functional-upgrade-wildfly140-mariadb102-jdk11_open,\
        modules-integration-db2111-jdk11_open,\
        modules-integration-hypersonic20-jdk11_open,\
        modules-integration-mariadb102-jdk11_open,\
        modules-integration-mysql57-jdk11_open,\
        modules-integration-oracle122-jdk11_open,\
        modules-integration-postgresql10-jdk11_open,\
        #modules-integration-sybase160-jdk11_open

    #
    # JSF
    #

    test.batch.dist.app.servers[jsf]=tomcat
    test.batch.names[jsf]=jsf-jdk8

    #
    # Knowledge Base
    #

    test.batch.class.names.includes[knowledgebase]=\
        **/knowledge-base-markdown-converter-impl/**/*Test.java,\
        **/knowledge-base-service/**/*Test.java,\
        **/knowledge-base-test/**/*Test.java

    test.batch.dist.app.servers[knowledgebase]=tomcat

    test.batch.names[knowledgebase]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][knowledgebase]=\
        (portal.upstream == "true") AND \
        (\
            (testray.main.component.name ~ "Knowledge Base")\
        )

    #
    # LDAP
    #

    test.batch.class.names.includes[ldap]=\
        **/ldap**/*Test.java

    test.batch.dist.app.servers[ldap]=tomcat

    test.batch.names[ldap]=${test.batch.names[security]}

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][ldap]=\
        (testray.main.component.name ~ "LDAP")

    #
    # License
    #

    test.batch.dist.app.servers[license]=tomcat

    test.batch.names[license]=portal-license-jdk8

    #
    # Lima
    #

    test.batch.class.names.includes[lima]=\
        **/asset-auto-tagger-google-cloud-natural-language-test/**/*Test.java,\
        **/asset-auto-tagger-opennlp-test/**/*Test.java,\
        **/asset-auto-tagger-service/**/*Test.java,\
        **/asset-auto-tagger-test/**/*Test.java,\
        **/blogs-recent-bloggers-test/**/*Test.java,\
        **/blogs-test/**/*Test.java,\
        **/blogs-test-util/**/*Test.java,\
        **/blogs-uad-test/**/*Test.java,\
        **/blogs-web/**/*Test.java,\
        **/blogs-web-test/**/*Test.java,\
        **/bookmarks-test/**/*Test.java,\
        **/bookmarks-uad-test/**/*Test.java,\
        **/bookmarks-web/**/*Test.java,\
        **/bulk-rest-test/**/*Test.java,\
        **/bulk-selection-test/**/*Test.java,\
        **/depot-service/**/*Test.java,\
        **/depot-test/**/*Test.java,\
        **/depot-web/**/*Test.java,\
        **/document-library-content-test/**/*Test.java,\
        **/document-library-document-conversion/**/*Test.java,\
        **/document-library-repository-cmis-api/**/*Test.java,\
        **/document-library-repository-cmis-impl/**/*Test.java,\
        **/document-library-repository-search/**/*Test.java,\
        **/document-library-service/**/*Test.java,\
        **/document-library-test/**/*Test.java,\
        **/document-library-test-util/**/*Test.java,\
        **/document-library-uad-test/**/*Test.java,\
        **/document-library-web-test/**/*Test.java,\
        **/item-selector-taglib/**/*Test.java,\
        **/item-selector-test/**/*Test.java,\
        **/item-selector-web/**/*Test.java,\
        **/knowledge-base-markdown-converter-impl/**/*Test.java,\
        **/knowledge-base-service/**/*Test.java,\
        **/knowledge-base-test/**/*Test.java,\
        **/knowledge-base-web-test/**/*Test.java,\
        **/layout-content-page-editor-web/**/*test.js,\
        **/layout-seo-test/**/*Test.java,\
        **/layout-seo-web-test/**/*Test.java,\
        **/mentions-service/**/*Test.java,\
        **/mentions-web-test/**/*Test.java,\
        **/message-boards-comment/**/*Test.java,\
        **/message-boards-parser-bbcode/**/*Test.java,\
        **/message-boards-service/**/*Test.java,\
        **/message-boards-test/**/*Test.java,\
        **/message-boards-test-util/**/*Test.java,\
        **/message-boards-uad-test/**/*Test.java,\
        **/message-boards-web/**/*Test.java,\
        **/notifications-uad-test/**/*Test.java,\
        **/notifications-web-test/**/*Test.java,\
        **/ratings-test/**/*Test.java,\
        **/redirect-test/**/*Test.java,\
        **/sharing-blogs-test/**/*Test.java,\
        **/sharing-document-library-test/**/*Test.java,\
        **/sharing-search-test/**/*Test.java,\
        **/sharing-test/**/*Test.java,\
        **/translation-test/**/*Test.java,\
        **/wiki-editor-configuration/**/*Test.java,\
        **/wiki-engine-creole/**/*Test.java,\
        **/wiki-engine-html/**/*Test.java,\
        **/wiki-test/**/*Test.java,\
        **/wiki-uad-test/**/*Test.java,\
        **/wiki-web-test/**/*Test.java

    test.batch.dist.app.servers[lima]=tomcat

    test.batch.names[lima]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][lima]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Blogs") OR \
            (testray.component.names ~ "Bulk Editing") OR \
            (testray.component.names ~ "Content Page Review") OR \
            (testray.component.names ~ "Documents Management") OR \
            (testray.component.names ~ "Notifications") OR \
            (testray.main.component.name ~ "Adaptive Media") OR \
            (testray.main.component.name ~ "Asset Sharing") OR \
            (testray.main.component.name ~ "Auto Tagging") OR \
            (testray.main.component.name ~ "Blogs") OR \
            (testray.main.component.name ~ "Content Page Review") OR \
            (testray.main.component.name ~ "Depot") OR \
            (testray.main.component.name ~ "Documents Management") OR \
            (testray.main.component.name ~ "Friendly URL Service") OR \
            (testray.main.component.name ~ "Item Selector") OR \
            (testray.main.component.name ~ "Knowledge Base") OR \
            (testray.main.component.name ~ "Mentions") OR \
            (testray.main.component.name ~ "Message Boards") OR \
            (testray.main.component.name ~ "Notifications") OR \
            (testray.main.component.name ~ "Online Editing") OR \
            (testray.main.component.name ~ "Questions") OR \
            (testray.main.component.name ~ "Redirect") OR \
            (testray.main.component.name ~ "SEO") OR \
            (testray.main.component.name ~ "Sharepoint") OR \
            (testray.main.component.name ~ "Translations Management") OR \
            (testray.main.component.name ~ "Wiki")\
        )

    #
    # LPKG
    #

    test.batch.dist.app.servers[lpkg]=tomcat

    test.batch.names[lpkg]=\
        lpkg-base-jdk8,\
        lpkg-container-jdk8,\
        lpkg-controller-jdk8,\
        lpkg-hot-deployment-jdk8,\
        lpkg-independence-jdk8,\
        lpkg-override-jdk8,\
        lpkg-persistence-jdk8,\
        lpkg-release-jdk8,\
        lpkg-startup-jdk8

    #
    # Message Boards
    #

    test.batch.class.names.includes[messageboards]=\
        **/message-boards-comment/**/*Test.java,\
        **/message-boards-parser-bbcode/**/*Test.java,\
        **/message-boards-service/**/*Test.java,\
        **/message-boards-test/**/*Test.java,\
        **/message-boards-test-util/**/*Test.java,\
        **/message-boards-uad-test/**/*Test.java,\
        **/message-boards-web/**/*Test.java

    test.batch.dist.app.servers[messageboards]=tomcat

    test.batch.names[messageboards]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][messageboards]=\
        (portal.upstream == "true") AND \
        (\
            (testray.main.component.name ~ "Message Boards")\
        )

    #
    # OAuth 2
    #

    test.batch.class.names.includes[oauth2]=\
        **/oauth2-provider/**/*Test.java

    test.batch.dist.app.servers[oauth2]=tomcat

    test.batch.names[oauth2]=${test.batch.names[security]}

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][oauth2]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "OAuth 2") OR \
            (testray.main.component.name ~ "OAuth 2")\
        )

    #
    # OneDrive
    #

    test.batch.class.names.includes[onedrive]=\
        **/document-library-opener-onedrive-web/**/*Test.java

    test.batch.dist.app.servers[onedrive]=tomcat

    test.batch.names[onedrive]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][onedrive]=\
        (testray.component.name ~ "OneDrive")

    #
    # Online Editing
    #

    test.batch.class.names.includes[onlineediting]=\
        **/document-library-opener-google-drive-api/**/*Test.java,\
        **/document-library-opener-google-drive-test/**/*Test.java,\
        **/document-library-opener-test/**/*Test.java,\
        **/document-library-opener-uad-test/**/*Test.java

    test.batch.dist.app.servers[onlineediting]=tomcat

    test.batch.names[onlineediting]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][onlineediting]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Online Editing") OR \
            (testray.main.component.name ~ "Online Editing")\
        )

    #
    # Portal Fixpack Release
    #

    test.batch.names[portal-fixpack-release]=\
        functional-bundle-jboss-mysql57-jdk8,\
        functional-bundle-tcserver-mysql57-jdk8,\
        functional-bundle-tomcat-db2111-jdk8,\
        functional-bundle-tomcat-hypersonic20-jdk8,\
        functional-bundle-tomcat-mariadb102-jdk8,\
        functional-bundle-tomcat-mysql57-jdk8,\
        functional-bundle-tomcat-mysql57-jdk11_open,\
        functional-bundle-tomcat-oracle122-jdk8,\
        functional-bundle-tomcat-postgresql10-jdk8,\
        functional-bundle-tomcat-sybase160-jdk8,\
        functional-bundle-weblogic-mysql57-jdk8,\
        functional-bundle-wildfly-mysql57-jdk8,\
        functional-smoke-bundle-jboss-mysql57-jdk8,\
        functional-smoke-bundle-weblogic-mysql57-jdk8,\
        functional-smoke-bundle-websphere-mysql57-jdk8,\
        functional-smoke-bundle-wildfly-mysql57-jdk8,\
        jsf-jdk8,\
        modules-integration-bundle-db2111-jdk8,\
        modules-integration-bundle-hypersonic20-jdk8,\
        modules-integration-bundle-mariadb102-jdk8,\
        modules-integration-bundle-mysql57-jdk8,\
        modules-integration-bundle-oracle122-jdk8,\
        modules-integration-bundle-postgresql10-jdk8,\
        modules-integration-bundle-sybase160-jdk8,\
        patching-tool-custom-scripts-jdk8

    test.batch.names.smoke[portal-fixpack-release]=\
        functional-smoke-bundle-tomcat-mysql57-jdk8

    test.batch.run.property.query[functional-bundle-jboss-mysql57-jdk8][portal-fixpack-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ jboss) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.fixpack.release == true OR portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tcserver-mysql57-jdk8][portal-fixpack-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tcserver) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.fixpack.release == true OR portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-db2111-jdk8][portal-fixpack-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ db2) AND \
            (portal.fixpack.release == true OR portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-hypersonic20-jdk8][portal-fixpack-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types == null OR database.types ~ hypersonic) AND \
            (portal.fixpack.release == true OR portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-mariadb102-jdk8][portal-fixpack-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ mariadb) AND \
            (portal.fixpack.release == true OR portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-mysql57-jdk8][portal-fixpack-release]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.fixpack.release == true OR portal.release == true)

    test.batch.run.property.query[functional-bundle-tomcat-mysql57-jdk11_open][portal-fixpack-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.fixpack.release == true OR portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-oracle122-jdk8][portal-fixpack-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ oracle) AND \
            (portal.fixpack.release == true OR portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-postgresql10-jdk8][portal-fixpack-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ postgresql) AND \
            (portal.fixpack.release == true OR portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-sybase160-jdk8][portal-fixpack-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ sybase) AND \
            (portal.fixpack.release == true OR portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-weblogic-mysql57-jdk8][portal-fixpack-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ weblogic) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.fixpack.release == true OR portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-wildfly-mysql57-jdk8][portal-fixpack-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ wildfly) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.fixpack.release == true OR portal.release == true)\
        )

    test.batch.run.property.query[functional-smoke-bundle-jboss-mysql57-jdk8][portal-fixpack-release]=\
        (app.server.types ~ jboss) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-bundle-tomcat-mysql57-jdk8][portal-fixpack-release]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-bundle-weblogic-mysql57-jdk8][portal-fixpack-release]=\
        (app.server.types ~ weblogic) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-bundle-websphere-mysql57-jdk8][portal-fixpack-release]=\
        (app.server.types ~ websphere) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-bundle-wildfly-mysql57-jdk8][portal-fixpack-release]=\
        (app.server.types ~ wildfly) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.release.bundle[portal-fixpack-release]=true

    #
    # Portal Hotfix Release
    #

    test.batch.names[portal-hotfix-release]=\
        functional-bundle-jboss-mysql57-jdk8,\
        functional-bundle-tcserver-mysql57-jdk8,\
        functional-bundle-tomcat-db2111-jdk8,\
        functional-bundle-tomcat-hypersonic20-jdk8,\
        functional-bundle-tomcat-mariadb102-jdk8,\
        functional-bundle-tomcat-mysql57-jdk8,\
        functional-bundle-tomcat-mysql57-jdk11_open,\
        functional-bundle-tomcat-oracle122-jdk8,\
        functional-bundle-tomcat-postgresql10-jdk8,\
        functional-bundle-tomcat-sybase160-jdk8,\
        functional-bundle-weblogic-mysql57-jdk8,\
        functional-bundle-wildfly-mysql57-jdk8,\
        functional-smoke-bundle-jboss-mysql57-jdk8,\
        functional-smoke-bundle-weblogic-mysql57-jdk8,\
        functional-smoke-bundle-websphere-mysql57-jdk8,\
        functional-smoke-bundle-wildfly-mysql57-jdk8,\
        jsf-jdk8,\
        patching-tool-custom-scripts-jdk8

    test.batch.names.smoke[portal-hotfix-release]=\
        functional-smoke-bundle-tomcat-mysql57-jdk8

    test.batch.run.property.query[functional-bundle-jboss-mysql57-jdk8][portal-hotfix-release]=\
        (environment.acceptance == true AND portal.acceptance == true) OR \
        (\
            (app.server.types ~ jboss) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.hotfix.release == true OR portal.acceptance == true) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tcserver-mysql57-jdk8][portal-hotfix-release]=\
        (environment.acceptance == true AND portal.acceptance == true) OR \
        (\
            (app.server.types ~ tcserver) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.hotfix.release == true OR portal.acceptance == true) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-db2111-jdk8][portal-hotfix-release]=\
        (environment.acceptance == true AND portal.acceptance == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ db2) AND \
            (portal.hotfix.release == true OR portal.acceptance == true) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-hypersonic20-jdk8][portal-hotfix-release]=\
        (environment.acceptance == true AND portal.acceptance == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types == null OR database.types ~ hypersonic) AND \
            (portal.hotfix.release == true OR portal.acceptance == true) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-mariadb102-jdk8][portal-hotfix-release]=\
        (environment.acceptance == true AND portal.acceptance == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ mariadb) AND \
            (portal.hotfix.release == true OR portal.acceptance == true) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-mysql57-jdk8][portal-hotfix-release]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.hotfix.release == true OR portal.acceptance == true) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-bundle-tomcat-mysql57-jdk11_open][portal-hotfix-release]=\
        (environment.acceptance == true AND portal.acceptance == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.hotfix.release == true OR portal.acceptance == true) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-oracle122-jdk8][portal-hotfix-release]=\
        (environment.acceptance == true AND portal.acceptance == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ oracle) AND \
            (portal.hotfix.release == true OR portal.acceptance == true) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-postgresql10-jdk8][portal-hotfix-release]=\
        (environment.acceptance == true AND portal.acceptance == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ postgresql) AND \
            (portal.hotfix.release == true OR portal.acceptance == true) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-sybase160-jdk8][portal-hotfix-release]=\
        (environment.acceptance == true AND portal.acceptance == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ sybase) AND \
            (portal.hotfix.release == true OR portal.acceptance == true) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-weblogic-mysql57-jdk8][portal-hotfix-release]=\
        (environment.acceptance == true AND portal.acceptance == true) OR \
        (\
            (app.server.types ~ weblogic) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.hotfix.release == true OR portal.acceptance == true) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-wildfly-mysql57-jdk8][portal-hotfix-release]=\
        (environment.acceptance == true AND portal.acceptance == true) OR \
        (\
            (app.server.types ~ wildfly) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.hotfix.release == true OR portal.acceptance == true) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-smoke-bundle-jboss-mysql57-jdk8][portal-hotfix-release]=\
        (app.server.types ~ jboss) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-bundle-tomcat-mysql57-jdk8][portal-hotfix-release]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-bundle-weblogic-mysql57-jdk8][portal-hotfix-release]=\
        (app.server.types ~ weblogic) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-bundle-websphere-mysql57-jdk8][portal-hotfix-release]=\
        (app.server.types ~ websphere) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-bundle-wildfly-mysql57-jdk8][portal-hotfix-release]=\
        (app.server.types ~ wildfly) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.release.bundle[portal-hotfix-release]=true

    #
    # Portal Release
    #

    test.batch.names[portal-release][dxp]=\
        ${test.batch.names[portal-release][portal]},\
        functional-bundle-jboss-mysql57-jdk8,\
        functional-bundle-tomcat-db2111-jdk8,\
        functional-bundle-tomcat-oracle193-jdk8,\
        functional-bundle-tomcat-sqlserver2017-jdk8,\
        functional-bundle-tomcat-sqlserver2019-jdk8,\
        functional-bundle-tomcat-sybase160-jdk8,\
        functional-bundle-weblogic-mysql57-jdk8,\
        functional-bundle-websphere-mysql57-jdk8,\
        functional-smoke-bundle-jboss-mysql57-jdk8,\
        functional-smoke-bundle-weblogic-mysql57-jdk8,\
        functional-smoke-bundle-websphere-mysql57-jdk8,\
        modules-integration-bundle-db2111-jdk8,\
        modules-integration-bundle-oracle193-jdk8

    test.batch.names[portal-release][portal]=\
        functional-bundle-tomcat-hypersonic20-jdk8,\
        functional-bundle-tomcat-mariadb102-jdk8,\
        functional-bundle-tomcat-mysql57-jdk11_open,\
        functional-bundle-tomcat-mysql57-jdk8,\
        functional-bundle-tomcat-postgresql121-jdk8,\
        functional-bundle-wildfly-mysql57-jdk8,\
        functional-smoke-bundle-wildfly-mysql57-jdk8,\
        jsf-jdk8,\
        modules-integration-bundle-hypersonic20-jdk8,\
        modules-integration-bundle-mariadb102-jdk8,\
        modules-integration-bundle-mysql57-jdk11_open,\
        modules-integration-bundle-mysql57-jdk8,\
        modules-integration-bundle-postgresql121-jdk8,\
        portal-startup-space-in-path-jdk8

    test.batch.names.smoke[portal-release][dxp]=\
        ${test.batch.names.smoke[portal-release][portal]}

    test.batch.names.smoke[portal-release][portal]=\
        functional-smoke-bundle-tomcat-mysql57-jdk8

    test.batch.run.property.query[functional-bundle-jboss-mysql57-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ jboss) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.release == true) \
        )

    test.batch.run.property.query[functional-bundle-tcserver-mysql57-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tcserver) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-db2111-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ db2) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-hypersonic20-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types == null OR database.types ~ hypersonic) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-mariadb102-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ mariadb) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-mysql57-jdk8][portal-release]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.release == true)

    test.batch.run.property.query[functional-bundle-tomcat-mysql57-jdk11_open][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-oracle193-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ oracle) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-postgresql121-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ postgresql) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-sqlserver2017-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ sqlserver) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-sqlserver2019-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ sqlserver) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-tomcat-sybase160-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ tomcat) AND \
            (database.types ~ sybase) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-weblogic-mysql57-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ weblogic) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-websphere-mysql57-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ websphere) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-bundle-wildfly-mysql57-jdk8][portal-release]=\
        (environment.acceptance == true AND portal.release == true) OR \
        (\
            (app.server.types ~ wildfly) AND \
            (database.types == null OR database.types ~ mysql) AND \
            (portal.release == true)\
        )

    test.batch.run.property.query[functional-smoke-bundle-jboss-mysql57-jdk8][portal-release]=\
        (app.server.types ~ jboss) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-bundle-tomcat-mysql57-jdk8][portal-release]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-bundle-weblogic-mysql57-jdk8][portal-release]=\
        (app.server.types ~ weblogic) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-bundle-websphere-mysql57-jdk8][portal-release]=\
        (app.server.types ~ websphere) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-smoke-bundle-wildfly-mysql57-jdk8][portal-release]=\
        (app.server.types ~ wildfly) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.release.bundle[portal-release]=true

    test.release.post.startup.dependency.modules=\
        apps/commerce

    #
    # Poshi
    #

    test.batch.dist.app.servers[poshi]=tomcat

    test.batch.names[poshi]=\
        functional-tomcat90-mysql57-jdk8,\
        poshi-validation-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][poshi]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.acceptance == true)

    test.poshi.runner.local.release[poshi]=true

    #
    # Poshi Gauntlet
    #

    test.batch.dist.app.servers[poshi-gauntlet]=tomcat

    test.batch.names[poshi-gauntlet]=\
        functional-tomcat90-mysql57-jdk8,\
        poshi-validation-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][poshi-gauntlet]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.acceptance == true)

    test.poshi.runner.local.release[poshi-gauntlet]=true

    #
    # Project Templates
    #

    test.batch.dist.app.servers[project-templates]=tomcat

    test.batch.names[project-templates]=\
        modules-integration-project-templates-jdk8

    #
    # Publications
    #

    test.batch.class.names.includes[publications]=\
        **/change/tracking/**/*Test.java

    test.batch.dist.app.servers[publications]=tomcat

    test.batch.names[publications]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8

     test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][publications]=\
         (testray.main.component.name ~ "Publications")

    #
    # Redirect
    #

    test.batch.class.names.includes[redirect]=\
        **/redirect-test/**/*Test.java\

    test.batch.dist.app.servers[redirect]=tomcat

    test.batch.names[redirect]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][redirect]=\
        (portal.upstream == "true") AND \
        (\
            (testray.main.component.name ~ "Redirect")\
        )

    #
    # Relevant
    #

    test.batch.class.names.includes.required[modules-integration-*-jdk8][relevant]=\
        ${test.batch.class.names.includes[modules-integration-*-jdk8_stable]},\
        **/src/testIntegration/**/DeclarativeServiceDependencyManagerTest.java,\
        **/src/testIntegration/**/SpringExtenderDependencyManagerTest.java

    test.batch.class.names.includes.required[modules-unit-jdk8][relevant]=${test.batch.class.names.includes[modules-unit-jdk8_stable]}

    test.batch.class.names.includes.required[modules-unit-project-templates-jdk8][relevant]=\
        **/project-templates/**/src/test/**/*Test.java

    test.batch.class.names.includes.required[unit-jdk8][relevant]=${test.batch.class.names.includes[unit-jdk8_stable]}

    test.batch.dist.app.servers[relevant]=tomcat

    test.batch.names[relevant]=\
        ${test.batch.names[stable]},\
        central-requirements-jdk8,\
        functional-smoke-tomcat90-mysql57-jdk11_open,\
        functional-tomcat90-mysql57-jdk8,\
        functional-upgrade-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        lpkg-base-jdk8,\
        lpkg-controller-jdk8,\
        modules-compile-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        modules-unit-project-templates-jdk8,\
        pmd-jdk8,\
        rest-builder-jdk8,\
        semantic-versioning-jdk8,\
        service-builder-jdk8,\
        unit-jdk8

    test.batch.run.property.global.query[functional-tomcat*-mysql*-jdk8][relevant]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upstream != quarantine)

    test.batch.run.property.global.query[functional-upgrade-tomcat*-mysql*-jdk8][relevant]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upstream != quarantine)

    test.batch.run.property.query[functional-tomcat*-mysql*-jdk8][relevant]=\
        false

    test.relevant.changes[relevant]=true

    #
    # Roles
    #

    test.batch.class.names.includes[roles]=\
        **/roles-admin-test/**/*Test.java,\
        **/roles-test/**/*Test.java,\
        **/roles-uad-test/**/*Test.java

    test.batch.dist.app.servers[roles]=tomcat

    test.batch.names[roles]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][roles]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Roles") OR \
            (testray.main.component.name ~ "Roles")\
        )

    #
    # SAML
    #

    test.batch.class.names.includes[saml]=\
        **/saml/**/*Test.java

    test.batch.dist.app.servers[saml]=tomcat

    test.batch.names[saml]=${test.batch.names[security]}

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][saml]=\
        (testray.main.component.name ~ "SAML")

    #
    # Search with Elasticsearch 7
    #

    test.batch.class.names.excludes[search]=\
        ${test.batch.class.names.excludes},\
        **/portal-search-solr7/**/*Test.java

    test.batch.class.names.includes[modules-integration-*-jdk8][search]=\
        **/apps/**/src/testIntegration/**/search/test/*Test.java,\
        **/asset-publisher-test/**/AssetPublisherExportImportTest.java,\
        **/asset-test/**/AssetHelperTest.java,\
        **/asset-test/**/AssetVocabularyServiceTest.java,\
        **/blogs-test/**/BlogsEntryAssetSearchTest.java,\
        **/blogs-test/**/BlogsEntryStatusTransitionTest.java,\
        **/blogs-test/**/BlogsEntryTrashHandlerTest.java,\
        **/bookmarks-test/**/BookmarksEntryTrashHandlerTest.java,\
        **/bookmarks-test/**/BookmarksFolderServiceTest.java,\
        **/bookmarks-test/**/BookmarksFolderTrashHandlerTest.java,\
        **/data-engine-rest-test/**/DataDefinitionResourceTest.java,\
        **/document-library-test/**/DLFileEntryTrashHandlerTest.java,\
        **/document-library-test/**/DLFolderTrashHandlerTest.java,\
        **/headless-admin-taxonomy-test/**/TaxonomyVocabularyResourceTest.java,\
        **/journal-test/**/JournalArticleAssetSearchTest.java,\
        **/journal-test/**/JournalArticleExpirationTest.java,\
        **/journal-test/**/JournalArticleIndexVersionsTest.java,\
        **/journal-test/**/JournalArticleScheduledTest.java,\
        **/journal-test/**/JournalArticleTrashHandlerTest.java,\
        **/journal-test/**/JournalFolderTrashHandlerTest.java,\
        **/message-boards-test/**/MBThreadTrashHandlerTest.java,\
        #**/module-configuration-localization-test/**/ModuleConfigurationLocalizationTest.java,\
        **/portal-search*/**/src/testIntegration/**/*Test.java,\
        **/portal-workflow-kaleo-test/**/WorkflowTaskManagerImplTest.java,\
        **/portlet-title-localization-test/**/PortletTitleTest.java,\
        **/segments/**/DefaultSegmentsEntryProviderTest.java,\
        **/segments/**/odata/retriever/**/*Test.java,\
        **/sharing-search-test/**/*Test.java,\
        **/user-test/**/UserLocalServiceTest.java,\
        **/users-admin-test/**/indexer/test/*Test.java,\
        **/wiki-test/**/WikiPageTrashHandlerTest.java

    test.batch.class.names.includes[modules-unit-jdk8][search]=\
        **/portal-workflow-metrics-service/**/WorkflowMetricsSLAProcessorTest.java,\
        **/src/test/**/search/**Test.java

    test.batch.class.names.includes[unit-jdk8][search]=\
        **/test/unit/**/search/**Test.java

    test.batch.dist.app.servers[search]=tomcat

    test.batch.names[search]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        functional-upgrade-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][search]=\
        (portal.suite.search.engine ~ elasticsearch7) AND \
        (testray.main.component.name != "Upgrades Search")

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk8][search]=\
        (testray.main.component.name ~ "Upgrades Search")

    #
    # Search with Remote Elasticsearch 7 and JDK 11
    #

    test.batch.class.names.excludes[search-jdk11]=${test.batch.class.names.excludes[search]}
    test.batch.class.names.includes[modules-integration-mysql57-jdk11_open][search-jdk11]=${test.batch.class.names.includes[modules-integration-*-jdk8][search]}
    test.batch.dist.app.servers[search-jdk11]=tomcat

    test.batch.names[search-jdk11]=\
        functional-tomcat90-mysql57-jdk11_open,\
        functional-upgrade-tomcat90-mysql57-jdk11_open,\
        modules-integration-mysql57-jdk11_open

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk11_open][search-jdk11]=\
        ${test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][search]}

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk11_open][search-jdk11]=\
        ${test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk8][search]}

    #
    # Search with Solr
    #

    search.engine[search-solr]=solr

    test.batch.class.names.excludes[search-solr]=\
        ${test.batch.class.names.excludes},\
        **/change-tracking-test/**/SearchCTTest.java,\
        **/commerce/**/*Test.java,\
        **/headless-admin-taxonomy-test/**/TaxonomyVocabularyResourceTest.java,\
        **/journal-test/**/JournalArticleIndexVersionsTest.java,\
        **/module-configuration-localization-test/**/ModuleConfigurationLocalizationTest.java,\
        **/portal-search-elasticsearch7/**/*Test.java,\
        **/segments/**/OrganizationODataRetrieverCustomFieldsTest.java,\
        **/segments/**/OrganizationODataRetrieverTest.java,\
        **/segments/**/UserODataRetrieverCustomFieldsTest.java,\
        **/segments/**/UserODataRetrieverTest.java

    test.batch.class.names.includes[modules-integration-*-jdk8][search-solr]=${test.batch.class.names.includes[modules-integration-*-jdk8][search]}
    test.batch.class.names.includes[modules-unit-jdk8][search-solr]=${test.batch.class.names.includes[modules-unit-jdk8][search]}
    test.batch.class.names.includes[unit-jdk8][search-solr]=${test.batch.class.names.includes[unit-jdk8][search]}
    test.batch.dist.app.servers[search-solr]=tomcat
    test.batch.names[search-solr]=${test.batch.names[search]}

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][search-solr]=\
        (portal.suite.search.engine ~ solr) AND \
        (testray.main.component.name != "Upgrades Search")

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk8][search-solr]=\
        (testray.main.component.name ~ "Upgrades Search")

    #
    # Security
    #

    test.batch.class.names.includes[security]=\
        **/oauth2-provider/**/*Test.java,\
        **/portal-security/**/*Test.java,\
        **/portal-security-audit/**/*Test.java,\
        **/portal-security-sso/**/*Test.java,\
        **/saml/**/*Test.java,\
        **/test/unit/**/security/*Test.java

    test.batch.dist.app.servers[security]=tomcat

    test.batch.names[security]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][security]=\
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name ~ "AntiSamy") OR \
            (testray.main.component.name ~ "CAPTCHA") OR \
            (testray.main.component.name ~ "LDAP") OR \
            (testray.main.component.name ~ "Login") OR \
            (testray.main.component.name ~ "Multi Factor Authentication") OR \
            (testray.main.component.name ~ "OAuth 2") OR \
            (testray.main.component.name ~ "Permissions") OR \
            (testray.main.component.name ~ "SAML") OR \
            (testray.main.component.name ~ "Security") OR \
            (testray.main.component.name ~ "Upgrades Security") OR \
            (testray.main.component.name ~ "XSS")\
        )

    #
    # SEO
    #

    test.batch.class.names.includes[seo]=\
        **/layout-seo-test/**/*Test.java,\
        **/layout-seo-web-test/**/*Test.java

    test.batch.dist.app.servers[seo]=tomcat

    test.batch.names[seo]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][seo]=\
        (testray.main.component.name ~ "SEO")

    #
    # Sharepoint SOAP
    #

    test.batch.class.names.includes[sharepoint]=\
        **/sharepoint-soap-repository/**/*Test.java

    test.batch.dist.app.servers[sharepoint]=tomcat

    test.batch.names[sharepoint]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][sharepoint]=\
        (cmis.repository.type == "sharepoint2010")

    #
    # Sharing
    #

    test.batch.class.names.includes[sharing]=\
        **/sharing-api/**/*Test.java,\
        **/sharing-blogs-test/**/*Test.java,\
        **/sharing-document-library-test/**/*Test.java,\
        **/sharing-search-test/**/*Test.java,\
        **/sharing-test/**/*Test.java

    test.batch.dist.app.servers[sharing]=tomcat

    test.batch.names[sharing]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][sharing]=\
        (portal.upstream == "true") AND \
        (\
            (testray.component.names ~ "Asset Sharing") OR \
            (testray.main.component.name ~ "Asset Sharing")\
        )

    #
    # Site Template
    #

    test.batch.class.names.includes[site-template]=\
        **/layout-set-prototype-test/**/*Test.java

    test.batch.dist.app.servers[site-template]=tomcat

    test.batch.names[site-template]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][site-template]=\
        (testray.component.names ~ "Site Templates") OR \
        (testray.main.component.name ~ "Site Templates")\

    #
    # Solr Acceptance
    #

    search.engine[solr]=solr

    test.batch.class.names.excludes[solr]=\
        ${test.batch.class.names.excludes},\
        **/module-configuration-localization-test/**/ModuleConfigurationLocalizationTest.java,\
        **/portal-search-elasticsearch7/**/*Test.java,\
        **/segments/**/OrganizationODataRetrieverCustomFieldsTest.java,\
        **/segments/**/OrganizationODataRetrieverTest.java,\
        **/segments/**/UserODataRetrieverCustomFieldsTest.java,\
        **/segments/**/UserODataRetrieverTest.java

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][solr]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.acceptance == true) AND \
        (portal.suite.search.engine != elasticsearch7)

    #
    # Source Formatter
    #

    test.batch.dist.app.servers[sf]=
    test.batch.names[sf]=source-format-current-branch-jdk8

    #
    # Stable
    #

    test.batch.dist.app.servers[stable]=tomcat

    test.batch.names[stable]=\
        functional-smoke-tomcat90-mysql57-jdk8_stable,\
        functional-upgrade-tomcat90-mysql57-jdk8_stable,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8_stable,\
        modules-unit-jdk8_stable,\
        #modules-unit-project-templates-jdk8,\
        pmd-jdk8,\
        rest-builder-jdk8,\
        service-builder-jdk8,\
        unit-jdk8_stable

    #
    # Staging
    #

    test.batch.class.names.includes[staging]=\
        **/export-import/**/*Test.java,\
        **/layout-set-prototype-test/**/*Test.java,\
        **/portal-security-ldap-impl/**/LDAPUserImporterImplTest.java,\
        **/staging/**/*Test.java

    test.batch.dist.app.servers[staging]=tomcat

    test.batch.names[staging]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][staging]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Upgrades Staging") OR \
            (testray.main.component.name ~ "Export/Import Framework") OR \
            (testray.main.component.name ~ "Site Templates") OR \
            (testray.main.component.name ~ "Staging") OR \
            (testray.main.component.name ~ "Upgrades Staging")\
        )

    #
    # Tango
    #

    test.batch.class.names.includes[tango]=\
        **/apps/analytics/**/*Test.java,\
        **/apps/content-dashboard/**/*Test.java,\
        **/headless/headless-admin-user/**/*Test.java,\
        **/segments/**/*Test.java

    test.batch.dist.app.servers[tango]=tomcat

    test.batch.names[tango]=\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-unit-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][tango]=\
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name ~ "A/B Test") OR \
            (testray.main.component.name ~ "Content Dashboard") OR \
            (testray.main.component.name ~ "Content Performance") OR \
            (testray.main.component.name ~ "Personalization") OR \
            (testray.main.component.name ~ "Segmentation")\
        )

    #
    # Tango Acceptance
    #

    test.batch.class.names.includes[tango-acceptance]=\
        **/apps/analytics/**/*Test.java,\
        **/apps/content-dashboard/**/*Test.java,\
        **/headless/headless-admin-user/**/*Test.java,\
        **/segments/**/*Test.java

    test.batch.dist.app.servers[tango-acceptance]=tomcat

    test.batch.names[tango-acceptance]=\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-unit-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][tango-acceptance]=\
        (portal.acceptance == true) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name ~ "A/B Test") OR \
            (testray.main.component.name ~ "Content Dashboard") OR \
            (testray.main.component.name ~ "Content Performance") OR \
            (testray.main.component.name ~ "Personalization") OR \
            (testray.main.component.name ~ "Segmentation")\
        )

    #
    # Tango Analytics Cloud
    #

    test.batch.dist.app.servers[tango-analytics-cloud]=tomcat
    test.batch.minimum.slave.ram[functional-tomcat90-mysql57-jdk8][tango-analytics-cloud]=32
    test.batch.names[tango-analytics-cloud]=functional-tomcat90-mysql57-jdk8
    test.batch.osb.asah.github.url[tango-analytics-cloud]=https://github.com/liferay/com-liferay-osb-asah-private/tree/7.0.x
    test.batch.osb.faro.github.url[tango-analytics-cloud]=https://github.com/liferay/com-liferay-osb-faro-private/tree/7.1.x

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][tango-analytics-cloud]=\
        (analytics.cloud.enabled == true) AND \
        (portal.upstream == true) AND \
        (\
            (testray.main.component.name ~ "A/B Test") OR \
            (testray.main.component.name ~ "Content Dashboard") OR \
            (testray.main.component.name ~ "Content Performance") OR \
            (testray.main.component.name ~ "Personalization") OR \
            (testray.main.component.name ~ "Segmentation")\
        )

    #
    # TCK
    #

    test.batch.dist.app.servers[tck]=tomcat
    test.batch.names[tck]=tck-jdk8
    test.context.base[tck]=group/portlet-tck/
    test.server.password.id[tck]=_com_liferay_login_web_portlet_LoginPortlet_password
    test.server.password[tck]=test
    test.server.username.id[tck]=_com_liferay_login_web_portlet_LoginPortlet_login
    test.server.username[tck]=test@liferay.com
    test.session.timeout[tck]=-1
    test.timeout[tck]=5

    #
    # Translations Management
    #

    test.batch.class.names.includes[translations]=\
        **/translation-test/**/*Test.java

    test.batch.dist.app.servers[translations]=tomcat

    test.batch.names[translations]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][translations]=\
        (testray.main.component.name ~ "Translations Management")

    #
    # Upgrade
    #

    test.batch.class.names.includes[upgrade]=\
        **/src/test/**/*Upgrade*Test.java,\
        **/src/testIntegration/**/*Upgrade*Test.java,\
        **/test/**/*Upgrade*Test.java,\
        **/testIntegration/**/*Upgrade*Test.java

    test.batch.dist.app.servers[upgrade]=tomcat

    test.batch.names[upgrade]=\
        database-upgrade-client-jdk8,\
        functional-upgrade-tomcat90-db2111-jdk8,\
        functional-upgrade-tomcat90-mariadb102-jdk8,\
        functional-upgrade-tomcat90-mariadb104-jdk8,\
        functional-upgrade-tomcat90-mysql57-jdk8,\
        functional-upgrade-tomcat90-oracle122-jdk8,\
        functional-upgrade-tomcat90-postgresql10-jdk8,\
        functional-upgrade-tomcat90-sqlserver2017-jdk8,\
        functional-upgrade-tomcat90-sybase160-jdk8,\
        modules-integration-db2111-jdk8,\
        modules-integration-mariadb102-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-integration-oracle122-jdk8,\
        modules-integration-postgresql10-jdk8,\
        modules-integration-sqlserver2017-jdk8,\
        modules-integration-sybase160-jdk8,\
        modules-unit-jdk8

    test.batch.run.property.query[functional-upgrade-tomcat90-db2111-jdk8][upgrade]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (data.archive.type != null) AND \
        (database.types ~ db2)

    test.batch.run.property.query[functional-upgrade-tomcat90-mariadb102-jdk8][upgrade]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (data.archive.type != null) AND \
        (database.types ~ mariadb)

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk8][upgrade]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (data.archive.type != null) AND \
        (database.types == null OR database.types ~ mysql)

    test.batch.run.property.query[functional-upgrade-tomcat90-oracle122-jdk8][upgrade]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (data.archive.type != null) AND \
        (database.types ~ oracle)

    test.batch.run.property.query[functional-upgrade-tomcat90-postgresql10-jdk8][upgrade]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (data.archive.type != null) AND \
        (database.types ~ postgresql)

    test.batch.run.property.query[functional-upgrade-tomcat90-sqlserver2017-jdk8][upgrade]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (data.archive.type != null) AND \
        (database.types ~ sqlserver)

    test.batch.run.property.query[functional-upgrade-tomcat90-sybase160-jdk8][upgrade]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (data.archive.type != null) AND \
        (database.types ~ sybase)

    #
    # Upgrade Client
    #

    test.batch.class.names.includes[upgrade-client]=\
        **/portal-tools-db-upgrade-client/**/*Test.java

    test.batch.dist.app.servers[upgrade-client]=tomcat

    test.batch.names[upgrade-client]=\
        database-upgrade-client-jdk8,\
        modules-unit-jdk8

    #
    # Upstream DXP
    #

    test.batch.names[upstream-dxp]=\
        database-upgrade-client-jdk8,\
        functional-tomcat90-db2111-jdk8,\
        functional-tomcat90-hypersonic20-jdk8,\
        functional-tomcat90-mariadb102-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        functional-tomcat90-oracle122-jdk8,\
        functional-tomcat90-postgresql10-jdk8,\
        functional-tomcat90-sybase160-jdk8,\
        functional-upgrade-jboss72-mysql57-jdk8,\
        functional-upgrade-tomcat90-db2111-jdk8,\
        functional-upgrade-tomcat90-mariadb102-jdk8,\
        functional-upgrade-tomcat90-oracle122-jdk8,\
        functional-upgrade-tomcat90-postgresql10-jdk8,\
        functional-upgrade-tomcat90-postgresql121-jdk8,\
        functional-upgrade-tomcat90-sqlserver2017-jdk8,\
        #functional-upgrade-tomcat90-sqlserver2019-jdk8,\
        #functional-upgrade-tomcat90-sybase160-jdk8,\
        functional-upgrade-weblogic122-mysql57-jdk8,\
        functional-upgrade-websphere90-mysql57-jdk8,\
        functional-upgrade-wildfly140-mariadb102-jdk8,\
        functional-weblogic122-mysql57-jdk8,\
        functional-websphere90-mysql57-jdk8,\
        functional-wildfly140-mysql57-jdk8,\
        jsf-jdk8,\
        modules-integration-db2111-jdk8,\
        modules-integration-hypersonic20-jdk8,\
        modules-integration-mariadb102-jdk8,\
        modules-integration-mysql57-jdk11_open,\
        modules-integration-mysql80-jdk8,\
        modules-integration-oracle122-jdk8,\
        modules-integration-postgresql10-jdk8,\
        modules-integration-postgresql121-jdk8,\
        modules-integration-sqlserver2017-jdk8,\
        modules-integration-sqlserver2019-jdk8,\
        #modules-integration-sybase160-jdk8

    test.batch.names.smoke[upstream-dxp]=\
        functional-smoke-tomcat90-mysql57-jdk8

    test.batch.run.property.query[functional-smoke-tomcat90-mysql57-jdk8][upstream-dxp]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.smoke == true)

    test.batch.run.property.query[functional-tomcat90-db2111-jdk8][upstream-dxp]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ db2) AND \
        (portal.upstream == true OR portal.upstream == quarantine)

    test.batch.run.property.query[functional-tomcat90-hypersonic20-jdk8][upstream-dxp]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ hypersonic) AND \
        (portal.upstream == true OR portal.upstream == quarantine)

    test.batch.run.property.query[functional-tomcat90-mariadb102-jdk8][upstream-dxp]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ mariadb) AND \
        (portal.upstream == true OR portal.upstream == quarantine)

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][upstream-dxp]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upstream == true OR portal.upstream == quarantine)

    test.batch.run.property.query[functional-tomcat90-oracle122-jdk8][upstream-dxp]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ oracle) AND \
        (portal.upstream == true OR portal.upstream == quarantine)

    test.batch.run.property.query[functional-tomcat90-postgresql10-jdk8][upstream-dxp]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ postgresql) AND \
        (portal.upstream == true OR portal.upstream == quarantine)

    test.batch.run.property.query[functional-tomcat90-sybase160-jdk8][upstream-dxp]=\
        (app.server.types == null OR app.server.types ~ tomcat) AND \
        (database.types ~ sybase) AND \
        (portal.upstream == true OR portal.upstream == quarantine)

    test.batch.run.property.query[functional-weblogic122-mysql57-jdk8][upstream-dxp]=\
        (app.server.types == weblogic) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upstream == true OR portal.upstream == quarantine)

    test.batch.run.property.query[functional-websphere90-mysql57-jdk8][upstream-dxp]=\
        (app.server.types == websphere) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upstream == true OR portal.upstream == quarantine)

    test.batch.run.property.query[functional-wildfly140-mysql57-jdk8][upstream-dxp]=\
        (app.server.types == wildfly) AND \
        (database.types == null OR database.types ~ mysql) AND \
        (portal.upstream == true OR portal.upstream == quarantine)

    #
    # Users
    #

    test.batch.class.names.includes[users]=\
        **/user/**/*Test.java,\
        **/user-associated-data/**/*Test.java,\
        **/user-groups-admin/**/*Test.java,\
        **/users-admin/**/*Test.java

    test.batch.dist.app.servers[users]=tomcat

    test.batch.names[users]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][users]=\
        (portal.upstream == true) AND \
        (\
            (testray.component.names ~ "Users and Organizations") OR \
            (testray.main.component.name ~ "Users and Organizations")\
        )

    #
    # WEM Modern Site Building
    #

    test.batch.class.names.includes[wem-msb]=\
        **/asset-categories-test/**/*Test.java,\
        **/asset-category-property-test/**/*Test.java,\
        **/asset-display-test/**/*Test.java,\
        **/asset-list-test/**/*Test.java,\
        **/asset-publisher-test/**/*Test.java,\
        **/asset-publisher-test/**/*Test.java,\
        **/asset-test/**/*Test.java,\
        **/fragment-test/**/*Test.java,\
        **/journal-test/**/*Test.java,\
        **/layout-page-template-test/**/*Test.java,\
        **/layout-test/**/*Test.java,\
        **/site-navigation-test/**/*Test.java,\
        **/site-teams-test/**/*Test.java,\
        **/site-teams-uad-test/**/*Test.java,\
        **/site-test/**/*Test.java,\
        **/trash-test/**/*Test.java

    test.batch.dist.app.servers[wem-msb]=tomcat

    test.batch.names[wem-msb]=\
        functional-tomcat90-mysql57-jdk8,\
        modules-integration-mysql57-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][wem-msb]=\
        (portal.upstream == "true") AND \
        (priority == "5") AND \
        (\
            (testray.main.component.name ~ "Asset Lists") OR \
            (testray.main.component.name ~ "Asset Publisher") OR \
            (testray.main.component.name ~ "Categories") OR \
            (testray.main.component.name ~ "Content Pages") OR \
            (testray.main.component.name ~ "Display Pages") OR \
            (testray.main.component.name ~ "Fragments") OR \
            (testray.main.component.name ~ "Layout Page Templates") OR \
            (testray.main.component.name ~ "Navigation") OR \
            (testray.main.component.name ~ "Recycle Bin") OR \
            (testray.main.component.name ~ "Site Administration") OR \
            (testray.main.component.name ~ "Site Localization") OR \
            (testray.main.component.name ~ "Site Pages Administration") OR \
            (testray.main.component.name ~ "Tags") OR \
            (testray.main.component.name ~ "Upgrades Foundation") OR \
            (testray.main.component.name ~ "Upgrades WEM") OR \
            (testray.main.component.name ~ "Web Content Administration")\
        )

    #
    # Wiki
    #

    test.batch.class.names.includes[wiki]=\
        **/wiki-editor-configuration/**/*Test.java,\
        **/wiki-engine-creole/**/*Test.java,\
        **/wiki-engine-html/**/*Test.java,\
        **/wiki-test/**/*Test.java,\
        **/wiki-uad-test/**/*Test.java,\
        **/wiki-web-test/**/*Test.java

    test.batch.dist.app.servers[wiki]=tomcat

    test.batch.names[wiki]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][wiki]=\
        (portal.upstream == "true") AND \
        (\
            (testray.main.component.name ~ "Wiki")\
        )

    #
    # Workflow
    #

    test.batch.class.names.includes[workflow]=\
        **/portal-workflow-kaleo-forms-test/**/*Test.java,\
        **/portal-workflow-kaleo-test/**/*Test.java,\
        **/portal-workflow-metrics-rest-test/**/*Test.java,\
        **/portal-workflow-metrics-test/**/*Test.java,\
        **/portal-workflow-test/**/*Test.java,\
        **/portal-workflow-uad-test/**/*Test.java,\
        **/src/test/**/workflow/**/*Test.java

    test.batch.dist.app.servers[workflow]=tomcat

    test.batch.names[workflow]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        functional-upgrade-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][workflow]=\
        (portal.upstream != quarantine) AND \
        (\
            (testray.main.component.name == "Kaleo Designer") OR \
            (testray.main.component.name == "Kaleo Forms Admin") OR \
            (testray.main.component.name == "Workflow")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk8][workflow]=\
        (portal.upstream != quarantine) AND \
        (\
            (data.archive.type != "data-archive-calendar") AND \
            (portal.release != "false") AND \
            (testray.component.names != "Polls") AND \
            (testray.main.component.name == "Upgrades Workflow")\
        )

    #
    # Workflow with Elasticsearch 7
    #

    search.engine[workflow-es7]=elasticsearch7

    test.batch.class.names.includes[workflow-es7]=\
        **/portal-workflow-kaleo-forms-test/**/*Test.java,\
        **/portal-workflow-kaleo-test/**/*Test.java,\
        **/portal-workflow-metrics-rest-test/**/*Test.java,\
        **/portal-workflow-metrics-test/**/*Test.java,\
        **/portal-workflow-test/**/*Test.java,\
        **/portal-workflow-uad-test/**/*Test.java,\
        **/src/test/**/workflow/**/*Test.java

    test.batch.dist.app.servers[workflow-es7]=tomcat

    test.batch.names[workflow-es7]=\
        central-requirements-jdk8,\
        functional-tomcat90-mysql57-jdk8,\
        functional-upgrade-tomcat90-mysql57-jdk8,\
        js-unit-jdk8,\
        modules-integration-mysql57-jdk8,\
        modules-semantic-versioning-jdk8,\
        modules-unit-jdk8,\
        semantic-versioning-jdk8,\
        unit-jdk8

    test.batch.run.property.query[functional-tomcat90-mysql57-jdk8][workflow-es7]=\
        (portal.upstream == "true") AND \
        (\
            (testray.main.component.name == "Kaleo Designer") OR \
            (testray.main.component.name == "Kaleo Forms Admin") OR \
            (testray.main.component.name == "Workflow")\
        )

    test.batch.run.property.query[functional-upgrade-tomcat90-mysql57-jdk8][workflow-es7]=\
        (portal.upstream == "true") AND \
        (testray.main.component.name == "Upgrades Workflow")

##
## Test Case
##

    test.case.available.property.names=\
        ${test.case.required.property.names},\
        \
        analytics.cloud.enabled,\
        apacheds.blank.user.password.enabled,\
        apacheds.enabled,\
        app.server.bundles.size,\
        app.server.types,\
        blacklist.portal.profile.names.remove,\
        blacklist.saml.algorithms,\
        browser.type,\
        captcha.enabled,\
        cas.enabled,\
        cluster.enabled,\
        cluster.jdbc.ping,\
        cluster.node.ip,\
        cmis.repository.type,\
        content.targeting.release,\
        custom.properties,\
        custom.system.properties,\
        data.archive.type,\
        database.bare.enabled,\
        database.jndi.enabled,\
        database.sharding,\
        database.types,\
        databases.size,\
        default.layout.template.id,\
        delete.sidecar.bundle,\
        deploy.latest.marketplace.app.disabled,\
        deploy.lcs.token.file,\
        direct.deploy.enabled,\
        dummy.socket.proxy.disabled,\
        elastic.xpack.enabled,\
        environment.acceptance,\
        ext.plugins.includes,\
        extraapps.plugins.includes,\
        hook.plugins.includes,\
        hot.deploy.osgi.app.includes,\
        ignore.errors,\
        ignore.errors.delimiter,\
        index.search.spell.checker.enabled,\
        layouttpl.plugins.includes,\
        legacy.database.dump,\
        legacy.plugin.includes,\
        legacy.plugins.social.office.version,\
        liferay.dependency.jars,\
        liferay.dependency.wars,\
        liferay.training.dependency.jars,\
        marketplace.app.acceptance,\
        marketplace.staging.enabled,\
        minimum.slave.ram,\
        openam.enabled,\
        osgi.app.includes,\
        osgi.module.configuration.file.names,\
        osgi.module.configurations,\
        osgi.modules.includes,\
        plugins.deployment.type,\
        portal.acceptance,\
        portal.acceptance.tomcat.hypersonic,\
        portal.acceptance.tomcat.mysql,\
        portal.acceptance.wildfly.mariadb,\
        portal.context,\
        portal.fixpack.release,\
        portal.hotfix.release,\
        portal.release,\
        portal.release.environment,\
        portal.smoke,\
        portal.ssl.enabled,\
        portal.suite.search.engine,\
        portal.upgrades,\
        portal.upstream,\
        portal.version,\
        portlet.plugins.includes,\
        portlet.properties.calendar-portlet,\
        portlet.properties.com.liferay.journal.service,\
        portlet.properties.knowledge-base-portlet,\
        portlet.properties.marketplace-portlet,\
        portlet.properties.private-messaging-portlet,\
        product.team.names,\
        project.templates,\
        remote.elasticsearch.cluster.size,\
        remote.elasticsearch.clusters.enabled,\
        remote.elasticsearch.enabled,\
        remote.elasticsearch.ltr.enabled,\
        setup.wizard.enabled,\
        skip.clean-app-server-deploy-dir,\
        skip.install-patch,\
        skip.start-app-server,\
        skip.upgrade-legacy-database,\
        socks.proxy.enabled,\
        socks.proxy.hosts,\
        solr.enabled,\
        solr.solrcloud.enabled,\
        solr.ssl.authentication.enabled,\
        test.assert.console.errors,\
        test.assert.javascript.errors,\
        test.assert.warning.exceptions,\
        test.ignore.tomcat.ext.environment,\
        test.name.skip.portal.instance,\
        test.prepare.bundle.properties,\
        test.run.environment,\
        test.smtp.server.enabled,\
        testcase.url,\
        testray.component.names,\
        testray.testcase.product.edition,\
        theme.file.name,\
        theme.plugins.includes,\
        timeout.explicit.wait,\
        web.plugins.includes,\
        web.xml.timeout

    test.case.available.property.values[minimum.slave.ram]=\
        16,\
        32

    test.case.available.property.values[product.team.names]=\
        Echo (Web Experience Management),\
        Lima (Collaboration),\
        Tango (Segmentation / Personalization)

    test.case.available.property.values[testray.main.component.name]=\
        ${testray.available.component.names}

    test.case.required.property.names=\
        testray.main.component.name

##
## Test Class Groups
##

    test.class.groups.size=40

    #test.class.modules.base.dir=
    #test.class.names.auto.balance=

##
## Test Module Groups
##

    test.module.groups.size=50

##
## Test Plugin Groups
##

    test.plugin.groups.size=10

##
## Test Subrepo Directories
##

    test.subrepo.dirs=\
        ${project.dir}/modules/apps/account/account-test/src/testFunctional,\
        ${project.dir}/modules/apps/app-builder/app-builder-test/src/testFunctional,\
        ${project.dir}/modules/apps/bulk/bulk-selection-test/src/testFunctional,\
        ${project.dir}/modules/apps/calendar/calendar-web-test/src/testFunctional,\
        ${project.dir}/modules/apps/commerce/commerce-product-test/src/testFunctional,\
        ${project.dir}/modules/apps/depot/depot-test/src/testFunctional,\
        ${project.dir}/modules/apps/document-library-opener/document-library-opener-google-drive-test/src/testFunctional,\
        ${project.dir}/modules/apps/item-selector/item-selector-test/src/testFunctional,\
        ${project.dir}/modules/apps/layout/layout-admin-web-test/src/testFunctional,\
        ${project.dir}/modules/apps/layout/layout-content-page-editor-web-test/src/testFunctional,\
        ${project.dir}/modules/apps/layout/layout-seo-web-test/src/testFunctional,\
        ${project.dir}/modules/apps/portal-workflow/portal-workflow-test/src/testFunctional,\
        ${project.dir}/modules/apps/ratings/ratings-test/src/testFunctional,\
        ${project.dir}/modules/apps/redirect/redirect-test/src/testFunctional,\
        ${project.dir}/modules/apps/translation/translation-test/src/testFunctional,\
        ${project.dir}/modules/dxp/apps/document-library-opener/document-library-opener-onedrive-test/src/testFunctional,\
        ${project.dir}/modules/dxp/apps/portal-reports-engine-console/portal-reports-engine-console-test/src/testFunctional,\
        ${project.dir}/modules/dxp/apps/portal-rules-engine-drools/portal-rules-engine-drools-test/src/testFunctional,\
        ${project.dir}/modules/dxp/apps/portal-workflow/portal-workflow-kaleo-designer-test/src/testFunctional,\
        ${project.dir}/modules/dxp/apps/portal-workflow/portal-workflow-kaleo-forms-test/src/testFunctional,\
        ${project.dir}/modules/dxp/apps/portal-workflow/portal-workflow-metrics-test/src/testFunctional,\
        ${project.dir}/modules/sdk/project-templates/project-templates/src/testFunctional,\
        ${project.dir}/modules/dxp/apps/app-builder-workflow/app-builder-workflow-test/src/testFunctional

##
## Testray
##

    testray.available.component.names=\
        ${testray.team.app-builder.component.names},\
        ${testray.team.collaboration.component.names},\
        ${testray.team.commerce.component.names},\
        ${testray.team.core-infrastructure.component.names},\
        ${testray.team.developer-tools.component.names},\
        ${testray.team.engineering.component.names},\
        ${testray.team.forms-and-workflow.component.names},\
        ${testray.team.frontend-infrastructure.component.names},\
        ${testray.team.headless.component.names},\
        ${testray.team.internal.component.names},\
        ${testray.team.liferay-connected-services.component.names},\
        ${testray.team.marketplace.component.names},\
        ${testray.team.publications.component.names},\
        ${testray.team.search.component.names},\
        ${testray.team.security.component.names},\
        ${testray.team.segmentation-and-personalization.component.names},\
        ${testray.team.social-office.component.names},\
        ${testray.team.staging.component.names},\
        ${testray.team.support-qa.component.names},\
        ${testray.team.triage.component.names},\
        ${testray.team.user-and-system-management.component.names},\
        ${testray.team.web-content-management.component.names}

    testray.build.name=${testray.build.type} - ${testray.build.number} - ${testray.build.time}
    testray.build.number=${env.TOP_LEVEL_BUILD_NUMBER}
    testray.build.time=${env.TOP_LEVEL_TIME_STAMP}
    testray.build.type=CE Development (${liferay.portal.branch})

    testray.product.type=portal
    testray.product.version=7.0.x

    testray.team.internal.component.names=\
        Grow

    testray.project.lcs62.name=Liferay Connected Services 6.2

    testray.project.marketplace10.name=Liferay Marketplace 1.0

    testray.project.portal61.name=Liferay Portal 6.1
    testray.project.portal62.name=Liferay Portal 6.2
    testray.project.portal70.name=Liferay Portal 7.0

    testray.project.sync10.name=Liferay Sync 1.0

    testray.project.socialoffice20.name=Social Office 2.0
    testray.project.socialoffice21.name=Social Office 2.1
    testray.project.socialoffice30.name=Social Office 3.0
    testray.project.socialoffice31.name=Social Office 3.1

    testray.team.names=\
        app-builder,\
        collaboration,\
        commerce,\
        core-infrastructure,\
        developer-tools,\
        engineering,\
        forms-and-workflow,\
        frontend-infrastructure,\
        headless,\
        liferay-connected-services,\
        marketplace,\
        publications,\
        search,\
        security,\
        segmentation-and-personalization,\
        social-office,\
        staging,\
        support-qa,\
        triage,\
        user-and-system-management,\
        web-content-management

    testray.team.app-builder.component.names=\
        App Builder,\
        Shared App Builder

    testray.team.collaboration.component.names=\
        Adaptive Media,\
        Akismet,\
        Announcements,\
        Asset Sharing,\
        Auto Tagging,\
        Blogs,\
        Bookmarks,\
        Bulk Editing,\
        Content Page Review,\
        Depot,\
        Documents Management,\
        Friendly URL Service,\
        Invite Members,\
        IP Geocoder,\
        Item Selector,\
        Knowledge Base,\
        Mentions,\
        Message Boards,\
        Microblogs,\
        My Subscriptions,\
        Notifications,\
        Online Editing,\
        Ratings,\
        Redirect,\
        Translations Management,\
        SEO,\
        Sharepoint,\
        Social Bookmarks,\
        Social Networking,\
        Sync,\
        Twitter,\
        Upgrades Collaboration,\
        Wiki

    testray.team.commerce.component.names=\
        Commerce

    testray.team.core-infrastructure.component.names=\
        APIs,\
        Application Standards,\
        Auditing,\
        Bundle Blacklist,\
        Clustering,\
        Databases,\
        Database Partitioning,\
        Deployment,\
        Development Tools,\
        Document Library Stores,\
        File Install,\
        Friendly URL,\
        Gogo Shell,\
        IP Address,\
        Locale,\
        Localization Hooks,\
        Liferay Faces,\
        Mobile Device Rules,\
        Portal Services,\
        Rolling Restart,\
        Sample Portlet Plugins,\
        Server Administration,\
        Setup Wizard,\
        Templates Engine,\
        Test Plugins,\
        Theme Loader,\
        Upgrades Core Infrastructure,\
        Util

    testray.team.developer-tools.component.names=\
        Blade Samples,\
        Project Templates

    testray.team.engineering.component.names=\
        Tools

    testray.team.forms-and-workflow.component.names=\
        Calendar,\
        Dynamic Data Lists,\
        Forms,\
        Kaleo Designer,\
        Kaleo Forms Admin,\
        Polls,\
        Reports,\
        Rules,\
        Upgrades Forms,\
        Upgrades Workflow,\
        Web Form,\
        Workflow

    testray.team.frontend-infrastructure.component.names=\
        AMD Loader,\
        Clay,\
        Mobile Web,\
        Theme,\
        User Interface

    testray.team.headless.component.names=\
        Headless,\
        Questions

    testray.team.liferay-connected-services.component.names=\
        Liferay Connected Services

    testray.team.marketplace.component.names=\
        Marketplace,\
        Plugin Installer

    testray.team.publications.component.names=\
        Publications

    testray.team.search.component.names=\
        Elasticsearch Impl,\
        SOLR Impl,\
        Upgrades Search,\
        Web Search

    testray.team.security.component.names=\
        AntiSamy,\
        CAPTCHA,\
        LDAP,\
        Login,\
        Multi Factor Authentication,\
        OAuth 2,\
        Permissions,\
        SAML,\
        Security,\
        Upgrades Security,\
        XSS

    testray.team.segmentation-and-personalization.component.names=\
        A/B Test,\
        Content Dashboard,\
        Content Performance,\
        Personalization,\
        Segmentation

    testray.team.social-office.component.names=\
        Social Office CE,\
        Social Office EE

    testray.team.staging.component.names=\
        Export/Import Framework,\
        Site Templates,\
        Staging,\
        Upgrades Staging

    testray.team.support-qa.component.names=\
        Patching Tool

    testray.team.triage.component.names=\
        Backend,\
        Functional,\
        Integration,\
        Modules Integration,\
        Modules Unit,\
        Plugins,\
        Portal Web,\
        Service Builder,\
        Smoke,\
        Source,\
        TCK,\
        Unit

    testray.team.user-and-system-management.component.names=\
        App Manager,\
        Business Accounts,\
        Contacts Center,\
        Custom Fields,\
        Password Policies,\
        Personal Data,\
        Portal Instances,\
        Portal Settings,\
        Roles,\
        Upgrades User and System Management,\
        User Groups,\
        Users and Organizations

    testray.team.web-content-management.component.names=\
        Asset Lists,\
        Asset Publisher,\
        Breadcrumb,\
        Categories,\
        Content and Application Templates,\
        Content Pages,\
        Content Targeting,\
        Control Menu,\
        Display Pages,\
        Flash,\
        Fragments,\
        Google,\
        Highest Rated Assets,\
        IFrame Portlet,\
        Layout Page Templates,\
        Localization,\
        Look And Feel,\
        Most Viewed Assets,\
        Navigation,\
        Nested Portlets,\
        Page Templates,\
        Personalization and Customization,\
        Recycle Bin,\
        Related Assets,\
        RSS,\
        Site Administration,\
        Site Localization,\
        Site Pages Administration,\
        Sitemap,\
        Style Books,\
        Tags,\
        Upgrades Foundation,\
        Upgrades WEM,\
        WCM,\
        Weather,\
        Web Content Administration,\
        Web Content Display,\
        Web Content Search,\
        XSL,\
        YouTube

##
## Product Names
##

    product.names=\
        extra-apps,\
        liferay-connected-services,\
        marketplace,\
        portal,\
        social-office

##
## Utilities
##

    blacklist.portal.profile.names=\
        com.liferay.chat.service,\
        com.liferay.chat.web,\
        opensocial-portlet

    build.test.results.xml=true
    dummy.socket.proxy=-DsocksProxyHost=127.0.0.1 -DsocksProxyPort=8888 -Dhttp.nonProxyHosts="accounts.google.com|www.googleapis.com"
    #ip.address=
    patching.tool.latest.txt=LATEST-2.0.txt
    #print.java.process.on.fail=
    selenium.output.dir.name=${liferay.home}/poshi
    #setx.executable=
    #test.assert.console.errors=
    test.assert.warning.exceptions=false
    #test.build.fix.pack.zip.url=
    #test.build.fix.pack.zip.url.previous=

    test.csv.report.property.names=\
        ignored,\
        portal.acceptance,\
        portal.fixpack.release,\
        portal.release,\
        portal.smoke,\
        portal.upstream,\
        testray.component.names,\
        testray.main.component.name

    test.ext.properties.file=portal-web/test/test-portal-web-ext.properties
    #test.fix.pack.base.url=
    test.get.location.max.retries=3
    test.get.location.timeout=30
    #test.include.dir.names=
    #test.jdbc.drivers.url=
    #test.latest.marketplace.apps=

    test.modules.force.deploy=\
        portal-search-solr7

    #test.name.skip.portal.instance=
    test.pause.on.failure=false
    test.portal.instance=false
    test.poshi.core.src.dir=modules/test/poshi/poshi-core
    test.poshi.runner.default.namespace=LocalFile
    test.poshi.runner.local.release=false
    test.poshi.runner.src.dir=modules/test/poshi/poshi-runner
    #test.prepare.bundle.properties=
    test.retry.command.wait.time=3
    test.run.environment=CE
    test.save.screenshot=true
    test.save.web.page=false
    test.smtp.server.dir=${project.dir}/lib/development
    test.smtp.server.url=http://mirrors.lax.liferay.com/repository.liferay.com/nexus/content/repositories/third-party/com/liferay/com.mockmock/1.4.0/com.mockmock-1.4.0.jar
    test.skip.tear.down=false
    #test.url=http://localhost:8080
    timeout.app.server.wait=1800
    timeout.explicit.wait=120
    #unzip.executable=

##
## Virtual Host
##

    #virtual.host.name=

##
## VM
##

    vmware-cmd.executable=C:/Program Files (x86)/VMware/VMware Server/vmware-cmd.bat

    vm.drive=V:
    vm.host=vm-1
    vm.username=
    vm.password=

    vm.cluster-node-1.host=vm-1
    vm.cluster-node-1.ip=

    vm.cluster-node-2.host=vm-2
    vm.cluster-node-2.ip=

    vm.db.host=vm-3
    vm.db.ip=