import com.liferay.gradle.util.FileUtil
import com.liferay.gradle.util.copy.StripPathSegmentsAction

import org.gradle.execution.ProjectConfigurer

task cleanProjectTemplatesTests(type: Delete)
task uploadProjectTemplateArchives
task writeProjectTemplateVersions

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

File mavenWrapperPropertiesFile = file("src/main/resources/maven-wrapper/.mvn/wrapper/maven-wrapper.properties")

Properties mavenWrapperProperties = GUtil.loadProperties(mavenWrapperPropertiesFile)

String mavenDistributionVersion = mavenWrapperProperties["distributionUrl"]

mavenDistributionVersion = mavenDistributionVersion.find(/\d+\.\d+\.\d+/)

Set<Project> projectTemplateProjects = project.parent.subprojects.findAll {
	it.name.startsWith "project-templates-"
}

ProjectConfigurer projectConfigurer = gradle.services.get(ProjectConfigurer)

bundle {
	includeTransitiveDependencies = true
}

cleanProjectTemplatesTests {
	delete fileTree(dir: processTestResources.destinationDir, include: "*.jar")
}

configurations {
	mavenDistribution
	projectTemplates

	projectTemplatesTests {
		extendsFrom projectTemplates

		resolutionStrategy.dependencySubstitution.all {
			DependencySubstitution dependencySubstitution ->

			ComponentSelector componentSelector = dependencySubstitution.requested

			if ((componentSelector instanceof ModuleComponentSelector) && componentSelector.module.startsWith("com.liferay.project.templates.")) {
				String template = componentSelector.module.substring(30)

				template = template.replace('.' as char, '-' as char)

				Project projectTemplateProject = project.parent.childProjects["project-templates-" + template]

				projectConfigurer.configure projectTemplateProject

				dependencySubstitution.useTarget projectTemplateProject
			}
		}
	}
}

dependencies {
	compileInclude group: "com.beust", name: "jcommander", version: "1.72"

	compileOnly group: "biz.aQute.bnd", name: "biz.aQute.bnd", version: "3.5.0"
	compileOnly group: "org.apache.maven.archetype", name: "archetype-common", version: "2.4"

	mavenDistribution classifier: "bin", ext: "zip", group: "org.apache.maven", name: "apache-maven", version: mavenDistributionVersion

	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.activator", version: "1.0.15"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.api", version: "1.0.16"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.content.targeting.report", version: "1.0.15"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.content.targeting.rule", version: "1.0.15"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.content.targeting.tracking.action", version: "1.0.15"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.control.menu.entry", version: "1.0.15"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.form.field", version: "1.0.13"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.fragment", version: "1.0.14"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.freemarker.portlet", version: "1.0.11"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.layout.template", version: "1.0.12"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.mvc.portlet", version: "1.0.14"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.npm.angular.portlet", version: "1.0.11"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.npm.billboardjs.portlet", version: "1.0.11"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.npm.isomorphic.portlet", version: "1.0.11"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.npm.jquery.portlet", version: "1.0.11"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.npm.metaljs.portlet", version: "1.0.11"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.npm.portlet", version: "1.0.11"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.npm.react.portlet", version: "1.0.11"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.npm.vuejs.portlet", version: "1.0.11"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.panel.app", version: "1.0.14"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.portlet", version: "1.0.14"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.portlet.configuration.icon", version: "1.0.14"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.portlet.provider", version: "1.0.14"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.portlet.toolbar.contributor", version: "1.0.14"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.rest", version: "1.0.14"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.service", version: "1.0.14"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.service.builder", version: "1.0.15"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.service.wrapper", version: "1.0.14"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.simulation.panel.entry", version: "1.0.14"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.social.bookmark", version: "1.0.7"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.soy.portlet", version: "1.0.11"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.spring.mvc.portlet", version: "1.0.11"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.template.context.contributor", version: "1.0.14"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.theme", version: "1.0.15"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.theme.contributor", version: "1.0.13"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.war.hook", version: "1.0.10"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.war.mvc.portlet", version: "1.0.10"
	projectTemplates group: "com.liferay", name: "com.liferay.project.templates.workspace", version: "1.0.17"

	testCompile gradleTestKit()
	testCompile group: "com.googlecode.java-diff-utils", name: "diffutils", version: "1.3.0"
	testCompile group: "com.liferay", name: "com.liferay.maven.executor", version: "1.0.0"
	testCompile group: "junit", name: "junit", version: "4.12"
	testCompile group: "net.diibadaaba.zipdiff", name: "zipdiff", version: "1.0"
}

liferayOSGi {
	expandCompileInclude = true
}

processResources {
	from configurations.projectTemplates
}

processTestResources {
	dependsOn cleanProjectTemplatesTests
	from configurations.projectTemplatesTests
}

test {
	dependsOn projectTemplateProjects.collect {
		"${it.path}:install"
	}

	dependsOn writeProjectTemplateVersions

	doFirst {
		Properties gradleWrapperProperties = new Properties()

		File gradleWrapperPropertiesFile = file("src/main/resources/gradle-wrapper/gradle/wrapper/gradle-wrapper.properties")

		gradleWrapperPropertiesFile.withInputStream {
			gradleWrapperProperties.load it
		}

		String gradleDistributionUrl = gradleWrapperProperties["distributionUrl"]

		File gradleDistributionFile = FileUtil.get(project, gradleDistributionUrl)

		systemProperty "gradle.distribution", uri(gradleDistributionFile)
		systemProperty "maven.distribution.file.name", configurations.mavenDistribution.singleFile
	}

	jvmArgs "-XX:MaxMetaspaceSize=256m"
	maxHeapSize = "1024m"

	systemProperty "http.proxyHost", System.properties["http.proxyHost"]
	systemProperty "http.proxyPort", System.properties["http.proxyPort"]
	systemProperty "maven.debug", System.properties["maven.debug"]
	systemProperty "maven.repo.local", System.properties["maven.repo.local"]
	systemProperty "nodejs.npm.ci.registry", project.property("nodejs.npm.ci.registry")
	systemProperty "nodejs.npm.ci.sass.binary.site", project.property("nodejs.npm.ci.sass.binary.site")
	systemProperty "project.templates.test.builds", project.property("project.templates.test.builds")
	systemProperty "repository.url", System.properties["repository.url"]
	systemProperty "test.debug.bundle.diffs", System.properties["test.debug.bundle.diffs"]

	systemProperties projectTemplateTokens
}

uploadProjectTemplateArchives {
	dependsOn projectTemplateProjects.collect {
		"${it.path}:uploadArchives"
	}
}

writeProjectTemplateVersions {
	doLast {
		Properties properties = new Properties()

		for (Project projectTemplateProject in projectTemplateProjects) {
			Properties bndProperties = GUtil.loadProperties(projectTemplateProject.file("bnd.bnd"))

			properties.setProperty bndProperties["Bundle-SymbolicName"], bndProperties["Bundle-Version"]
		}

		File projectTemplateVersionsFile = new File(buildDir, "project-template-versions.properties")

		projectTemplateVersionsFile.parentFile.mkdirs()

		projectTemplateVersionsFile.withOutputStream {
			properties.store it, null
		}
	}
}