{namespace Calculator}

{template .render}
	{@param fields: list<?>}
	{@param index: int}
	{@param functions: list<?>}
	{@param spritemap: string}
	{@param? _handleButtonClicked: any}
	{@param? _handleFieldsDropdownItemClicked: any}
	{@param? _handleFunctionsDropdownItemClicked: any}
	{@param? disableDot: bool}
	{@param? disableFunctions: bool}
	{@param? disableNumbers: bool}
	{@param? disableOperators: bool}
	{@param? expression: string}
	{@param? placeholder: string}
	{@param? repeatableFields: list<?>}
	{@param? showOnlyRepeatableFields: bool}

	<div action-rule-calculate-index="{$index}" class="action-rule-calculate row">
		<div class="col-md-12 no-padding">
			<div class="calculate-container">
				<div class="calculate-container-calculator-component col-md-3">
					<div class="liferay-ddm-form-builder-calculator">
						{let $dropownItems: $showOnlyRepeatableFields ? $repeatableFields : $fields /}
						{let $disableAddField: $dropownItems and (length($dropownItems) > 0) ? false : true /}

						{call ClayDropdownBase.render}
							{param events: [
								'itemClicked': $_handleFieldsDropdownItemClicked
							] /}
							{param contentRenderer: 'dropdownFormContent' /}
							{param disabled: $disableAddField /}
							{param elementClasses: 'calculator-add-field-button-container' /}
							{param items: $dropownItems ? $dropownItems : [] /}
							{param label kind="text"}
								{msg desc=""}add-field{/msg}
							{/param}
							{param ref: 'calculatorAddField' + $index /}
							{param spritemap: $spritemap /}
							{param style: 'primary' /}
							{param triggerClasses: 'btn-lg calculator-add-field-button ddm-button' /}
						{/call}

						{let $disableNumbersAttribute : $disableNumbers ? 'disabled' : '' /}

						<div class="calculator-button-area">
							<ul class="calculator-buttons calculator-buttons-numbers">
								<li class="border-top-left btn btn-secondary button-padding-icons calculator-button" data-onclick="{$_handleButtonClicked}" data-token-type="Backspace" data-token-value="backspace">
									{call ClayIcon.render}
										{param spritemap: $spritemap /}
										{param symbol: 'angle-left' /}
									{/call}
								</li>
								<li class="btn btn-secondary calculator-button {$disableNumbersAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Left Parenthesis" data-token-value="(">(</li>
								<li class="border-top-right btn btn-secondary calculator-button {$disableNumbersAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Parenthesis Right" data-token-value=")">)</li>
								<li class="btn btn-secondary calculator-button {$disableNumbersAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Literal" data-token-value="1">1</li>
								<li class="btn btn-secondary calculator-button {$disableNumbersAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Literal" data-token-value="2">2</li>
								<li class="btn btn-secondary calculator-button {$disableNumbersAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Literal" data-token-value="3">3</li>
								<li class="btn btn-secondary calculator-button {$disableNumbersAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Literal" data-token-value="4">4</li>
								<li class="btn btn-secondary calculator-button {$disableNumbersAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Literal" data-token-value="5">5</li>
								<li class="btn btn-secondary calculator-button {$disableNumbersAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Literal" data-token-value="6">6</li>
								<li class="btn btn-secondary calculator-button {$disableNumbersAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Literal" data-token-value="7">7</li>
								<li class="btn btn-secondary calculator-button {$disableNumbersAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Literal" data-token-value="8">8</li>
								<li class="btn btn-secondary calculator-button {$disableNumbersAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Literal" data-token-value="9">9</li>
								<li class="border-bottom-left btn btn-secondary button-two-columns calculator-button {$disableNumbersAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Literal" data-token-value="0">0</li>

								{let $disableDotAttribute : $disableNumbers or $disableDot ? 'disabled' : '' /}

								<li class="border-bottom-right btn btn-secondary calculator-button {$disableDotAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Literal" data-token-value=".">.</li>
							</ul>

							{let $disableOperatorsAttribute : $disableOperators ? 'disabled' : '' /}

							<ul class="calculator-buttons calculator-buttons-operators">
								<li>
									{call ClayActionsDropdown.render}
										{param events: [
											'itemClicked': $_handleFunctionsDropdownItemClicked
										] /}
										{param elementClasses: 'dropdown-action' /}
										{param disabled: $disableFunctions /}
										{param items: $functions /}
										{param ref: 'functions' + $index /}
										{param spritemap: $spritemap /}
										{param style: 'secondary' /}
										{param triggerClasses: 'dropdown-toggle calculator-add-operator-button-area' /}
									{/call}
								</li>
								<li class="btn btn-secondary calculator-button {$disableOperatorsAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Operator" data-token-value="+">+</li>
								<li class="btn btn-secondary calculator-button {$disableOperatorsAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Operator" data-token-value="-">-</li>
								<li class="btn btn-secondary calculator-button {$disableOperatorsAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Operator" data-token-value="*">*</li>
								<li class="border-bottom-left border-bottom-right btn btn-secondary calculator-button {$disableOperatorsAttribute}" data-onclick="{$_handleButtonClicked}" data-token-type="Operator" data-token-value="/">/</li>
							</ul>
						</div>
					</div>
				</div>

				<div class="calculate-container-fields col-md-9">
					<div class="form-group">
						{call ReactFieldAdapter.render}
							{param name: 'calculator-expression' /}
							{param fieldType: 'text' /}
							{param readOnly: true /}
							{param displayStyle: 'multiline' /}
							{param placeholder: $placeholder /}
							{param showLabel: false /}
							{param spritemap: $spritemap /}
							{param value: $expression /}
						{/call}
					</div>
				</div>
			</div>
		</div>
	</div>
{/template}

{deltemplate ClayDropdownItem.Item variant="'dropdownCalculator'"}
	{@param label: string}
	{@param? _handleItemClick: any}
	{@param? active: bool}
	{@param? checked: bool}
	{@param? disabled: bool}
	{@param? href: string}
	{@param? icon: string}
	{@param? inputName: string}
	{@param? inputValue: string}
	{@param? items: list<?>}
	{@param? itemsIconAlignment: string}
	{@param? maxItems: int}
	{@param? separator: bool}
	{@param? spritemap: string}
	{@param? title: string}

	{let $item kind="html"}
		{$label}
		<span class="calculate-fieldname">{msg desc=""}field-id{/msg}: {$title}</span>
	{/let}

	{let $itemAttributes kind="attributes"}
		class="dropdown-item
			{if $active or $checked}
				{sp}active
			{/if}
		"

		data-onclick="{$_handleItemClick}"
	{/let}

	<li {$itemAttributes} data-option-value="{$title}">
		{$item}
	</li>

	{if $separator}
		<li aria-hidden="true" class="dropdown-divider" role="presentation"></li>
	{/if}

{/deltemplate}

{deltemplate ClayDropdownBase.Content variant="'dropdownFormContent'"}
	{@param? _handleItemClick: any}
	{@param? contentRenderer: string}
	{@param? items: list<?>}
	{@param? itemsIconAlignment: string}
	{@param? spritemap: string}

	{if $items}
		<ul class="list-unstyled">
			{call ClayDropdownBase.items}
				{param _handleItemClick: $_handleItemClick /}
				{param items: $items /}
				{param itemsIconAlignment: $itemsIconAlignment /}
				{param contentRenderer: 'dropdownCalculator' /}
				{param spritemap: $spritemap /}
			{/call}
		</ul>
	{/if}
{/deltemplate}