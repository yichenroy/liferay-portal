<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */
--%>

<liferay-frontend:vertical-card-sticker-bottom>
	<c:if test="<%= Validator.isNotNull(fileEntry.getExtension()) %>">
		<div class="sticker sticker-bottom <%= cpAttachmentFileEntriesDisplayContext.getCssClassFileMimeType(fileEntry) %>">
			<%= StringUtil.shorten(StringUtil.upperCase(fileEntry.getExtension()), 3, StringPool.BLANK) %>
		</div>
	</c:if>
</liferay-frontend:vertical-card-sticker-bottom>

<liferay-frontend:vertical-card-header>
	<%= HtmlUtil.escape(cpDefinition.getName(languageId)) %>
</liferay-frontend:vertical-card-header>

<liferay-frontend:vertical-card-footer>

	<%
	for (CPDefinitionOptionRel cpDefinitionOptionRel : cpDefinitionOptionRels) {
		StringJoiner stringJoiner = new StringJoiner(StringPool.COMMA);

		if (!cpDefinitionOptionRelListMap.containsKey(cpDefinitionOptionRel)) {
			continue;
		}

		List<CPDefinitionOptionValueRel> cpDefinitionOptionValueRels = cpDefinitionOptionRelListMap.get(cpDefinitionOptionRel);

		for (CPDefinitionOptionValueRel cpDefinitionOptionValueRel : cpDefinitionOptionValueRels) {
			stringJoiner.add(cpDefinitionOptionValueRel.getName(languageId));
		}
	%>

		<h6 class="text-default">
			<strong><%= HtmlUtil.escape(cpDefinitionOptionRel.getName(languageId)) %></strong>

			<%= HtmlUtil.escape(stringJoiner.toString()) %>
		</h6>

	<%
	}
	%>

	<aui:workflow-status markupView="lexicon" showIcon="<%= false %>" showLabel="<%= false %>" status="<%= cpAttachmentFileEntry.getStatus() %>" />
</liferay-frontend:vertical-card-footer>