/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the CommerceInventory service. Represents a row in the &quot;CommerceInventory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.commerce.model.impl.CommerceInventoryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.commerce.model.impl.CommerceInventoryImpl}.
 * </p>
 *
 * @author Alessio Antonio Rendina
 * @see CommerceInventory
 * @see com.liferay.commerce.model.impl.CommerceInventoryImpl
 * @see com.liferay.commerce.model.impl.CommerceInventoryModelImpl
 * @generated
 */
@ProviderType
public interface CommerceInventoryModel extends BaseModel<CommerceInventory>,
	GroupedModel, ShardedModel, StagedAuditedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a commerce inventory model instance should use the {@link CommerceInventory} interface instead.
	 */

	/**
	 * Returns the primary key of this commerce inventory.
	 *
	 * @return the primary key of this commerce inventory
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this commerce inventory.
	 *
	 * @param primaryKey the primary key of this commerce inventory
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this commerce inventory.
	 *
	 * @return the uuid of this commerce inventory
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this commerce inventory.
	 *
	 * @param uuid the uuid of this commerce inventory
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the commerce inventory ID of this commerce inventory.
	 *
	 * @return the commerce inventory ID of this commerce inventory
	 */
	public long getCommerceInventoryId();

	/**
	 * Sets the commerce inventory ID of this commerce inventory.
	 *
	 * @param commerceInventoryId the commerce inventory ID of this commerce inventory
	 */
	public void setCommerceInventoryId(long commerceInventoryId);

	/**
	 * Returns the group ID of this commerce inventory.
	 *
	 * @return the group ID of this commerce inventory
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this commerce inventory.
	 *
	 * @param groupId the group ID of this commerce inventory
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this commerce inventory.
	 *
	 * @return the company ID of this commerce inventory
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this commerce inventory.
	 *
	 * @param companyId the company ID of this commerce inventory
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this commerce inventory.
	 *
	 * @return the user ID of this commerce inventory
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this commerce inventory.
	 *
	 * @param userId the user ID of this commerce inventory
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this commerce inventory.
	 *
	 * @return the user uuid of this commerce inventory
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this commerce inventory.
	 *
	 * @param userUuid the user uuid of this commerce inventory
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this commerce inventory.
	 *
	 * @return the user name of this commerce inventory
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this commerce inventory.
	 *
	 * @param userName the user name of this commerce inventory
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this commerce inventory.
	 *
	 * @return the create date of this commerce inventory
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this commerce inventory.
	 *
	 * @param createDate the create date of this commerce inventory
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this commerce inventory.
	 *
	 * @return the modified date of this commerce inventory
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this commerce inventory.
	 *
	 * @param modifiedDate the modified date of this commerce inventory
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the cp definition ID of this commerce inventory.
	 *
	 * @return the cp definition ID of this commerce inventory
	 */
	public long getCPDefinitionId();

	/**
	 * Sets the cp definition ID of this commerce inventory.
	 *
	 * @param CPDefinitionId the cp definition ID of this commerce inventory
	 */
	public void setCPDefinitionId(long CPDefinitionId);

	/**
	 * Returns the commerce inventory engine of this commerce inventory.
	 *
	 * @return the commerce inventory engine of this commerce inventory
	 */
	@AutoEscape
	public String getCommerceInventoryEngine();

	/**
	 * Sets the commerce inventory engine of this commerce inventory.
	 *
	 * @param commerceInventoryEngine the commerce inventory engine of this commerce inventory
	 */
	public void setCommerceInventoryEngine(String commerceInventoryEngine);

	/**
	 * Returns the display availability of this commerce inventory.
	 *
	 * @return the display availability of this commerce inventory
	 */
	public boolean getDisplayAvailability();

	/**
	 * Returns <code>true</code> if this commerce inventory is display availability.
	 *
	 * @return <code>true</code> if this commerce inventory is display availability; <code>false</code> otherwise
	 */
	public boolean isDisplayAvailability();

	/**
	 * Sets whether this commerce inventory is display availability.
	 *
	 * @param displayAvailability the display availability of this commerce inventory
	 */
	public void setDisplayAvailability(boolean displayAvailability);

	/**
	 * Returns the display stock quantity of this commerce inventory.
	 *
	 * @return the display stock quantity of this commerce inventory
	 */
	public boolean getDisplayStockQuantity();

	/**
	 * Returns <code>true</code> if this commerce inventory is display stock quantity.
	 *
	 * @return <code>true</code> if this commerce inventory is display stock quantity; <code>false</code> otherwise
	 */
	public boolean isDisplayStockQuantity();

	/**
	 * Sets whether this commerce inventory is display stock quantity.
	 *
	 * @param displayStockQuantity the display stock quantity of this commerce inventory
	 */
	public void setDisplayStockQuantity(boolean displayStockQuantity);

	/**
	 * Returns the min stock quantity of this commerce inventory.
	 *
	 * @return the min stock quantity of this commerce inventory
	 */
	public int getMinStockQuantity();

	/**
	 * Sets the min stock quantity of this commerce inventory.
	 *
	 * @param minStockQuantity the min stock quantity of this commerce inventory
	 */
	public void setMinStockQuantity(int minStockQuantity);

	/**
	 * Returns the back orders of this commerce inventory.
	 *
	 * @return the back orders of this commerce inventory
	 */
	public boolean getBackOrders();

	/**
	 * Returns <code>true</code> if this commerce inventory is back orders.
	 *
	 * @return <code>true</code> if this commerce inventory is back orders; <code>false</code> otherwise
	 */
	public boolean isBackOrders();

	/**
	 * Sets whether this commerce inventory is back orders.
	 *
	 * @param backOrders the back orders of this commerce inventory
	 */
	public void setBackOrders(boolean backOrders);

	/**
	 * Returns the min cart quantity of this commerce inventory.
	 *
	 * @return the min cart quantity of this commerce inventory
	 */
	public int getMinCartQuantity();

	/**
	 * Sets the min cart quantity of this commerce inventory.
	 *
	 * @param minCartQuantity the min cart quantity of this commerce inventory
	 */
	public void setMinCartQuantity(int minCartQuantity);

	/**
	 * Returns the max cart quantity of this commerce inventory.
	 *
	 * @return the max cart quantity of this commerce inventory
	 */
	public int getMaxCartQuantity();

	/**
	 * Sets the max cart quantity of this commerce inventory.
	 *
	 * @param maxCartQuantity the max cart quantity of this commerce inventory
	 */
	public void setMaxCartQuantity(int maxCartQuantity);

	/**
	 * Returns the allowed cart quantities of this commerce inventory.
	 *
	 * @return the allowed cart quantities of this commerce inventory
	 */
	@AutoEscape
	public String getAllowedCartQuantities();

	/**
	 * Sets the allowed cart quantities of this commerce inventory.
	 *
	 * @param allowedCartQuantities the allowed cart quantities of this commerce inventory
	 */
	public void setAllowedCartQuantities(String allowedCartQuantities);

	/**
	 * Returns the multiple cart quantity of this commerce inventory.
	 *
	 * @return the multiple cart quantity of this commerce inventory
	 */
	public int getMultipleCartQuantity();

	/**
	 * Sets the multiple cart quantity of this commerce inventory.
	 *
	 * @param multipleCartQuantity the multiple cart quantity of this commerce inventory
	 */
	public void setMultipleCartQuantity(int multipleCartQuantity);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(CommerceInventory commerceInventory);

	@Override
	public int hashCode();

	@Override
	public CacheModel<CommerceInventory> toCacheModel();

	@Override
	public CommerceInventory toEscapedModel();

	@Override
	public CommerceInventory toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}