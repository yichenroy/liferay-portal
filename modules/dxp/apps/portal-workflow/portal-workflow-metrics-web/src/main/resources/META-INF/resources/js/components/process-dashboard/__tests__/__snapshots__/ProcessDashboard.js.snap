// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render component with completed tab activated 1`] = `
<MockRouter
  client={
    Object {
      "delete": [Function],
      "get": [Function],
      "post": [Function],
      "put": [Function],
    }
  }
  initialPath="/dashboard/35315"
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "match": Object {
            "params": Object {
              "page": 1,
              "search": undefined,
              "sort": undefined,
            },
          },
          "pathname": "/dashboard/35315",
          "search": "?backPath=%2F",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "match": Object {
                "params": Object {
                  "page": 1,
                  "search": undefined,
                  "sort": undefined,
                },
              },
              "pathname": "/dashboard/35315",
              "search": "?backPath=%2F",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "match": Object {
              "params": Object {
                "page": 1,
                "search": undefined,
                "sort": undefined,
              },
            },
            "pathname": "/dashboard/35315",
            "search": "?backPath=%2F",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ProcessDashboard
        processId={35315}
      >
        <div
          className="workflow-process-dashboard"
        >
          <withRouter(Tabs)
            tabs={
              Array [
                Object {
                  "key": "pending",
                  "name": "pending",
                  "params": Object {
                    "page": 1,
                    "pageSize": 20,
                    "processId": 35315,
                    "sort": "overdueInstanceCount%3Aasc",
                  },
                  "path": "/dashboard/:processId/pending/:pageSize/:page/:sort",
                  "query": undefined,
                },
                Object {
                  "key": "completed",
                  "name": "completed",
                  "params": Object {
                    "processId": 35315,
                  },
                  "path": "/dashboard/:processId/completed",
                  "query": undefined,
                },
              ]
            }
          >
            <Route>
              <Tabs
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "match": Object {
                          "params": Object {
                            "page": 1,
                            "search": undefined,
                            "sort": undefined,
                          },
                        },
                        "pathname": "/dashboard/35315",
                        "search": "?backPath=%2F",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "match": Object {
                        "params": Object {
                          "page": 1,
                          "search": undefined,
                          "sort": undefined,
                        },
                      },
                      "pathname": "/dashboard/35315",
                      "search": "?backPath=%2F",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "match": Object {
                      "params": Object {
                        "page": 1,
                        "search": undefined,
                        "sort": undefined,
                      },
                    },
                    "pathname": "/dashboard/35315",
                    "search": "?backPath=%2F",
                  }
                }
                match={
                  Object {
                    "isExact": false,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  }
                }
                tabs={
                  Array [
                    Object {
                      "key": "pending",
                      "name": "pending",
                      "params": Object {
                        "page": 1,
                        "pageSize": 20,
                        "processId": 35315,
                        "sort": "overdueInstanceCount%3Aasc",
                      },
                      "path": "/dashboard/:processId/pending/:pageSize/:page/:sort",
                      "query": undefined,
                    },
                    Object {
                      "key": "completed",
                      "name": "completed",
                      "params": Object {
                        "processId": 35315,
                      },
                      "path": "/dashboard/:processId/completed",
                      "query": undefined,
                    },
                  ]
                }
              >
                <nav
                  className="navbar navbar-collapse-absolute navbar-expand-md navbar-underline navigation-bar navigation-bar-secondary"
                >
                  <div
                    className="container-fluid container-fluid-max-xl"
                  >
                    <button
                      aria-expanded={false}
                      aria-label="toggle-navigation"
                      className="collapsed navbar-toggler navbar-toggler-link"
                      onClick={[Function]}
                    >
                      <Icon
                        iconName="caret-bottom"
                      >
                        <svg
                          className="lexicon-icon lexicon-icon-caret-bottom"
                          focusable="false"
                          role="presentation"
                        >
                          <use
                            href="http://localhost:8080/o/admin-theme/images/lexicon/icons.svg#caret-bottom"
                          />
                        </svg>
                      </Icon>
                    </button>
                    <div
                      className="collapse navbar-collapse "
                    >
                      <div
                        className="container-fluid container-fluid-max-xl"
                      >
                        <ul
                          className="navbar-nav"
                        >
                          <li
                            className="nav-item"
                            key="0"
                            onClick={[Function]}
                          >
                            <TabItem
                              active={false}
                              key="pending"
                              name="pending"
                              params={
                                Object {
                                  "page": 1,
                                  "pageSize": 20,
                                  "processId": 35315,
                                  "sort": "overdueInstanceCount%3Aasc",
                                }
                              }
                              path="/dashboard/:processId/pending/:pageSize/:page/:sort"
                              query="?backPath=%2F"
                            >
                              <Link
                                aria-label=""
                                className=" nav-link"
                                replace={false}
                                to={
                                  Object {
                                    "pathname": "/dashboard/35315/pending/20/1/overdueInstanceCount%253Aasc",
                                    "search": "?backPath=%2F",
                                  }
                                }
                              >
                                <a
                                  aria-label=""
                                  className=" nav-link"
                                  href="/dashboard/35315/pending/20/1/overdueInstanceCount%253Aasc?backPath=%2F"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="navbar-text-truncate"
                                  >
                                    pending
                                  </span>
                                </a>
                              </Link>
                            </TabItem>
                          </li>
                          <li
                            className="nav-item"
                            key="1"
                            onClick={[Function]}
                          >
                            <TabItem
                              active={false}
                              key="completed"
                              name="completed"
                              params={
                                Object {
                                  "processId": 35315,
                                }
                              }
                              path="/dashboard/:processId/completed"
                              query="?backPath=%2F"
                            >
                              <Link
                                aria-label=""
                                className=" nav-link"
                                replace={false}
                                to={
                                  Object {
                                    "pathname": "/dashboard/35315/completed",
                                    "search": "?backPath=%2F",
                                  }
                                }
                              >
                                <a
                                  aria-label=""
                                  className=" nav-link"
                                  href="/dashboard/35315/completed?backPath=%2F"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="navbar-text-truncate"
                                  >
                                    completed
                                  </span>
                                </a>
                              </Link>
                            </TabItem>
                          </li>
                        </ul>
                      </div>
                    </div>
                  </div>
                </nav>
              </Tabs>
            </Route>
          </withRouter(Tabs)>
          <HashRouter>
            <Router
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <Switch />
            </Router>
          </HashRouter>
        </div>
      </ProcessDashboard>
    </Router>
  </MemoryRouter>
</MockRouter>
`;

exports[`Should render component with default tab activated 1`] = `
<MockRouter
  client={
    Object {
      "delete": [Function],
      "get": [Function],
      "post": [Function],
      "put": [Function],
    }
  }
  initialPath="/dashboard/35315"
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "match": Object {
            "params": Object {
              "page": 1,
              "search": undefined,
              "sort": undefined,
            },
          },
          "pathname": "/dashboard/35315",
          "search": "?backPath=%2F",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "match": Object {
                "params": Object {
                  "page": 1,
                  "search": undefined,
                  "sort": undefined,
                },
              },
              "pathname": "/dashboard/35315",
              "search": "?backPath=%2F",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "match": Object {
              "params": Object {
                "page": 1,
                "search": undefined,
                "sort": undefined,
              },
            },
            "pathname": "/dashboard/35315",
            "search": "?backPath=%2F",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ProcessDashboard
        processId={35315}
      >
        <div
          className="workflow-process-dashboard"
        >
          <withRouter(Tabs)
            tabs={
              Array [
                Object {
                  "key": "pending",
                  "name": "pending",
                  "params": Object {
                    "page": 1,
                    "pageSize": 20,
                    "processId": 35315,
                    "sort": "overdueInstanceCount%3Aasc",
                  },
                  "path": "/dashboard/:processId/pending/:pageSize/:page/:sort",
                  "query": undefined,
                },
                Object {
                  "key": "completed",
                  "name": "completed",
                  "params": Object {
                    "processId": 35315,
                  },
                  "path": "/dashboard/:processId/completed",
                  "query": undefined,
                },
              ]
            }
          >
            <Route>
              <Tabs
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "match": Object {
                          "params": Object {
                            "page": 1,
                            "search": undefined,
                            "sort": undefined,
                          },
                        },
                        "pathname": "/dashboard/35315",
                        "search": "?backPath=%2F",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "match": Object {
                        "params": Object {
                          "page": 1,
                          "search": undefined,
                          "sort": undefined,
                        },
                      },
                      "pathname": "/dashboard/35315",
                      "search": "?backPath=%2F",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "match": Object {
                      "params": Object {
                        "page": 1,
                        "search": undefined,
                        "sort": undefined,
                      },
                    },
                    "pathname": "/dashboard/35315",
                    "search": "?backPath=%2F",
                  }
                }
                match={
                  Object {
                    "isExact": false,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  }
                }
                tabs={
                  Array [
                    Object {
                      "key": "pending",
                      "name": "pending",
                      "params": Object {
                        "page": 1,
                        "pageSize": 20,
                        "processId": 35315,
                        "sort": "overdueInstanceCount%3Aasc",
                      },
                      "path": "/dashboard/:processId/pending/:pageSize/:page/:sort",
                      "query": undefined,
                    },
                    Object {
                      "key": "completed",
                      "name": "completed",
                      "params": Object {
                        "processId": 35315,
                      },
                      "path": "/dashboard/:processId/completed",
                      "query": undefined,
                    },
                  ]
                }
              >
                <nav
                  className="navbar navbar-collapse-absolute navbar-expand-md navbar-underline navigation-bar navigation-bar-secondary"
                >
                  <div
                    className="container-fluid container-fluid-max-xl"
                  >
                    <button
                      aria-expanded={false}
                      aria-label="toggle-navigation"
                      className="collapsed navbar-toggler navbar-toggler-link"
                      onClick={[Function]}
                    >
                      <Icon
                        iconName="caret-bottom"
                      >
                        <svg
                          className="lexicon-icon lexicon-icon-caret-bottom"
                          focusable="false"
                          role="presentation"
                        >
                          <use
                            href="http://localhost:8080/o/admin-theme/images/lexicon/icons.svg#caret-bottom"
                          />
                        </svg>
                      </Icon>
                    </button>
                    <div
                      className="collapse navbar-collapse "
                    >
                      <div
                        className="container-fluid container-fluid-max-xl"
                      >
                        <ul
                          className="navbar-nav"
                        >
                          <li
                            className="nav-item"
                            key="0"
                            onClick={[Function]}
                          >
                            <TabItem
                              active={false}
                              key="pending"
                              name="pending"
                              params={
                                Object {
                                  "page": 1,
                                  "pageSize": 20,
                                  "processId": 35315,
                                  "sort": "overdueInstanceCount%3Aasc",
                                }
                              }
                              path="/dashboard/:processId/pending/:pageSize/:page/:sort"
                              query="?backPath=%2F"
                            >
                              <Link
                                aria-label=""
                                className=" nav-link"
                                replace={false}
                                to={
                                  Object {
                                    "pathname": "/dashboard/35315/pending/20/1/overdueInstanceCount%253Aasc",
                                    "search": "?backPath=%2F",
                                  }
                                }
                              >
                                <a
                                  aria-label=""
                                  className=" nav-link"
                                  href="/dashboard/35315/pending/20/1/overdueInstanceCount%253Aasc?backPath=%2F"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="navbar-text-truncate"
                                  >
                                    pending
                                  </span>
                                </a>
                              </Link>
                            </TabItem>
                          </li>
                          <li
                            className="nav-item"
                            key="1"
                            onClick={[Function]}
                          >
                            <TabItem
                              active={false}
                              key="completed"
                              name="completed"
                              params={
                                Object {
                                  "processId": 35315,
                                }
                              }
                              path="/dashboard/:processId/completed"
                              query="?backPath=%2F"
                            >
                              <Link
                                aria-label=""
                                className=" nav-link"
                                replace={false}
                                to={
                                  Object {
                                    "pathname": "/dashboard/35315/completed",
                                    "search": "?backPath=%2F",
                                  }
                                }
                              >
                                <a
                                  aria-label=""
                                  className=" nav-link"
                                  href="/dashboard/35315/completed?backPath=%2F"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="navbar-text-truncate"
                                  >
                                    completed
                                  </span>
                                </a>
                              </Link>
                            </TabItem>
                          </li>
                        </ul>
                      </div>
                    </div>
                  </div>
                </nav>
              </Tabs>
            </Route>
          </withRouter(Tabs)>
          <HashRouter>
            <Router
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <Switch />
            </Router>
          </HashRouter>
        </div>
      </ProcessDashboard>
    </Router>
  </MemoryRouter>
</MockRouter>
`;

exports[`Should render component with failure state 1`] = `
<MockRouter
  client={
    Object {
      "delete": [Function],
      "get": [Function],
      "post": [Function],
      "put": [Function],
    }
  }
  initialPath="/dashboard/35315/completed"
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "match": Object {
            "params": Object {
              "page": 1,
              "search": undefined,
              "sort": undefined,
            },
          },
          "pathname": "/dashboard/35315/completed",
          "search": "?backPath=%2F",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "match": Object {
                "params": Object {
                  "page": 1,
                  "search": undefined,
                  "sort": undefined,
                },
              },
              "pathname": "/dashboard/35315/completed",
              "search": "?backPath=%2F",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "match": Object {
              "params": Object {
                "page": 1,
                "search": undefined,
                "sort": undefined,
              },
            },
            "pathname": "/dashboard/35315/completed",
            "search": "?backPath=%2F",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ProcessDashboard
        processId={35315}
      >
        <div
          className="workflow-process-dashboard"
        >
          <withRouter(Tabs)
            tabs={
              Array [
                Object {
                  "key": "pending",
                  "name": "pending",
                  "params": Object {
                    "page": 1,
                    "pageSize": 20,
                    "processId": 35315,
                    "sort": "overdueInstanceCount%3Aasc",
                  },
                  "path": "/dashboard/:processId/pending/:pageSize/:page/:sort",
                  "query": undefined,
                },
                Object {
                  "key": "completed",
                  "name": "completed",
                  "params": Object {
                    "processId": 35315,
                  },
                  "path": "/dashboard/:processId/completed",
                  "query": undefined,
                },
              ]
            }
          >
            <Route>
              <Tabs
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "match": Object {
                          "params": Object {
                            "page": 1,
                            "search": undefined,
                            "sort": undefined,
                          },
                        },
                        "pathname": "/dashboard/35315/completed",
                        "search": "?backPath=%2F",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "match": Object {
                        "params": Object {
                          "page": 1,
                          "search": undefined,
                          "sort": undefined,
                        },
                      },
                      "pathname": "/dashboard/35315/completed",
                      "search": "?backPath=%2F",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "match": Object {
                      "params": Object {
                        "page": 1,
                        "search": undefined,
                        "sort": undefined,
                      },
                    },
                    "pathname": "/dashboard/35315/completed",
                    "search": "?backPath=%2F",
                  }
                }
                match={
                  Object {
                    "isExact": false,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  }
                }
                tabs={
                  Array [
                    Object {
                      "key": "pending",
                      "name": "pending",
                      "params": Object {
                        "page": 1,
                        "pageSize": 20,
                        "processId": 35315,
                        "sort": "overdueInstanceCount%3Aasc",
                      },
                      "path": "/dashboard/:processId/pending/:pageSize/:page/:sort",
                      "query": undefined,
                    },
                    Object {
                      "key": "completed",
                      "name": "completed",
                      "params": Object {
                        "processId": 35315,
                      },
                      "path": "/dashboard/:processId/completed",
                      "query": undefined,
                    },
                  ]
                }
              >
                <nav
                  className="navbar navbar-collapse-absolute navbar-expand-md navbar-underline navigation-bar navigation-bar-secondary"
                >
                  <div
                    className="container-fluid container-fluid-max-xl"
                  >
                    <button
                      aria-expanded={false}
                      aria-label="toggle-navigation"
                      className="collapsed navbar-toggler navbar-toggler-link"
                      onClick={[Function]}
                    >
                      completed
                      <Icon
                        iconName="caret-bottom"
                      >
                        <svg
                          className="lexicon-icon lexicon-icon-caret-bottom"
                          focusable="false"
                          role="presentation"
                        >
                          <use
                            href="http://localhost:8080/o/admin-theme/images/lexicon/icons.svg#caret-bottom"
                          />
                        </svg>
                      </Icon>
                    </button>
                    <div
                      className="collapse navbar-collapse "
                    >
                      <div
                        className="container-fluid container-fluid-max-xl"
                      >
                        <ul
                          className="navbar-nav"
                        >
                          <li
                            className="nav-item"
                            key="0"
                            onClick={[Function]}
                          >
                            <TabItem
                              active={false}
                              key="pending"
                              name="pending"
                              params={
                                Object {
                                  "page": 1,
                                  "pageSize": 20,
                                  "processId": 35315,
                                  "sort": "overdueInstanceCount%3Aasc",
                                }
                              }
                              path="/dashboard/:processId/pending/:pageSize/:page/:sort"
                              query="?backPath=%2F"
                            >
                              <Link
                                aria-label=""
                                className=" nav-link"
                                replace={false}
                                to={
                                  Object {
                                    "pathname": "/dashboard/35315/pending/20/1/overdueInstanceCount%253Aasc",
                                    "search": "?backPath=%2F",
                                  }
                                }
                              >
                                <a
                                  aria-label=""
                                  className=" nav-link"
                                  href="/dashboard/35315/pending/20/1/overdueInstanceCount%253Aasc?backPath=%2F"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="navbar-text-truncate"
                                  >
                                    pending
                                  </span>
                                </a>
                              </Link>
                            </TabItem>
                          </li>
                          <li
                            className="nav-item"
                            key="1"
                            onClick={[Function]}
                          >
                            <TabItem
                              active={true}
                              key="completed"
                              name="completed"
                              params={
                                Object {
                                  "processId": 35315,
                                }
                              }
                              path="/dashboard/:processId/completed"
                              query="?backPath=%2F"
                            >
                              <Link
                                aria-label="current-page"
                                className="active nav-link"
                                replace={false}
                                to={
                                  Object {
                                    "pathname": "/dashboard/35315/completed",
                                    "search": "?backPath=%2F",
                                  }
                                }
                              >
                                <a
                                  aria-label="current-page"
                                  className="active nav-link"
                                  href="/dashboard/35315/completed?backPath=%2F"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="navbar-text-truncate"
                                  >
                                    completed
                                  </span>
                                </a>
                              </Link>
                            </TabItem>
                          </li>
                        </ul>
                      </div>
                    </div>
                  </div>
                </nav>
              </Tabs>
            </Route>
          </withRouter(Tabs)>
          <HashRouter>
            <Router
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <Switch />
            </Router>
          </HashRouter>
        </div>
      </ProcessDashboard>
    </Router>
  </MemoryRouter>
</MockRouter>
`;

exports[`Should render dashboard route children 1`] = `
<MockRouter
  client={
    Object {
      "delete": [Function],
      "get": [Function],
      "post": [Function],
      "put": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "match": Object {
            "params": Object {
              "page": 1,
              "search": undefined,
              "sort": undefined,
            },
          },
          "pathname": "/processes/1/10/title%3Aasc",
          "search": "?backPath=%2F",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "match": Object {
                "params": Object {
                  "page": 1,
                  "search": undefined,
                  "sort": undefined,
                },
              },
              "pathname": "/processes/1/10/title%3Aasc",
              "search": "?backPath=%2F",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "match": Object {
              "params": Object {
                "page": 1,
                "search": undefined,
                "sort": undefined,
              },
            },
            "pathname": "/processes/1/10/title%3Aasc",
            "search": "?backPath=%2F",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <PendingItemsCard
        key="0"
        processId={35315}
      >
        <ProcessItemsCard
          panelDescription="Pending workflow items are counted and categorized by their SLA status."
          panelTitle="Pending Items"
          processId={35315}
        >
          <Panel>
            <div
              className="container-fluid-1280 mt-4"
            >
              <div
                className="panel panel-secondary"
              >
                <Header
                  elementClasses="dashboard-panel-header"
                >
                  <div
                    className="panel-header dashboard-panel-header"
                  >
                    <div>
                      <div>
                        <span
                          className="mr-3"
                        >
                          Pending Items
                        </span>
                        <Tooltip
                          message="Pending workflow items are counted and categorized by their SLA status."
                          position="right"
                          width="288"
                        >
                          <span
                            className="workflow-tooltip"
                            onMouseLeave={[Function]}
                          >
                            <span
                              className="tooltip-trigger"
                              onMouseOver={[Function]}
                            >
                              <Icon
                                iconName="question-circle-full"
                              >
                                <svg
                                  className="lexicon-icon lexicon-icon-question-circle-full"
                                  focusable="false"
                                  role="presentation"
                                >
                                  <use
                                    href="http://localhost:8080/o/admin-theme/images/lexicon/icons.svg#question-circle-full"
                                  />
                                </svg>
                              </Icon>
                            </span>
                          </span>
                        </Tooltip>
                      </div>
                    </div>
                  </div>
                </Header>
                <Body>
                  <div
                    className="panel-body"
                  >
                    <div
                      className="pb-6 pt-5"
                    >
                      <LoadingState>
                        <span
                          aria-hidden="true"
                          className="loading-animation"
                        />
                      </LoadingState>
                    </div>
                  </div>
                </Body>
              </div>
            </div>
          </Panel>
        </ProcessItemsCard>
      </PendingItemsCard>
      <WorkloadByStepCard
        key="1"
        processId={35315}
      >
        <Panel
          className="container-fluid-1280 mt-4"
        >
          <div
            className="container-fluid-1280 mt-4"
          >
            <div
              className="panel panel-secondary"
            >
              <Header
                elementClasses="dashboard-panel-header"
              >
                <div
                  className="panel-header dashboard-panel-header"
                >
                  <div>
                    <div>
                      <span
                        className="mr-3"
                      >
                        Workload by Step
                      </span>
                      <Tooltip
                        message="Workload by step shows the number of items in each step, by SLA deadline. The total number of pending items may not add up since multiple tasks occur simultaneously."
                        position="right"
                        width="288"
                      >
                        <span
                          className="workflow-tooltip"
                          onMouseLeave={[Function]}
                        >
                          <span
                            className="tooltip-trigger"
                            onMouseOver={[Function]}
                          >
                            <Icon
                              iconName="question-circle-full"
                            >
                              <svg
                                className="lexicon-icon lexicon-icon-question-circle-full"
                                focusable="false"
                                role="presentation"
                              >
                                <use
                                  href="http://localhost:8080/o/admin-theme/images/lexicon/icons.svg#question-circle-full"
                                />
                              </svg>
                            </Icon>
                          </span>
                        </span>
                      </Tooltip>
                    </div>
                  </div>
                </div>
              </Header>
              <Body>
                <div
                  className="panel-body"
                >
                  <ListView
                    className="border-0"
                    emptyActionButton={<ReloadButton />}
                    emptyMessageClassName="small"
                    emptyMessageText="There are no pending items at the moment."
                    errorMessageText={null}
                    fetching={false}
                    hideAnimation={true}
                    loading={true}
                  >
                    <div>
                      <div
                        className="border-0 pb-6 pt-6 sheet"
                      >
                        <LoadingState>
                          <span
                            aria-hidden="true"
                            className="loading-animation"
                          />
                        </LoadingState>
                      </div>
                    </div>
                  </ListView>
                </div>
              </Body>
            </div>
          </div>
        </Panel>
      </WorkloadByStepCard>
    </Router>
  </MemoryRouter>
</MockRouter>
`;
