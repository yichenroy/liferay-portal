definition {

	macro _deleteAllQuestions {
		while (IsElementPresent(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS")) {
			LexiconEntry.gotoEllipsisMenuItemNoError(menuItem = "Move to Recycle Bin");

			Alert.viewSuccessMessage();
		}
	}

	macro addQuestionByAPI {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Message Boards");

		MessageboardsCategory.gotoPG(categoryName = "${categoryName}");

		Pause(locator = "3000");

		var categoryId = JSONMBMessage.getCategoryId();

		var rightCategoryId = StringUtil.extractLast("${categoryId}", "CategoryId=");

		JSONQuestionsAPI._addQuestion(
			bodyField = "${bodyField}",
			categoryId = "${rightCategoryId}",
			tagField = "${tagField}",
			titleField = "${titleField}");
	}

	macro addQuestionWithoutTagByAPI {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Message Boards");

		MessageboardsCategory.gotoPG(categoryName = "${categoryName}");

		if (isSet(subCategoryName)) {
			MessageboardsCategory.gotoPG(categoryName = "${subCategoryName}");
		}

		Pause(locator = "3000");

		var categoryId = JSONMBMessage.getCategoryId();

		var rightCategoryId = StringUtil.extractLast("${categoryId}", "CategoryId=");

		JSONQuestionsAPI._addQuestionWithoutTag(
			bodyField = "${bodyField}",
			categoryId = "${rightCategoryId}",
			titleField = "${titleField}");
	}

	macro addTags {
		Type(
			locator1 = "Questions#ASK_QUESTION_TAG_FIELD",
			value1 = "${tagLocator}");

		KeyPress(
			locator1 = "Questions#ASK_QUESTION_TAG_FIELD",
			value1 = "\RETURN");
	}

	macro answerQuestion {
		CKEditor.addContent(content = "${contentField}");

		Click(locator1 = "Questions#ASK_QUESTION_POST_YOUR_QUESTION_BUTTON");

		AssertVisible(
			key_answerBodyContent = "${contentField}",
			locator1 = "Questions#ANSWER_BODY");
	}

	macro askQuestionFillingTheMandatoryFields {
		Click(locator1 = "Questions#ASK_QUESTION_BUTTON");

		if (isSet(anonymousUser)) {
			Type.typePause(
				locator1 = "TextInput#EMAIL_ADDRESS",
				value1 = "${userEmailAddress}");

			Type.typePause(
				locator1 = "TextInput#PASSWORD",
				value1 = "${password}");

			Click(locator1 = "Button#SIGN_IN");
		}

		Type(
			locator1 = "Questions#ASK_QUESTION_TITLE_FIELD",
			value1 = "${titleField}");

		CKEditor.addContent(content = "${contentField}");

		if (isSet(imageFileName)) {
			var key_imageFileName = "${imageFileName}";

			ItemSelector.gotoItemSelectorViaCKEditor();

			SelectFrame(locator1 = "ItemSelector#ITEM_SELECTOR_IFRAME");

			if (isSet(depotName)) {
				AssertClick(
					key_breadcrumbName = "Sites and Libraries",
					locator1 = "Breadcrumb#BREADCRUMB_ENTRY",
					value1 = "Sites and Libraries");

				AssertClick(
					key_groupTab = "Asset Library",
					locator1 = "ItemSelector#NAVIGATION_GROUP_TAB",
					value1 = "Asset Library");

				LexiconCard.clickCard(card = "${depotName}");
			}

			Click(locator1 = "ItemSelector#SELECT_FILE_IMAGE_CARD");
		}
	}

	macro changeDisplayStyle {
		Click(locator1 = "Questions#CREATE_QUESTIONS_DISPLAY_STYLE_SELECTOR");

		MenuItem.click(menuItem = StringUtil.upperCaseFirstLetter("${displayStyle}"));
	}

	macro changePagination {
		Click(locator1 = "Questions#ITEMS_PER_PAGE_SELECT");

		var key_itemsPerPage = "${itemsPerPage}";

		MenuItem.click(menuItem = "${itemsPerPage}");

		AssertTextEquals.assertPartialText(
			locator1 = "Questions#ITEMS_PER_PAGE_SELECT",
			value1 = "${itemsPerPage}");
	}

	macro changeTopic {
		if (isSet(gotoParentTopic)) {
			Click(
				key_topicName = "${gotoParentTopic}",
				locator1 = "Questions#QUESTIONS_BREADCRUMB_PARENT_TOPIC_BUTTON");
		}
		else {
			Click(
				key_topicName = "${parentTopicName}",
				locator1 = "Questions#QUESTIONS_BREADCRUMB_TOPIC_DROPDOWN_TOGGLE");

			Click(
				key_topicName = "${subTopicName}",
				locator1 = "Questions#QUESTIONS_BREADCRUMB_TOPIC_DROPDOWN_OPTION");

			AssertTextEquals(
				key_topicName = "${subTopicName}",
				locator1 = "Questions#QUESTIONS_BREADCRUMB_ACTIVE_SUBTOPIC",
				value1 = "${subTopicName}");
		}
	}

	macro clearSearchResults {
		Click(locator1 = "Questions#SEARCH_RESULTS_CLEAR_BUTTON");

		AssertElementNotPresent(locator1 = "Search#SEARCH_INFO");

		AssertElementNotPresent(locator1 = "Questions#SEARCH_RESULTS_CLEAR_BUTTON");
	}

	macro configureFilter {
		Click(locator1 = "Questions#QUESTIONS_SELECT_FILTER");

		Pause(locator1 = "1000");

		Click(
			key_filter = "${filterBy}",
			locator1 = "Questions#QUESTIONS_SELECT_FILTER_VALUE");

		Pause(locator1 = "1000");
	}

	macro configureTagsFilter {
		Click(locator1 = "Questions#QUESTIONS_TAGS_SELECT_FILTER");

		Pause(locator1 = "1000");

		Click(
			key_filter = "${filterBy}",
			locator1 = "Questions#QUESTIONS_SELECT_FILTER_VALUE");
	}

	macro createSomethingInMessageBoards {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "${menuItem}");

		Questions.fillName(nameField = "${nameField}");

		Questions.changeDisplayStyle(displayStyle = "${displayStyleOption}");

		Button.clickSave();
	}

	macro fillName {
		Click(locator1 = "Questions#CREATE_QUESTIONS_NAME_FIELD");

		Type(
			locator1 = "Questions#CREATE_QUESTIONS_NAME_FIELD",
			value1 = "${nameField}");
	}

	macro gotoCategory {
		Click(
			key_questionNameField = "${categoryName}",
			locator1 = "Questions#QUESTIONS_NAME_FIELD");

		AssertElementPresent(locator1 = "Questions#QUESTIONS_HOME_ICON");

		Pause(locator1 = "3000");

		AssertVisible(
			key_categoryTitle = "${categoryName}",
			locator1 = "Questions#QUESTIONS_CATEGORY_TITLE");
	}

	macro gotoDetails {
		Click(
			key_questionTitle = "${questionTitle}",
			locator1 = "Questions#QUESTIONS_TITLE");

		AssertTextEquals(
			key_questionTitle = "${questionTitle}",
			locator1 = "Questions#QUESTIONS_DETAILS_TITLE",
			value1 = "${questionTitle}");
	}

	macro gotoTab {
		Click(
			key_questionTabField = "${questionTabField}",
			locator1 = "Questions#QUESTIONS_LIST_TAB_FIELD");

		AssertElementPresent(
			key_questionTabField = "${questionTabField}",
			locator1 = "Questions#QUESTIONS_LIST_ACTIVE_TAB_FIELD");
	}

	macro search {
		if (isSet(searchTag)) {
			Type(
				locator1 = "Questions#SEARCH_QUESTION_FIELD",
				value1 = "${searchKey}");
		}
		else {
			Type(
				locator1 = "Questions#SEARCH_QUESTION_FIELD",
				value1 = "${searchKey}");

			if (isSet(noQuestionsResults)) {
				AssertElementPresent(
					key_emptyInfo = "There are no results.",
					locator1 = "Questions#EMPTY_STATE_MESSAGE");
			}
			else {
				AssertTextEquals(
					key_resultsInfo = '''${resultsInfo}''',
					locator1 = "Questions#SEARCH_INFO",
					value1 = "${resultsInfo}");

				AssertVisible(locator1 = "Questions#SEARCH_RESULTS_CLEAR_BUTTON");
			}
		}
	}

	macro subscribeQuestion {
		Click(locator1 = "Questions#QUESTIONS_BELL_BUTTON");
	}

	macro subscribeTopic {
		AssertClick(
			locator1 = "Button#SUBSCRIBE",
			value1 = "Subscribe");

		AssertElementPresent(locator1 = "Questions#QUESTIONS_SUBSCRIBED_BUTTON");
	}

	macro tearDown {
		while (IsElementPresent(locator1 = "Questions#QUESTIONS_LIST")) {
			Questions._deleteAllQuestions();
		}

		AssertElementNotPresent(locator1 = "Questions#QUESTIONS_LIST");
	}

	macro unSubscribeQuestion {
		Click.waitForMenuToggleJSClick(
			key_questionTitle = "${questionTitle}",
			locator1 = "Questions#QUESTIONS_ELLIPSIS_ICON");

		MenuItem.clickNoError(menuItem = "Unsubscribe");
	}

	macro unSubscribeTopic {
		LexiconCard.clickEllipsisItem(
			card = "${topicName}",
			item = "Unsubscribe");
	}

	macro viewFilterResults {
		AssertTextEquals(
			key_questionTitle = "${questionTitle}",
			locator1 = "Questions#QUESTIONS_TITLE",
			value1 = "${questionTitle}");

		AssertTextEquals(
			key_lastQuestionTitle = "${lastQuestionTitle}",
			locator1 = "Questions#QUESTIONS_TITLE_LAST",
			value1 = "${lastQuestionTitle}");
	}

	macro viewList {
		if (isSet(unlistedQuestions)) {
			for (var unlistedQuestion : list "${unlistedQuestions}") {
				AssertElementNotPresent(
					key_questionTitle = "${unlistedQuestions}",
					locator1 = "Questions#QUESTIONS_TITLE");
			}
		}

		if (isSet(listedQuestions)) {
			for (var listedQuestion : list "${listedQuestions}") {
				AssertTextEquals(
					key_questionTitle = "${listedQuestion}",
					locator1 = "Questions#QUESTIONS_TITLE",
					value1 = "${listedQuestion}");
			}
		}
	}

	macro viewNoSearchResults {
		for (var questionTitle : list "${questionsList}") {
			AssertElementNotPresent(
				key_questionTitle = "${questionTitle}",
				locator1 = "Questions#QUESTIONS_TITLE");
		}
	}

	macro viewPaginationResults {
		AssertTextEquals(
			locator1 = "Questions#PAGINATION_RESULTS",
			value1 = "${results}");
	}

	macro viewSearchResults {
		for (var questionTitle : list "${questionsList}") {
			AssertTextEquals(
				key_questionTitle = "${questionTitle}",
				locator1 = "Questions#QUESTIONS_TITLE",
				value1 = "${questionTitle}");
		}
	}

	macro viewSubscribedQuestion {
		if (isSet(subscribedQuestion)) {
			AssertTextEquals(
				key_questionTitle = "${subscribedQuestion}",
				locator1 = "Questions#QUESTIONS_TITLE",
				value1 = "${subscribedQuestion}");
		}
		else if (isSet(noSubscribedQuestion)) {
			AssertTextEquals(
				locator1 = "Questions#QUESTIONS_DEFAULT_SUBSCRIPTION_QUESTIONS",
				value1 = "There are no results.");
		}
	}

	macro viewSubscribedTopic {
		if (isSet(subscribedTopic)) {
			AssertTextEquals(
				key_subscribedTopic = "${subscribedTopic}",
				locator1 = "Questions#QUESTIONS_SUBSCRIBED_TOPIC",
				value1 = "${subscribedTopic}");
		}
		else if (isSet(noSubscribedTopic)) {
			AssertTextEquals(
				locator1 = "Questions#QUESTIONS_DEFAULT_SUBSCRIPTION_TOPICS",
				value1 = "There are no results.");
		}
	}

	macro viewTags {
		if (isSet(noTagResults)) {
			AssertTextEquals(
				locator1 = "Questions#TAGS_LIST_TAB_NO_RESULTS",
				value1 = "There are no results.");
		}
		else {
			AssertElementPresent(
				key_tagName = "${tagName}",
				locator1 = "Questions#TAGS_LIST_TAB_NAMES");
		}

		if (isSet(amountOfUsedTimes)) {
			AssertElementPresent(
				key_amountOfUsedTimes = "${amountOfUsedTimes}",
				key_tagName = "${tagName}",
				locator1 = "Questions#TAGS_LIST_TAB_USED_TIMES");
		}
	}

	macro voteQuestion {
		AssertTextEquals(
			key_votedResult = "${currentVotedCount}",
			locator1 = "Questions#VOTED_RESULT",
			value1 = "${currentVotedCount}");

		if (isSet(voteUp)) {
			Click(
				key_caretName = "caret-top",
				locator1 = "Questions#VOTE_BUTTON");

			var newVotedCount = ${currentVotedCount} + 1;

			AssertTextEquals(
				key_votedResult = "${newVotedCount}",
				locator1 = "Questions#VOTED_RESULT",
				value1 = "${newVotedCount}");
		}

		if (isSet(voteDown)) {
			Click(
				key_caretName = "caret-bottom",
				locator1 = "Questions#VOTE_BUTTON");

			var newVotedCount = ${currentVotedCount} - 1;

			AssertTextEquals(
				key_votedResult = "${newVotedCount}",
				locator1 = "Questions#VOTED_RESULT",
				value1 = "${newVotedCount}");
		}
	}

}