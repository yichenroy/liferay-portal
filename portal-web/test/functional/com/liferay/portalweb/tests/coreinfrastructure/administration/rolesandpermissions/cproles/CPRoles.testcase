@component-name = "portal-user-management-and-portal-configuration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Roles";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			Role.tearDownCP();
		}
	}

	@priority = "5"
	test AddOrganizationRole {
		property portal.acceptance = "quarantine";
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		RoleNavigator.gotoRoleType(roleType = "Organization");

		Role.add(roleTitle = "Roles Orgrole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.viewCP(
			roleTitle = "Roles Orgrole Name",
			roleType = "Organization");
	}

	@priority = "4"
	test AddRegularRole {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.add(roleTitle = "Roles Regrole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.viewCP(
			roleTitle = "Roles Regrole Name",
			roleType = "Regular");
	}

	@priority = "5"
	test AddSiteRole {
		property portal.acceptance = "roy";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		RoleNavigator.gotoRoleType(roleType = "Site");

		Role.add(roleTitle = "Roles Siterole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.viewCP(
			roleTitle = "Roles Siterole Name",
			roleType = "Site");
	}

	@description = "This is a use case for LPS-105001 and LPS-104999."
	@priority = "3"
	test AssertRoleTitleNotRequired {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.viewCP(
			roleKey = "Administrator",
			toolTip = "A title is a localizable human-readable name for a role. If not provided, the key will be displayed by default.");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.add(roleKey = "Role Key Value");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.viewCP(roleKey = "Role Key Value");
	}

	@priority = "4"
	test AssignExistingSegmentToRegularRole {
		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "People",
			panel = "Site Administration",
			portlet = "Segments");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Email Address");

		Segmentation.fillTitle(titleField = "RoleSegment Test");

		Segmentation.changeCriterionInputEmailAddress(criterionInputOption = "Contains");

		Segmentation.fillProperty(PropertyField = "liferay");

		Button.clickSave();

		Alert.viewSuccessMessage();

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.add(roleTitle = "Roles Regrole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		RoleNavigator.gotoAssignees(roleTitle = "Roles Regrole Name");

		RoleNavigator.gotoAssigneeType(assigneeType = "Segments");

		Role.addAssignees(assigneeName = "RoleSegment Test");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.viewAssignee(
			assigneeName = "RoleSegment Test",
			assigneeType = "Segments",
			roleTitle = "Roles Regrole Name");
	}

	@priority = "4"
	test AssignNewSegmentToRegularRole {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.add(roleTitle = "Roles Regrole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		RoleNavigator.gotoAssignees(roleTitle = "Roles Regrole Name");

		RoleNavigator.gotoAssigneeType(assigneeType = "Segments");

		LexiconEntry.gotoAdd();

		SelectFrame(locator1 = "IFrame#SELECT_ASSIGNEES");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Email Address");

		Segmentation.fillTitle(titleField = "New RoleSegment Test");

		Segmentation.changeCriterionInputEmailAddress(criterionInputOption = "Contains");

		Segmentation.fillProperty(PropertyField = "liferay");

		Button.clickSave();

		SelectFrame(locator1 = "IFrame#SELECT_ASSIGNEES");

		Search.searchCP(searchTerm = "New RoleSegment Test");

		var key_assigneeName = "New RoleSegment Test";

		Check(locator1 = "RolesAssignMembers#ADD_ASSIGNEE_TABLE_CHECKBOX");

		SelectFrameTop(value1 = "relative=top");

		Button.clickAdd();

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.viewAssignee(
			assigneeName = "New RoleSegment Test",
			assigneeType = "Segments",
			roleTitle = "Roles Regrole Name");
	}

	@description = "This is a use case for LPS-109572."
	@priority = "5"
	test AssignNewUserToRegularRole {
		property portal.acceptance = "quarantine";

		JSONRole.addRegularRole(
			roleKey = "Regular Role",
			roleTitle = "Regular Role");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		JSONRole.assignRoleToUser(
			roleTitle = "Regular Role",
			userEmailAddress = "userea@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.viewAssignee(
			assigneeName = "userfn userln",
			assigneeType = "Users",
			roleTitle = "Regular Role");
	}

	@priority = "5"
	test DeleteRegularRole {
		property app.server.types = "jboss,tcserver,tomcat,weblogic,websphere,wildfly";
		property database.types = "db2,hypersonic,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property environment.acceptance = "true";
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.add(roleTitle = "Roles Regrole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.deleteCP(roleTitle = "Roles Regrole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.viewDefaultCP(roleTitle = "Roles Regrole Name");
	}

	@priority = "4"
	test RemoveSegmentFromRegularRole {
		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "People",
			panel = "Site Administration",
			portlet = "Segments");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Email Address");

		Segmentation.fillTitle(titleField = "Role Assignee Test");

		Segmentation.changeCriterionInputEmailAddress(criterionInputOption = "Contains");

		Segmentation.fillProperty(PropertyField = "liferay");

		Button.clickSave();

		Alert.viewSuccessMessage();

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.add(roleTitle = "Remove Regrole Assignee");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		RoleNavigator.gotoAssignees(roleTitle = "Remove Regrole Assignee");

		RoleNavigator.gotoAssigneeType(assigneeType = "Segments");

		Role.addAssignees(assigneeName = "Role Assignee Test");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Role.removeAssignee(
			assigneeName = "Role Assignee Test",
			assigneeType = "Segments",
			roleTitle = "Remove Regrole Assignee");
	}

}