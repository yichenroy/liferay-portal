@component-name = "portal-content-dashboard"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Dashboard";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		Navigator.openURL();

		for (var count : list "1,2,3,4,5") {
			JSONWebcontent.addWebContent(
				content = "WC Content ${count}",
				groupName = "Test Site Name",
				title = "WC Title ${count}");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		for (var count : list "1,2,3,4,5") {
			JSONWebcontent.deleteWebContent(
				groupName = "Test Site Name",
				title = "WC Title ${count}");
		}

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Validate if the user can filter by title"
	@priority = "5"
	test ContentDashboardFilterByTitle {
		ApplicationsMenu.gotoPortlet(
			category = "Content",
			panel = "Applications",
			portlet = "Content Dashboard");

		Pause(locator1 = "3000");

		ContentDashboard.filterByTitle();

		AssertTextPresent(
			locator1 = "ContentDashboard#FIRST_ELEMENT_LISTED",
			value1 = "WC Title 5");
	}

	@description = "Validate if the user can filter by title"
	@priority = "5"
	test ContentDashboardViewInfoPanel {
		ApplicationsMenu.gotoPortlet(
			category = "Content",
			panel = "Applications",
			portlet = "Content Dashboard");

		Pause(locator1 = "3000");

		ContentDashboard.openInfoPanelByDropdownMenu();

		AssertTextPresent(
			locator1 = "ContentDashboard#INFO_PANEL_TITLE",
			value1 = "Content Info");
	}

}