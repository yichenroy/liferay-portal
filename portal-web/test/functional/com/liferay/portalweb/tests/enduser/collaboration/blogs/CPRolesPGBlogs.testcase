@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "roy";
	property testray.component.names = "Roles";
	property testray.main.component.name = "Blogs";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			JSONUser.tearDownNonAdminUsers();

			Role.tearDownCP();

			Organization.tearDownCP();

			Site.tearDownCP();

			BlogsEntry.tearDownCP();

			Page.tearDownCP();
		}
	}

	@priority = "5"
	test AddBlogsEntryNoGuestRole {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Blogs Page");

		Navigator.gotoPage(pageName = "Blogs Page");

		Portlet.addPG(
			pageName = "Blogs Page",
			portletName = "Blogs");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewNoAddPermissions();
	}

	@priority = "5"
	test AddBlogsEntryOrgRole {
		Permissions.setUpOrgRoleLoginUserPG(
			orgName = "Organization Name",
			orgType = "Organization",
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Roles Orgrole Name",
			roleType = "Organization",
			siteName = "Organization Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		BlogsEntry.viewNoAddPermissions();

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleTitle = "Roles Orgrole Name",
			roleType = "Organization",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleTitle = "Roles Orgrole Name",
			roleType = "Organization",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test AddBlogsEntryOrgRoleInline {
		Permissions.setUpOrgRoleLoginUserPG(
			orgName = "Organization Name",
			orgType = "Organization",
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Roles Orgrole Name",
			roleType = "Organization",
			siteName = "Organization Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Blogs");

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.definePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_ADD_ENTRY_CHECKBOX",
			roleTitle = "Roles Orgrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Blogs");

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.removePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_ADD_ENTRY_CHECKBOX",
			roleTitle = "Roles Orgrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "5"
	test AddBlogsEntryRegRole {
		property portal.acceptance = "true";

		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewNoAddPermissions();

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleTitle = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleTitle = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test AddBlogsEntryRegRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Blogs");

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.definePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_ADD_ENTRY_CHECKBOX",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Blogs");

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.removePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_ADD_ENTRY_CHECKBOX",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "5"
	test AddBlogsEntrySiteRole {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		Permissions.setUpSiteRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Roles Siterole Name",
			siteName = "Site Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.viewNoAddPermissions();

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleTitle = "Roles Siterole Name",
			roleType = "Site",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleTitle = "Roles Siterole Name",
			roleType = "Site",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test AddBlogsEntrySiteRoleInline {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		Permissions.setUpSiteRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Roles Siterole Name",
			siteName = "Site Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Blogs");

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.definePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_ADD_ENTRY_CHECKBOX",
			roleTitle = "Roles Siterole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Blogs");

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.removePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_ADD_ENTRY_CHECKBOX",
			roleTitle = "Roles Siterole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test AddBlogsEntrySiteTeamRoleInline {
		Permissions.setUpSiteTeamRoleLoginUserPG(
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			siteName = "Site Name",
			teamDescription = "Site Team Description",
			teamName = "Site Team Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Blogs");

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Team.definePermissionPG(
			permissionDefinitionKey = "_ACTION_ADD_ENTRY",
			teamName = "Site Team Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Blogs");

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Team.removePermissionPG(
			permissionDefinitionKey = "_ACTION_ADD_ENTRY",
			teamName = "Site Team Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test DeleteBlogsEntryNoGuestRole {
		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Blogs Page");

		Navigator.gotoPage(pageName = "Blogs Page");

		Portlet.addPG(
			pageName = "Blogs Page",
			portletName = "Blogs");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");
	}

	@priority = "5"
	test DeleteBlogsEntryOrgRoleDefaultPermission {
		property portal.acceptance = "true";

		Permissions.setUpOrgRoleLoginUserPG(
			orgName = "Organization Name",
			orgType = "Organization",
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Roles Orgrole Name",
			roleType = "Organization",
			siteName = "Organization Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Organization Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "5"
	test DeleteBlogsEntryOrgRoleDefinePermission {
		property portal.acceptance = "true";

		Permissions.setUpOrgRoleLoginUserPG(
			orgName = "Organization Name",
			orgType = "Organization",
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Roles Orgrole Name",
			roleType = "Organization",
			siteName = "Organization Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Organization Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "DELETE",
			resourceName = "com.liferay.blogs.model.BlogsEntry",
			roleTitle = "Roles Orgrole Name");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Permissions.removePermissionViaAPI(
			resourceAction = "DELETE",
			resourceName = "com.liferay.blogs.model.BlogsEntry",
			roleTitle = "Roles Orgrole Name");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Organization Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test DeleteBlogsEntryOrgRoleInline {
		Permissions.setUpOrgRoleLoginUserPG(
			orgName = "Organization Name",
			orgType = "Organization",
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Roles Orgrole Name",
			roleType = "Organization",
			siteName = "Organization Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Organization Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleTitle = "Roles Orgrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Organization Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleTitle = "Roles Orgrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Organization Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test DeleteBlogsEntryOwnerRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_ENTRY",
			resourceName = "com.liferay.blogs",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleTitle = "Owner");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleTitle = "Owner");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");
	}

	@priority = "4"
	test DeleteBlogsEntryRegRole {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "DELETE",
			resourceName = "com.liferay.blogs.model.BlogsEntry",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Permissions.removePermissionViaAPI(
			resourceAction = "DELETE",
			resourceName = "com.liferay.blogs.model.BlogsEntry",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test DeleteBlogsEntryRegRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test DeleteBlogsEntrySiteRole {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		Permissions.setUpSiteRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Roles Siterole Name",
			siteName = "Site Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Site Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "DELETE",
			resourceName = "com.liferay.blogs.model.BlogsEntry",
			roleTitle = "Roles Siterole Name",
			roleType = "site");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Permissions.removePermissionViaAPI(
			resourceAction = "DELETE",
			resourceName = "com.liferay.blogs.model.BlogsEntry",
			roleTitle = "Roles Siterole Name",
			roleType = "site");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Site Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test DeleteBlogsEntrySiteRoleInline {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		Permissions.setUpSiteRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Roles Siterole Name",
			siteName = "Site Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Site Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleTitle = "Roles Siterole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Site Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleTitle = "Roles Siterole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test DeleteBlogsEntrySiteTeamRoleInline {
		Permissions.setUpSiteTeamRoleLoginUserPG(
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			siteName = "Site Name",
			teamDescription = "Site Team Description",
			teamName = "Site Team Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Site Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Team.definePermissionPG(
			permissionDefinitionKey = "_ACTION_DELETE",
			teamName = "Site Team Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Site Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Team.removePermissionPG(
			permissionDefinitionKey = "_ACTION_DELETE",
			teamName = "Site Team Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test EditBlogsEntryOwnerRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_ENTRY",
			resourceName = "com.liferay.blogs",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_UPDATE_CHECKBOX",
			roleTitle = "Owner");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.editNoPermissionPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_UPDATE_CHECKBOX",
			roleTitle = "Owner");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoEditPG(entryTitle = "Blogs Entry Title");

		BlogsEntry.editTitle(
			entryTitle = "Blogs Entry Title",
			entryTitleEdit = "Blogs Entry Title Edit");

		BlogsEntry.editContent(
			entryContent = "Blogs Entry Content",
			entryContentEdit = "Blogs Entry Content Edit");

		PortletEntry.publish();

		BlogsEntry.viewEntryPG(
			entryContent = "Blogs Entry Content Edit",
			entryTitle = "Blogs Entry Title Edit");
	}

	@priority = "5"
	test SubscribeBlogsRegRole {
		property portal.acceptance = "false";

		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "SUBSCRIBE",
			resourceName = "com.liferay.blogs",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		Permissions.removePermissionViaAPI(
			resourceAction = "SUBSCRIBE",
			resourceName = "com.liferay.blogs",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test SubscribeBlogsRegRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Blogs");

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.definePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_SUBSCRIBE_CHECKBOX",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.subscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Blogs");

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.removePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_SUBSCRIBE_CHECKBOX",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test SubscribeBlogsSiteRoleInline {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		Permissions.setUpSiteMemberRoleLoginUserPG(
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Site Member",
			roleType = "Site",
			siteName = "Site Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsConfiguration.viewSubscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		Blogs.subscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Blogs");

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.removePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_SUBSCRIBE_CHECKBOX",
			roleTitle = "Site Member");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsConfiguration.viewNoSubscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "5"
	test ViewBlogsEntryPermissionsOwnerRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_blogs_web_portlet_BlogsAdminPortlet",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_ENTRY",
			resourceName = "com.liferay.blogs",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_PERMISSIONS_CHECKBOX",
			roleTitle = "Owner");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewPermissionsNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG(entryTitle = "Blogs Entry Title");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_PERMISSIONS_CHECKBOX",
			roleTitle = "Owner");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewPermissionsPG(entryTitle = "Blogs Entry Title");
	}

	@priority = "5"
	test ViewBlogsPermissionsRegRole {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CPRolesPGBlogs#ViewBlogsPermissionsRegRole";

		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "CONFIGURATION",
			resourceName = "com_liferay_blogs_web_portlet_BlogsPortlet",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "PERMISSIONS",
			resourceName = "com_liferay_blogs_web_portlet_BlogsPortlet",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewPermissionsPG();

		Permissions.removePermissionViaAPI(
			resourceAction = "CONFIGURATION",
			resourceName = "com_liferay_blogs_web_portlet_BlogsPortlet",
			roleTitle = "Regrole Name");

		Permissions.removePermissionViaAPI(
			resourceAction = "PERMISSIONS",
			resourceName = "com_liferay_blogs_web_portlet_BlogsPortlet",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test ViewBlogsPermissionsRegRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Blogs Page");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_CONFIGURATION_CHECKBOX",
			roleTitle = "Regrole Name");

		Navigator.gotoPage(pageName = "Blogs Page");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_PERMISSIONS_CHECKBOX",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewPermissionsPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Blogs Page");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_PERMISSIONS_CHECKBOX",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Blogs Page");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_CONFIGURATION_CHECKBOX",
			roleTitle = "Regrole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test ViewBlogsPermissionsSiteRole {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		Permissions.setUpSiteRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Roles Siterole Name",
			siteName = "Site Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsConfiguration.viewAsSiteMemberPG();

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "CONFIGURATION",
			resourceName = "com_liferay_blogs_web_portlet_BlogsPortlet",
			roleTitle = "Roles Siterole Name",
			roleType = "site");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "PERMISSIONS",
			resourceName = "com_liferay_blogs_web_portlet_BlogsPortlet",
			roleTitle = "Roles Siterole Name",
			roleType = "site");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsConfiguration.viewPermissionsPG();

		Permissions.removePermissionViaAPI(
			resourceAction = "PERMISSIONS",
			resourceName = "com_liferay_blogs_web_portlet_BlogsPortlet",
			roleTitle = "Roles Siterole Name",
			roleType = "site");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsConfiguration.viewAsSiteMemberPG();

		Permissions.removePermissionViaAPI(
			resourceAction = "CONFIGURATION",
			resourceName = "com_liferay_blogs_web_portlet_BlogsPortlet",
			roleTitle = "Roles Siterole Name",
			roleType = "site");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsConfiguration.viewAsSiteMemberPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test ViewBlogsPermissionsSiteRoleInline {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		Permissions.setUpSiteRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleTitle = "Roles Siterole Name",
			siteName = "Site Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsConfiguration.viewAsSiteMemberPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_CONFIGURATION_CHECKBOX",
			roleTitle = "Roles Siterole Name");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_PERMISSIONS_CHECKBOX",
			roleTitle = "Roles Siterole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsConfiguration.viewPermissionsPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_PERMISSIONS_CHECKBOX",
			roleTitle = "Roles Siterole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsConfiguration.viewAsSiteMemberPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_CONFIGURATION_CHECKBOX",
			roleTitle = "Roles Siterole Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Blogs Page",
			siteName = "Site Name");

		BlogsConfiguration.viewAsSiteMemberPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@priority = "4"
	test ViewBlogsPortletNoGuestRole {
		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Blogs Page");

		Navigator.gotoPage(pageName = "Blogs Page");

		Portlet.addPG(
			pageName = "Blogs Page",
			portletName = "Blogs");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();
	}

}